{"version":3,"sources":["../../inventory-management-system-reactjs/src/views/common/cart/customerAddress/CustomerAddress.js","../../inventory-management-system-reactjs/src/service/apiActions/modalAction/modalAction.js","../../inventory-management-system-reactjs/src/service/restAPI/AddressApiService.js","../../inventory-management-system-reactjs/src/service/apiActions/addressAction/addressAction.js","../../inventory-management-system-reactjs/src/components/modals/address/AddressModal.js"],"names":["CustomerAddress","Component","state","message","action","addresses","addressId","visible","retreiveAddressResponse","this","props","getAdress","manageAddressResponse","prevProps","prevState","addressResponse","status","data","setState","manageModalVisible","modalVisible","handleOnChange","event","value","target","checkValueOnChange","componentDidMount","userResponse","isLoggedIn","history","push","componentDidUpdate","render","cursorStyle","cursor","shape","color","variant","className","onClick","setAddressModal","size","style","marginLeft","map","address","index","checked","getValue","id","md","type","name","defaultChecked","undefined","onChange","firstName","lastName","city","fontStyle","role","connect","messageResponse","modalVisibleResponse","clearMessage","setProductModal","icon","async","dispatch","SET_PRODUCTEDITMODAL_VISIBILIT","payload","setProductDetailsModal","product","SET_PRODUCT_DETAILS_MODAL","editProductModal","updateProduct","EDIT_PRODUCT_MODAL","setAlertModal","alert","module","ALERT_MODAL","setAlertBanModal","ALERT_BAN_MODAL","addBrandModal","branch","ADD_BRAND_MODAL","brand","addCategoryModal","category","ADD_CATEGORY_MODAL","addAccountModal","employee","ADD_EMPLOYEE_MODAL","changePasswordModal","CHANGE_PASSWORD_MODAL","setLoginModal","LOGIN_MODAL","SET_ADDRESS_MODAL","setSupplierModal","supplier","SET_SUPPLIER_MODAL","setSupplyModal","supply","SET_SUPPLY_MODAL","setScanModal","SET_SCAN_MODAL","setPromoModal","promo","SET_PROMO_MODAL","getAddresses","axios","get","headers","authHeader","updateAddress","update","saveAddress","post","phoneNumber","region","province","barangay","street","postalCode","AddressApiService","then","response","GET_ADDRESSES","Promise","resolve","error","errorMessage","toString","code","SET_MESSAGE","reject","console","log","SAVE_ADDRESS","AddressModal","addressStates","loading","handleOnSubmit","preventDefault","handleSaveAddress","onResetValue","catch","prevPros","onDismiss","onSubmit","placeholder","required","htmlFor","disabled","form"],"mappings":"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","file":"static/js/37.aad4b371.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport {\n  CButton,\n  CRow,\n  CCol,\n  CCard,\n  CCardTitle,\n  CFormCheck,\n  CCardBody,\n  CAlert,\n} from \"@coreui/react\"\n\nimport { connect } from \"react-redux\"\n//icons\nimport * as FaIcons from \"react-icons/fa\"\n// modal\nimport AddressModal from \"src/components/modals/address/AddressModal\"\n//action\nimport { getAdress } from \"src/service/apiActions/addressAction/addressAction\"\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction\"\nimport { setAddressModal } from \"src/service/apiActions/modalAction/modalAction\"\n//history\nimport { history } from \"src/_helper/history\"\n\nexport class CustomerAddress extends Component {\n  state = {\n    message: \"\",\n    action: \"\",\n    addresses: [],\n    addressId: \"\",\n    visible: false,\n  }\n  componentDidMount() {\n    if (!this.props.userResponse.isLoggedIn) {\n      history.push(\"/login\")\n    } else {\n      this.retreiveAddressResponse()\n    }\n  }\n  retreiveAddressResponse = () => {\n    this.props.getAdress()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.manageAddressResponse(prevProps, prevState)\n    this.manageModalVisible(prevProps, prevState)\n  }\n  manageAddressResponse = (prevProps, prevState) => {\n    if (prevProps.addressResponse !== this.props.addressResponse) {\n      let { action, status, data } = this.props.addressResponse\n      if (action === \"GET_ADDRESSES\" && status === 200) {\n        this.setState({\n          addresses: data.addresses,\n        })\n      }\n    }\n  }\n  manageModalVisible = (prevProps, prevState) => {\n    if (prevProps.modalVisible !== this.props.modalVisible) {\n      let { action } = this.props.modalVisible\n      if (action === \"close\") {\n        this.retreiveAddressResponse()\n      }\n    }\n  }\n  handleOnChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      addressId: value,\n    })\n    this.props.checkValueOnChange(value)\n  }\n\n  render() {\n    let { message, addresses, visible } = this.state\n    const cursorStyle = {\n      cursor: \"pointer\",\n    }\n    return (\n      <>\n        <AddressModal />\n        <CButton\n          shape=\"rounded-pill\"\n          color=\"primary\"\n          variant=\"ghost\"\n          className=\"d-flex justify-content-center align-items-center mb-3\"\n          onClick={() =>\n            this.props.setAddressModal(\n              !visible,\n              \"Add\",\n              \"\",\n              <FaIcons.FaPlus size={20} className=\"me-2\" />,\n            )\n          }\n        >\n          <FaIcons.FaPlus size={20} />\n          <span style={{ marginLeft: \"10px\" }}>Add Branch</span>\n        </CButton>\n        <CRow>\n          {addresses.map((address, index) => {\n            let checked = this.props.getValue == address.id\n            return (\n              <CCol key={index} md={12} className=\"mb-3\">\n                <CCard\n                  className={\n                    checked ? \"border-envelope shadow\" : \"border-envelope\"\n                  }\n                >\n                  <CCardBody className=\"p-3 \">\n                    <div className=\"d-flex align-items-center justify-content-start\">\n                      <CFormCheck\n                        type=\"radio\"\n                        name=\"check\"\n                        id={\"address\" + address.id}\n                        style={cursorStyle}\n                        value={address.id}\n                        defaultChecked={\n                          this.props.getValue !== undefined ? checked : false\n                        }\n                        onChange={this.handleOnChange}\n                      />\n\n                      <CCardTitle className=\"ps-4\">\n                        {address.firstName + \" \" + address.lastName}\n                      </CCardTitle>\n                    </div>\n\n                    <div className=\"ps-5\">{address.city}</div>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            )\n          })}\n          <CCol className=\"m-3 text-center\" style={{ fontStyle: \"italic\" }}>\n            <CAlert color=\"warning\">\n              To Proceed to the next step Select or Add your Address Information\n            </CAlert>\n          </CCol>\n        </CRow>\n        {message && (\n          <div className=\"form-group d-flex justify-content-center align-items-center\">\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {message}\n            </div>\n          </div>\n        )}\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    addressResponse: state.addressResponse,\n    userResponse: state.userResponse,\n    messageResponse: state.messageResponse,\n    modalVisible: state.modalVisibleResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  getAdress,\n  clearMessage,\n  setAddressModal,\n})(CustomerAddress)\n","import {\n  ADD_BRANCH_MODAL,\n  ALERT_MODAL,\n  EDIT_PRODUCT_MODAL,\n  SET_PRODUCTEDITMODAL_VISIBILIT,\n  ADD_BRAND_MODAL,\n  ADD_CATEGORY_MODAL,\n  ADD_EMPLOYEE_MODAL,\n  SET_PRODUCT_DETAILS_MODAL,\n  LOGIN_MODAL,\n  SET_ADDRESS_MODAL,\n  SET_SUPPLIER_MODAL,\n  SET_SUPPLY_MODAL,\n  SET_SCAN_MODAL,\n  SET_PROMO_MODAL,\n  ALERT_BAN_MODAL,\n  CHANGE_PASSWORD_MODAL,\n} from \"src/service/redux/constants\"\n\nexport const setProductModal = (visible, action, icon) => async (dispatch) => {\n  dispatch({\n    type: SET_PRODUCTEDITMODAL_VISIBILIT,\n    payload: {\n      status: 200,\n      data: {\n        visible: visible,\n        action: action,\n        icon: icon,\n      },\n    },\n  })\n}\nexport const setProductDetailsModal =\n  (visible, action, product) => async (dispatch) => {\n    dispatch({\n      type: SET_PRODUCT_DETAILS_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          product: product,\n        },\n      },\n    })\n  }\nexport const editProductModal =\n  (visible, action, updateProduct, icon) => async (dispatch) => {\n    dispatch({\n      type: EDIT_PRODUCT_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          product: updateProduct,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const setAlertModal =\n  (alert, action, module, id) => async (dispatch) => {\n    dispatch({\n      type: ALERT_MODAL,\n      payload: {\n        action: action,\n        module: module,\n        alert: alert,\n        data: {\n          id: id,\n        },\n      },\n    })\n  }\nexport const setAlertBanModal =\n  (alert, action, module, id) => async (dispatch) => {\n    dispatch({\n      type: ALERT_BAN_MODAL,\n      payload: {\n        action: action,\n        module: module,\n        alert: alert,\n        data: {\n          id: id,\n        },\n      },\n    })\n  }\nexport const addBranchModal =\n  (visible, action, branch, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_BRANCH_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          branch: branch,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addBrandModal =\n  (visible, action, branch, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_BRAND_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          brand: branch,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addCategoryModal =\n  (visible, action, category, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_CATEGORY_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          category: category,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addAccountModal =\n  (visible, action, employee, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_EMPLOYEE_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          employee: employee,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const changePasswordModal =\n  (visible, action, employee, icon) => async (dispatch) => {\n    dispatch({\n      type: CHANGE_PASSWORD_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          employee: employee,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const setLoginModal = (visible, action) => async (dispatch) => {\n  dispatch({\n    type: LOGIN_MODAL,\n    payload: {\n      data: {\n        visible: visible,\n        action: action,\n      },\n    },\n  })\n}\n\nexport const setAddressModal =\n  (visible, action, address, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_ADDRESS_MODAL,\n      payload: {\n        data: {\n          visible: visible,\n          action: action,\n          address: address,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const setSupplierModal =\n  (visible, action, supplier, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_SUPPLIER_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          supplier: supplier,\n        },\n      },\n    })\n  }\nexport const setSupplyModal =\n  (visible, action, supply, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_SUPPLY_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          supply: supply,\n        },\n      },\n    })\n  }\n\nexport const setScanModal = (visible, action) => async (dispatch) => {\n  dispatch({\n    type: SET_SCAN_MODAL,\n    payload: {\n      action: action,\n      data: {\n        visible: visible,\n      },\n    },\n  })\n}\nexport const setPromoModal =\n  (visible, action, promo, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_PROMO_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          promo: promo,\n        },\n      },\n    })\n  }\n","import authHeader from '../auth/authHeader';\nimport axios from './RestApi'\n\nexport class AddressApiService {\n    getAddresses() {\n        return axios.get(\"/addresses\", {\n            headers: authHeader()\n        })\n    }\n    updateAddress(id, address) {\n        return axios.update(\"/addresses/update/\" + id, {\n            address\n        }, {\n            headers: authHeader()\n        })\n    }\n    saveAddress(address) {\n        return axios.post(\"/addresses/save\", {\n            firstName: address.firstName,\n            lastName: address.lastName,\n            phoneNumber: address.phoneNumber,\n            region: address.region,\n            city: address.city,\n            province: address.province,\n            barangay: address.barangay,\n            street: address.street,\n            postalCode: address.postalCode\n        }, {\n            headers: authHeader()\n        })\n    }\n}\n\nexport default new AddressApiService();","import { SET_MESSAGE } from \"src/constants/userConstants\";\nimport { GET_ADDRESSES, SAVE_ADDRESS } from \"src/service/redux/constants\";\nimport AddressApiService from \"src/service/restAPI/AddressApiService\"\n\nexport const getAdress = () => async (dispatch) => {\n    return AddressApiService.getAddresses().then(\n        (response) => {\n            dispatch({\n                type: GET_ADDRESSES,\n                payload: {\n                    status: 200,\n                    action: \"GET_ADDRESSES\",\n                    data: {\n                        addresses: response.data\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n}\n\nexport const saveAddress = (address) => async (dispatch) => {\n    console.log(address)\n    return AddressApiService.saveAddress(address).then(\n        (response) => {\n            dispatch({\n                type: SAVE_ADDRESS,\n                payload: {\n                    status: 200,\n                    action: \"SAVE_ADDRESS\",\n                    data: {\n                    }\n                }\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 200,\n                    data: {\n                        message: \"Address Successfully Saved\"\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n}","import React, { Component } from \"react\"\nimport {\n  CButton,\n  // CRow,\n  CCol,\n  CFormFloating,\n  CFormLabel,\n  CFormControl,\n  CForm,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CSpinner,\n} from \"@coreui/react\"\nimport { connect } from \"react-redux\"\n//action\nimport { setAddressModal } from \"src/service/apiActions/modalAction/modalAction\"\nimport { saveAddress } from \"src/service/apiActions/addressAction/addressAction\"\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction\"\nexport class AddressModal extends Component {\n  state = {\n    visible: false,\n    icon: \"\",\n    address: this.addressStates,\n    loading: false,\n    action: \"\",\n  }\n  addressStates = {\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    region: \"\",\n    city: \"\",\n    province: \"\",\n    barangay: \"\",\n    street: \"\",\n    postalCode: \"\",\n  }\n  componentDidUpdate(prevPros, prevState) {\n    this.manageModalVisible(prevPros, prevState)\n  }\n  manageModalVisible = (prevProps, prevState) => {\n    if (prevProps.modalVisible !== this.props.modalVisible) {\n      let { visible, action, address, icon } = this.props.modalVisible\n      if (action === \"Add\") {\n        this.setState({\n          visible: visible,\n          icon: icon,\n          action: action,\n        })\n      } else if (action === \"Edit\") {\n        this.setState({\n          visible: visible,\n          icon: icon,\n          action: action,\n        })\n      } else {\n        this.setState({\n          visible: visible,\n          icon: \"\",\n          action: \"\",\n        })\n      }\n    }\n  }\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n  handleOnSubmit = (event) => {\n    event.preventDefault()\n    this.setState({\n      loading: true,\n    })\n    let {\n      action,\n      firstName,\n      lastName,\n      phoneNumber,\n      region,\n      city,\n      province,\n      barangay,\n      street,\n      postalCode,\n    } = this.state\n\n    let address = {\n      firstName: firstName,\n      lastName: lastName,\n      phoneNumber: phoneNumber,\n      region: region,\n      city: city,\n      province: province,\n      barangay: barangay,\n      street: street,\n      postalCode: postalCode,\n    }\n    if (action === \"Add\") {\n      this.handleSaveAddress(address)\n    } else if (action === \"Edit\") {\n    }\n  }\n  onResetValue = () => {\n    this.setState(() => this.addressStates)\n  }\n  handleSaveAddress = (address) => {\n    this.props\n      .saveAddress(address)\n      .then(() => {\n        let { status } = this.props.messageResponse\n        if (status === 200) {\n          this.setState({\n            loading: false,\n          })\n          this.onResetValue()\n        }\n      })\n      .catch(() => {\n        let { status, data } = this.props.messageResponse\n        this.setState({\n          loading: false,\n        })\n      })\n  }\n\n  render() {\n    let {\n      visible,\n      firstName,\n      lastName,\n      phoneNumber,\n      region,\n      city,\n      province,\n      barangay,\n      street,\n      postalCode,\n      loading,\n      action,\n    } = this.state\n    return (\n      <>\n\n        <CModal size=\"lg\" visible={visible}>\n          <CModalHeader\n            onDismiss={() => this.props.setAddressModal(false, \"close\", \"\", \"\")}\n          >\n            <CModalTitle>Customer Address</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CForm\n              className=\"row g-3\"\n              id=\"address-form\"\n              onSubmit={this.handleOnSubmit}\n            >\n              <CCol md={6}>\n                <CFormFloating className=\"mb-3\">\n                  <CFormControl\n                    name=\"firstName\"\n                    type=\"text\"\n                    id=\"floatingFirstName\"\n                    placeholder=\"First name\"\n                    value={firstName}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingFirstName\">\n                    First name\n                  </CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={6}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"lastName\"\n                    type=\"text\"\n                    id=\"floatingLastName\"\n                    placeholder=\"Last name\"\n                    value={lastName}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingLastName\">Last name</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={6}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"phoneNumber\"\n                    type=\"tel\"\n                    required\n                    // pattern=\"^(09|\\+639)\\d{9}$\"\n                    id=\"floatingPhoneNumber\"\n                    placeholder=\"Last name\"\n                    value={phoneNumber}\n                    onChange={this.handleOnChange}\n                  />\n                  <CFormLabel htmlFor=\"floatingPhoneNumber\">\n                    Phone number\n                  </CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={6}>\n                <CFormFloating className=\"mb-3\">\n                  <CFormControl\n                    name=\"region\"\n                    type=\"text\"\n                    id=\"floatingRegion\"\n                    placeholder=\"Region\"\n                    value={region}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingRegion\">Region</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={5}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"city\"\n                    type=\"text\"\n                    id=\"floatingCity\"\n                    placeholder=\"City\"\n                    value={city}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingCity\">City</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={4}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"province\"\n                    type=\"text\"\n                    id=\"floatingProvince\"\n                    placeholder=\"Province\"\n                    value={province}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingProvince\">Province</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={3}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"postalCode\"\n                    type=\"number\"\n                    id=\"floatingPostalCode\"\n                    placeholder=\"Postal Code\"\n                    value={postalCode}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingPostalCode\">\n                    Postal code\n                  </CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={12} className=\"mt-4 pt-2\">\n                <CFormFloating>\n                  <CFormControl\n                    name=\"barangay\"\n                    type=\"text\"\n                    id=\"floatingBarangay\"\n                    placeholder=\"Barangay\"\n                    value={barangay}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingBarangay\">Barangay</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={12} className=\"mt-4 pt-2\">\n                <CFormFloating>\n                  <CFormControl\n                    name=\"street\"\n                    type=\"text\"\n                    id=\"floatingStreet\"\n                    placeholder=\"Street\"\n                    value={street}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingStreet\">1234 Main St</CFormLabel>\n                </CFormFloating>\n              </CCol>\n            </CForm>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              color=\"dark\"\n              variant=\"ghost\"\n              onClick={() => {\n                this.props.setAddressModal(false, \"close\", \"\", \"\")\n                // this.props.clearMessage();\n              }}\n            >\n              Close\n            </CButton>\n            <CButton\n              color=\"info\"\n              disabled={loading}\n              type=\"submit\"\n              form=\"address-form\"\n            >\n              {loading && <CSpinner size=\"sm\" className=\"ms-1\" />}\n              Save {action === \"Edit\" ? \"Changes\" : \"Branch\"}\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    modalVisible: state.modalVisibleResponse,\n    messageResponse: state.messageResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  setAddressModal,\n  saveAddress,\n  clearMessage,\n})(AddressModal)\n"],"sourceRoot":""}