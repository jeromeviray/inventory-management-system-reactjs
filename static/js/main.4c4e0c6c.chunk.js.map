{"version":3,"sources":["router/config/index.js","service/restAPI/UserService.js","service/auth/authService.js","service/apiActions/userAction/userAction.js","router/config/Roles.js","service/redux/constants.js","constants/userConstants.js","config.js","router/privateRouter/PrivateRouter.js","App.js","serviceWorker.js","service/redux/reducers/productReducer.js","service/redux/reducers/carouselReducer.js","service/redux/reducers/changeStateReducer.js","service/redux/reducers/modalVisibilityReducer.js","service/redux/reducers/userReducer.js","service/redux/reducers/messageReducer.js","service/redux/reducers/routesReducer.js","service/redux/reducers/branchReducer.js","service/redux/reducers/brandReducer.js","service/redux/reducers/orderReducer.js","service/redux/reducers/accountReducer.js","service/redux/reducers/cartReducer.js","service/redux/reducers/addressReducer.js","service/redux/reducers/paymentReducer.js","service/redux/reducers/inventoryReducer.js","service/redux/reducers/supplierReducer.js","service/redux/reducers/incomingSupplyReducer.js","service/redux/reducers/categoryReducer.js","service/redux/reducers/promoReducer.js","service/redux/reducers/scannerReducer.js","service/redux/reducers/wishlistReducer.js","service/redux/reducers/commentReducer.js","service/redux/reducers/dashboardReducer.js","service/redux/reducers/index.js","store.js","index.js","service/restAPI/RestApi.js"],"names":["Roles","login","username","password","http","post","register","email","firstName","lastName","phoneNumber","UserService","then","response","data","localStorage","setItem","JSON","stringify","logout","removeItem","authenticateUser","async","authService","dispatch","type","LOGIN_SUCCESS","payload","credentials","SET_MESSAGE","status","message","Promise","resolve","error","errorMessage","toString","LOGIN_FAIL","reject","createAccount","console","log","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT","SUPER_ADMIN","ADMIN","CUSTOMER","USER","ROLE_USER","GET_PRODUCTS","GET_PRODUCT","DELETE_PRODUCT","UPDATE_PRODUCT","SAVE_PRODUCT","SAVE_FAIL","UPDATE_FAIL","GET_IMAGE","FAIL_GET_IMAGE","GET_PRODUCT_DETAILS","GET_PRODUCT_BY_CATEGORY_NAME","SET_IMAGE_MESSAGE","SET_PRODUCT_MESSAGE","GET_CAROUSEL_IMAGES","CAROUSEL_FOLDER_DIRECTORY","SET_SIDEBAR","SET_SIDEBAR_UNFOLD","SET_PRODUCTEDITMODAL_VISIBILIT","EDIT_PRODUCT_MODAL","ALERT_MODAL","ALERT_BAN_MODAL","ADD_BRANCH_MODAL","ADD_BRAND_MODAL","ADD_CATEGORY_MODAL","ADD_EMPLOYEE_MODAL","SET_PRODUCT_DETAILS_MODAL","LOGIN_MODAL","SET_ADDRESS_MODAL","SET_SUPPLIER_MODAL","SET_SUPPLY_MODAL","SET_SCAN_MODAL","SET_PROMO_MODAL","CHANGE_PASSWORD_MODAL","API_BASE_URL","config","api","private","baseUrl","FRONT_END_BASED_URL","baseFrontendUrl","OAUTH2_REDIRECT_URI","ACCESS_TOKEN","REFRESH_TOKEN","USERNAME","GOOGLE_AUTH_URL","GET_BRANCH","GET_BRANCH_TOTAL_PRODUCT","SAVE_BRANCH","UPDATE_BRANCH","DELETE_BRANCH","GET_DISCOVER_PRODUCT","GET_PUBLIC_PRODUCT","SEARCH_PRODUCT","GET_PRODUCTS_BY_STATUS","GET_PRODUCTS_WITH_PROMO","GET_BRANDS","GET_BRAND","SAVE_BRAND","UPDATE_BRAND","DELETE_BRAND","FAIL_BRAND","CLEAR_BRAND","GET_ORDERS","CONFIRM_ORDER","PLACE_ORDER","ORDER_ITEMS","GET_ORDER_BY_ID","UPDATE_ORDER_STATUS","UPDATE_PAYMENT_STATUS","GET_PAYMENT_TRANSACTIONS","SAVE_CUSTOMER_ADDRESS","UPDATE_CUSTOMER_ADDRESS","GET_CUSTOMER_ADDRESSES","GET_CUSTOMER_ADDRESS","DELETE_CUSTOMER_ADDRESS","GET_USERS_ACCOUNT","SAVE_EMPLOYEE","CHANGE_PASSWORD","DELETE_ACCOUNT","FORGOT_PASSWORD","VALIDATE_TOKEN","RESET_PASSWORD","GET_ME","BAN_ACCOUNT","UPDATE_USER","ADD_TO_CART","GET_CART_ITEMS","REMOVE_ITEM","GET_ADDRESSES","UPDATE_ADDRESS","SAVE_ADDRESS","GET_PAYMENT_METHODS","GET_PAYMENT_METHOD","GET_INVENTORIES","GET_INVENTORY","CREATE_SUPPLIER","UPDATE_SUPPLIER","DELETE_SUPPLIER","GET_SUPPLIERS","GET_SUPPLIER","SAVE_INCOMING_SUPPLY","GET_INCOMING_SUPPLIES","GET_INCOMING_SUPPLIES_BY_PENDING_STATUS","GET_INCOMING_SUPPLIES_BY_DELIVERED_STATUS","GET_INCOMING_SUPPLY","DELETE_INCOMING_SUPPLY","UPDATE_INCOMING_SUPPLY","DELIVERED_INCOMING_SUPPLY","SHIP_INCOMING_SUPPLY","MARK_INCOMING_SUPPLY_AS_DELIVERED","NO_IMAGE_BASE64","SAVE_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","GET_CATEGORIES","GET_CATEGORY","GET_CATEGORIES_LIST","GET_PROMOS","GET_PROMO","SAVE_PROMO","UPDATE_PROMO","DELETE_PROMO","GET_DECODED_BARCODE","SEARCH_PRODUCT_TEXT","GET_WISHLIST","DELETE_WISHLIST","ADD_WISHLIST","GET_COMMENTS","DELETE_COMMENT","ADD_COMMENT","GET_TOTALS","GET_PRODUCTS_COUNT_TOTAL_SOLD","CLEAR_MESSAGE","dev","prefixFrontendUrl","test","env","process","trim","getEnv","PrivateRouter","component","Component","roles","name","rest","isLoggedIn","useSelector","state","userResponse","render","props","to","loading","className","color","size","DefaultLayout","React","lazy","PublicLayout","Login","Register","Page404","Page500","RedirectSuccessHandler","ForgotPassword","CustomerLayout","App","componentDidUpdate","prevProps","prevState","this","manageResponse","messageResponse","failMessage","setTimeout","toast","window","location","reload","Suspense","fallback","exact","path","connect","Boolean","hostname","match","productReducer","action","notificationType","undefined","products","product","updatedProduct","actin","carouselReducer","statusType","carouselData","carouselResponse","carouselImages","changeStateReducer","sidebarState","modalVisibilityReducer","visible","icon","alert","module","id","branch","brand","category","employee","address","supplier","supply","promo","parse","getItem","initialState","userReducer","messageReducer","order","routesReducer","routes","require","branchReducer","branches","brandReducer","brands","orderReducer","orders","orderStatusCount","payments","items","accoutReducer","accounts","cartReducer","cart","addressReducer","addresses","paymentReducer","paymentMethods","inventoryReducer","inventories","supplierReducer","suppliers","incomingSupplyReducer","incomingSupplies","incomingSupply","categoryReducer","categories","updatedCategory","categoriesList","promoReducer","productsWithPromo","updatedPromo","scannerReducer","decoded","wishlistReducer","commentReducer","dashboardReducer","summaries","combineReducers","modalVisibleResponse","productResponser","changeStateResponse","carouselResponser","branchResponse","brandResponse","orderResponse","accountResponse","accountReducer","routesResponse","browserSize","responsiveStateReducer","cartResponse","addressResponse","paymentMethodResponse","inventoryResponse","supplierResponse","incomingSupplyResponse","categoryResponse","promoResponse","scannerResponse","wishlistResponse","commentResponse","dashboardResponse","createStore","reducers","compose","responsiveStoreEnhancer","applyMiddleware","thunk","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","axios","create","baseURL","headers"],"mappings":"qKAAA,aAIeA,MAAf,G,mJCOe,UATf,MACIC,MAAMC,EAAUC,GACZ,OAAOC,IAAKC,KAAK,iBAAkB,CAAEH,WAAUC,aAEnDG,SAASJ,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,GACrD,OAAON,IAAKC,KAAK,0BAA2B,CAAEH,WAAUC,WAAUI,QAAOC,YAAWC,WAAUC,kBCevF,UAlBf,MACIT,MAAMC,EAAUC,GACZ,OAAOQ,EAAYV,MAAMC,EAAUC,GAC9BS,MAAMC,IACCA,EAASC,MACTC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUL,EAASC,OAEzDD,EAASC,QAG5BK,SACIJ,aAAaK,WAAW,eAE5Bd,SAASJ,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,GACrD,OAAOC,EAAYL,SAASJ,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,K,QCP7E,MAAMW,EAAmB,CAACnB,EAAUC,IAAamB,SAC7CC,EAAYtB,MAAMC,EAAUC,GAAUS,MACxCE,IACGU,EAAS,CACLC,KAAMC,IACNC,QAAS,CAAEC,YAAad,KAE5BU,EAAS,CACLC,KAAMI,IACNF,QAAS,CACLG,OAAQ,IACRhB,KAAM,CACFiB,QAAS,0BAIdC,QAAQC,aAElBC,IACG,MAAMC,EACDD,EAAMrB,UACHqB,EAAMrB,SAASC,MACfoB,EAAMrB,SAASC,KAAKiB,SACxBG,EAAMH,SACNG,EAAME,WAcV,OAZAZ,EAAS,CACLC,KAAMY,MAEVb,EAAS,CACLC,KAAMI,IACNF,QAAS,CACLG,OAAQ,IACRhB,KAAM,CACFiB,QAASI,MAIdH,QAAQM,YAKdC,EAAgB,CAACrC,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,IAAgBY,UAC1FkB,QAAQC,IAAIvC,GACLqB,EAAYjB,SAASJ,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,GACvEE,MACIC,IACGW,EAAS,CACLC,KAAMiB,MAEVlB,EAAS,CACLC,KAAMI,IACNF,QAAS,CACLG,OAAQ,IACRhB,KAAM,CACFiB,QAAS,4BAIdC,QAAQC,aAGlBC,IACG,MAAMH,EAAWG,EAAMrB,UACnBqB,EAAMrB,SAASC,MACfoB,EAAMrB,SAASC,KAAKiB,SACpBG,EAAMH,SACNG,EAAME,WAeV,OAbAZ,EAAS,CACLC,KAAMkB,MAGVnB,EAAS,CACLC,KAAMI,IACNF,QAAS,CACLG,OAAQ,IACRhB,KAAM,CACFiB,QAASA,MAIdC,QAAQM,aAQlBnB,EAAS,IAAOK,IACzBD,EAAYJ,SACZK,EAAS,CACLC,KAAMmB,Q,iCCtGC,KACXC,YAAa,cACbC,MAAO,QACPC,SAAU,WACVC,KAAM,OACNC,UAAW,c,+BCRf,uqMAEO,MAAMC,EAAe,eACfC,EAAc,cACdC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAe,eACfC,EAAY,oBACZC,EAAc,sBACdC,EAAY,YACZC,EAAiB,iBACjBC,EAAsB,sBACtBC,EAA+B,+BAE/BC,EAAoB,oBACpBC,EAAsB,sBAGtBC,EAAsB,sBACtBC,EAA4B,aAG5BC,EAAc,cACdC,EAAqB,qBAGrBC,EAAiC,uBACjCC,EAAqB,qBACrBC,EAAc,cACdC,EAAkB,kBAClBC,EAAmB,oBACnBC,EAAkB,kBAClBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAA4B,4BAC5BC,EAAc,cACdC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAwB,wBAGxBC,EAAeC,IAAOC,IAAIC,QAAQC,QAClCC,EAAsBJ,IAAOC,IAAIC,QAAQG,gBAEzCC,EAAsBP,EAAe,mBAErCQ,EAAe,cACfC,EAAgB,eAChBC,EAAW,WACXC,EACXX,EAAe,yCAA2CO,EAG/CK,EAAa,aACbC,EAA2B,2BAC3BC,EAAc,cACdC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAiB,iBACjBC,EAAyB,yBACzBC,EAA0B,0BAG1BC,GAAa,aACbC,GAAY,YACZC,GAAa,aACbC,GAAe,eACfC,GAAe,eACfC,GAAa,aACbC,GAAc,cAGdC,GAAa,aACbC,GAAgB,gBAChBC,GAAc,cACdC,GAAc,cACdC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAwB,wBACxBC,GAA2B,2BAE3BC,GAAwB,wBACxBC,GAA0B,0BAC1BC,GAAyB,yBACzBC,GAAuB,uBACvBC,GAA0B,0BAE1BC,GAAoB,oBACpBC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAS,SACTC,GAAc,cACdC,GAAc,cAEdC,GAAc,cACdC,GAAiB,iBACjBC,GAAc,cAGdC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAe,eAGfC,GAAsB,sBACtBC,GAAqB,qBAGrBC,GAAkB,kBAClBC,GAAgB,gBAGhBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAgB,gBAChBC,GAAe,eAGfC,GAAuB,uBACvBC,GAAwB,wBACxBC,GACX,0CACWC,GACX,4CACWC,GAAsB,sBACtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAA4B,4BAC5BC,GAAuB,uBACvBC,GACX,oCAEWC,GAAkB,wBAElBC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAe,eACfC,GAAsB,sBAGtBC,GAAa,aACbC,GAAY,YACZC,GAAa,aACbC,GAAe,eACfC,GAAe,eACfC,GAAsB,sBAGtBC,GAAsB,sBAGtBC,GAAe,eACfC,GAAkB,kBAClBC,GAAe,eAEfC,GAAe,eACfC,GAAiB,iBACjBC,GAAc,cAGdC,GAAa,aACbC,GAAgC,iC,gCC7K7C,8OACO,MAAM3I,EAAmB,mBACnBC,EAAgB,gBAChBjB,EAAgB,gBAChBW,EAAa,aACbO,EAAS,SAETf,EAAc,cACdyJ,EAAgB,iB,gCCR7B,MAAMC,EAAM,CACVlG,IAAK,CACHC,QAAS,CACPC,QAAS,wBACTE,gBAAiB,wBACjB+F,kBAAmB,MAKnBC,EAAO,CACXpG,IAAK,CACHC,QAAS,CACPC,QAAS,0CACTE,gBAAiB,wCACjB+F,kBAAmB,0CAanBpG,EARS,WACb,IAAIsG,EAAMC,QACV,MAAmB,qBAARD,EAA4BH,GACvCG,EAAMA,EAAIE,OACE,QAARF,EAAsBH,EACd,SAARG,EAAuBD,OAA3B,GAGaI,GAEA,QACVzG,I,khCCfU0G,MAXO,EAAGC,UAAWC,EAAWC,QAAOC,UAASC,MAC3D,MAAMC,EAAaC,aAAaC,GAAUA,EAAMC,aAAaH,aAC7D,OACI,cAAC,IAAD,IAAWD,EAAMK,OAAQC,GACrBL,EAAa,cAACJ,EAAD,IAAeS,IACtB,cAAC,IAAD,CAAUC,GAAItH,IAAOC,IAAIC,QAAQkG,kBAAoB,c,wCCWvE,MAAMmB,EACJ,qBAAKC,UAAU,oEAAf,SACE,cAAC,YAAD,CAAWC,MAAM,UAAUC,KAAM,QAK/BC,EAAgBC,IAAMC,MAAK,IAAM,6EACjCC,EAAeF,IAAMC,MAAK,IAAM,6EAGhCE,EAAQH,IAAMC,MAAK,IAAM,sEACzBG,EAAWJ,IAAMC,MAAK,IAC1B,sEAEII,EAAUL,IAAMC,MAAK,IACzB,8DAEIK,EAAUN,IAAMC,MAAK,IACzB,+DAEIM,EAAyBN,gBAAK,IAClC,kCAEIO,EAAiBR,IAAMC,MAAK,IAChC,6EAGIQ,EAAiBT,IAAMC,MAAK,IAAM,6EAExC,MAAMS,UAAY1B,YAChB2B,mBAAmBC,EAAWC,GAC5BC,KAAKC,eAAeH,EAAWC,GAGjCE,eAAeH,EAAWC,GACxB,GAAIC,KAAKrB,MAAMuB,iBAAmBJ,EAAUI,gBAAiB,CAC3D,IAAIC,EAAcH,KAAKrB,MAAMuB,gBACzBC,EAAYnM,OAAS,KAAOmM,EAAYnM,QAAU,IACpDoM,YAAW,KACTC,YAAM,kBAAoBF,EAAYnN,KAAKiB,SAC3C+L,KAAKrB,MAAMtL,SACXiN,OAAOC,SAASC,WACf,KACML,EAAYnN,MAAQmN,EAAYnN,KAAKiB,SAC9CoM,YAAMF,EAAYnN,KAAKiB,UAI7ByK,SAEE,OACE,qCAEE,cAAC,IAAD,UACE,cAAC,IAAM+B,SAAP,CAAgBC,SAAU7B,EAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE8B,OAAK,EACLC,KAAMtJ,IAAOC,IAAIC,QAAQkG,kBAAoB,mBAC7CU,KAAK,kBACLM,OAASC,GAAU,cAACc,EAAD,IAA4Bd,MAEjD,cAAC,IAAD,CACEgC,OAAK,EACLC,KAAMtJ,IAAOC,IAAIC,QAAQkG,kBAAoB,SAC7CU,KAAK,aACLM,OAASC,GAAU,cAACU,EAAD,IAAWV,MAEhC,cAAC,IAAD,CACEgC,OAAK,EACLC,KAAMtJ,IAAOC,IAAIC,QAAQkG,kBAAoB,mBAC7CU,KAAK,kBACLM,OAASC,GAAU,cAACe,EAAD,IAAoBf,MAEzC,cAAC,IAAD,CACEgC,OAAK,EACLC,KAAMtJ,IAAOC,IAAIC,QAAQkG,kBAAoB,YAC7CU,KAAK,gBACLM,OAASC,GAAU,cAACW,EAAD,IAAcX,MAEnC,cAAC,IAAD,CACEgC,OAAK,EACLC,KAAMtJ,IAAOC,IAAIC,QAAQkG,kBAAoB,OAC7CU,KAAK,WACLM,OAASC,GAAU,cAACa,EAAD,IAAab,MAElC,cAAC,IAAD,CACEgC,OAAK,EACLC,KAAMtJ,IAAOC,IAAIC,QAAQkG,kBAAoB,OAC7CU,KAAK,WACLM,OAASC,GAAU,cAACY,EAAD,IAAaZ,MAElC,cAAC,EAAD,CACEiC,KAAMtJ,IAAOC,IAAIC,QAAQkG,kBAAoB,OAC7CO,UAAWgB,IAEb,cAAC,EAAD,CACE2B,KAAMtJ,IAAOC,IAAIC,QAAQkG,kBAAoB,QAC7CO,UAAW0B,IAEb,cAAC,IAAD,CACEiB,KAAK,IACLxC,KAAM9G,IAAOC,IAAIC,QAAQkG,kBAAoB,SAC7CgB,OAASC,GAAU,cAACS,EAAD,IAAkBT,aAK7C,cAAC,IAAD,QAeOkC,mBATUrC,IAGhB,CACLF,WAHiBE,EAAMC,aAAaH,WAIpCxK,YAHkB0K,EAAMC,aAAa3K,YAIrCoM,gBAAiB1B,EAAM0B,mBAGa,CACtC7M,YADawN,CAEZjB,GCzIiBkB,QACW,cAA7BR,OAAOC,SAASQ,UAEe,UAA7BT,OAAOC,SAASQ,UAEhBT,OAAOC,SAASQ,SAASC,MACvB,2D,2BCsGSC,MArGQ,CAACzC,EAAQ,GAAI0C,KAClC,IAAIlN,EAAS,IACTmN,EAAmB,OACnBnO,EAAO,QACYoO,IAAnBF,EAAOrN,cAAmDuN,IAA1BF,EAAOrN,QAAQG,SACjDA,EAASkN,EAAOrN,QAAQG,OACxBmN,EAAmB,UACfnN,GAAU,MACZmN,EAAmB,SAErBnO,EAAOkO,EAAOrN,QAAQb,MAGxB,IAAID,EAAW,CACboO,iBAAkBA,EAClBxN,KAAMuN,EAAOvN,KACbK,OAAQA,EACRkN,OAAQ,QAGV,OAAQA,EAAOvN,MACb,KAAKyB,eACHrC,EAAQ,KAAWC,EAAKqO,SACxB,MACF,KAAKhM,cACH,MAAmB,CACjB1B,KAAMuN,EAAOvN,KACbK,OAAQkN,EAAOrN,QAAQG,OACvBkN,OAAQ,UACRlO,KAAM,CACJsO,QAASJ,EAAOrN,QAAQb,KAAKsO,UAGnC,KAAKhJ,uBACH,MAAO,CACLtE,OAAQkN,EAAOrN,QAAQG,OACvBkN,OAAQ,WACRlO,KAAM,CACJqO,SAAUH,EAAOrN,QAAQb,KAAKqO,WAGpC,KAAKxL,sBACH,MAAO,CACL7B,OAAQkN,EAAOrN,QAAQG,OACvBkN,OAAQ,UACRlO,KAAM,CACJsO,QAASJ,EAAOrN,QAAQb,KAAKsO,UAGnC,KAAK/L,iBACH,MAAO,CACLvB,OAAQkN,EAAOrN,QAAQG,OACvBkN,OAAQA,EAAOrN,QAAQqN,OACvBlO,KAAM,CACJuO,eAAgBL,EAAOrN,QAAQ0N,iBAGrC,KAAKjM,iBACH,MAAO,CACLtB,OAAQkN,EAAOrN,QAAQG,OACvBkN,OAAQA,EAAOrN,QAAQ2N,MACvBxO,KAAM,IAEV,KAAKwF,iBAQL,KAAK1C,+BAQL,KAAK2C,yBAQL,KAAKC,0BACH,MAAO,CACL1E,OAAQkN,EAAOrN,QAAQG,OACvBkN,OAAQA,EAAOrN,QAAQqN,OACvBlO,KAAM,CACJqO,SAAUH,EAAOrN,QAAQb,KAAKqO,WAGpC,QACE,OAAO7C,EAEX,OAAOzL,GCnFM0O,MA9BS,CAACjD,EAAQ,GAAI0C,KACnC,IAAIlN,EAAS,IACT0N,EAAa,OACbC,EAAe,QAEIP,IAAnBF,EAAOrN,cAAmDuN,IAA1BF,EAAOrN,QAAQG,SACjDA,EAASkN,EAAOrN,QAAQG,OACxB0N,EAAa,UACT1N,GAAU,MACZ0N,EAAa,SAEfC,EAAeT,EAAOrN,QAAQb,MAEhC,IAAI4O,EAAmB,CACrBF,WAAYA,EACZ/N,KAAMuN,EAAOvN,KACbK,OAAQA,EACRkN,OAAQ,YAGV,OAAQA,EAAOvN,MACb,KAAKsC,sBACH2L,EAAgB,aAAmBD,EAAaE,eAChD,MACF,QACE,OAAOrD,EAEX,OAAOoD,GCPME,MApBY,CAACtD,EAAQ,GAAI0C,KACtC,IAAInO,EAAW,CACbY,KAAMuN,EAAOvN,KACbuN,OAAQA,EAAOvN,KACf6K,MAAO,IAGT,OAAQ0C,EAAOvN,MACb,KAAKwC,cACHpD,EAASyL,MAAMuD,aAAeb,EAAOrN,QAAQb,KAAK+O,aAClD,MAIF,QACE,OAAOvD,EAEX,OAAOzL,GCmHMiP,MAnHgB,CAACxD,EAAQ,GAAI0C,KAC1C,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACN,KAAK0C,iCAEH,MAAO,CACL4L,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,OACrBgB,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAK5L,qBACH,MAAO,CACL2L,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,OACrBI,QAASzN,EAAQb,KAAKsO,QACtBY,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAK3L,cAOL,KAAKC,kBACH,MAAO,CACL2L,MAAOtO,EAAQsO,MACfjB,OAAQrN,EAAQqN,OAChBkB,OAAQvO,EAAQuO,OAChBC,GAAIxO,EAAQb,KAAKqP,IAErB,KAAK5L,mBACH,MAAO,CACLwL,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,OACrBoB,OAAQzO,EAAQb,KAAKsP,OACrBJ,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAKxL,kBACH,MAAO,CACLuL,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,OACrBqB,MAAO1O,EAAQb,KAAKuP,MACpBL,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAKvL,qBACH,MAAO,CACLsL,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,OACrBsB,SAAU3O,EAAQb,KAAKwP,SACvBN,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAKtL,qBAOL,KAAKQ,wBACH,MAAO,CACL6K,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,OACrBuB,SAAU5O,EAAQb,KAAKyP,SACvBP,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAKrL,4BACH,MAAO,CACLoL,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,OACrBI,QAASzN,EAAQb,KAAKsO,SAE1B,KAAKxK,cACH,MAAO,CACLmL,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,QAEzB,KAAKnK,oBACH,MAAO,CACLkL,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQb,KAAKkO,OACrBwB,QAAS7O,EAAQb,KAAK0P,QACtBR,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAKlL,qBACH,MAAO,CACLiL,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQqN,OAChByB,SAAU9O,EAAQb,KAAK2P,SACvBT,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAKjL,mBACH,MAAO,CACLgL,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQqN,OAChB0B,OAAQ/O,EAAQb,KAAK4P,OACrBV,KAAMrO,EAAQb,KAAKkP,MAEvB,KAAKhL,iBACH,MAAO,CACL+K,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQqN,QAEpB,KAAK/J,kBACH,MAAO,CACL8K,QAASpO,EAAQb,KAAKiP,QACtBf,OAAQrN,EAAQqN,OAChB2B,MAAOhP,EAAQb,KAAK6P,MACpBX,KAAMrO,EAAQb,KAAKkP,MAEvB,QACE,OAAO1D,I,QC1Hb,MAAM1K,EAAcX,KAAK2P,MAAM7P,aAAa8P,QAAQ,gBAE9CC,EAAelP,EACf,CAAEwK,YAAY,EAAMxK,eACpB,CAAEwK,YAAY,EAAOxK,YAAa,MAsCzBmP,MApCK,CAACzE,EAAQwE,EAAc9B,KACvC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAE1B,OAAQvN,GACJ,KAAKiB,IAKL,KAAKC,IACD,MAAO,IACA2J,EACHF,YAAY,GAEpB,KAAK1K,IACD,MAAO,IACA4K,EACHF,YAAY,EACZxK,YAAaD,EAAQC,aAE7B,KAAKS,IAML,KAAKO,IACD,MAAO,IACA0J,EACHF,YAAY,EACZxK,YAAa,MAErB,QACI,OAAO0K,IC5CnB,MAAMwE,EAAe,GAoCNE,MAlCQ,CAAC1E,EAAQwE,EAAc9B,KAC1C,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACJ,KAAKI,IACD,MAAO,CACHmN,OAAQvN,EACRK,OAAQH,EAAQG,OAChBhB,KAAM,CACFiB,QAASJ,EAAQb,KAAKiB,QACtBkP,MAAOtP,EAAQb,KAAKmQ,QAIhC,KAAK3F,IACD,MAAO,CACH0D,OAAQvN,EACRK,OAAQ,GACRhB,KAAM,CACFiB,QAAS,KAIrB,KAAK+B,sBACD,MAAO,CACHkL,OAAQvN,EACRK,OAAQH,EAAQG,OAChBhB,KAAM,CACFiB,QAASJ,EAAQb,KAAKiB,UAGlC,QACI,OAAOuK,I,SCtBJ4E,MAZO,CAAC5E,EAAQ,GAAI0C,KAC/B,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAE1B,OAAQvN,GACJ,KAAKzB,IACD,MAAO,CACHmR,OAAQxP,GAEhB,QAAS,OAAO2K,ICVxB,MAAM,WAAEvG,EAAF,yBAAcC,EAAd,YAAwCC,EAAxC,cAAqDC,GAAkBkL,EAAQ,GAsCtEC,MApCO,CAAC/E,EAAQ,GAAI0C,KAC/B,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACJ,KAAKsE,EACD,MAAO,CACHjE,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACFsP,OAAQzO,EAAQb,KAAKwQ,WAGjC,KAAKtL,EACD,MAAO,CACHlE,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACFwQ,SAAU3P,EAAQb,KAAKwQ,WAGnC,KAAKrL,EACD,MAAO,CACHnE,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,QAExB,KAAK9I,EACD,MAAO,CACHpE,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,IAId,QACI,OAAOwL,ICDJiF,MAhCM,CAACjF,EAAQ,GAAI0C,KAC9B,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACJ,KAAKgF,aACD,MAAO,CACH3E,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACF0Q,OAAQ7P,EAAQb,KAAK0Q,SAIjC,KAAK7K,aAQL,KAAKC,eACD,MAAO,CACH9E,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,IAId,QACI,OAAOwL,ICyBJmF,MAtDM,CAACnF,EAAQ,GAAI0C,KAC9B,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACJ,KAAKuF,aACD,MAAO,CACHlF,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACF4Q,OAAQ/P,EAAQb,KAAK4Q,OACrBC,iBAAkBhQ,EAAQb,KAAK6Q,mBAG3C,KAAKpK,2BACD,MAAO,CACHzF,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACF8Q,SAAUjQ,EAAQb,KAAK8Q,WAGnC,KAAKtK,wBACD,MAAO,CACHxF,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAMa,EAAQb,MAEtB,KAAKqG,cACD,MAAO,CACHrF,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACF+Q,MAAOlQ,EAAQb,KAAK+Q,QAGhC,KAAK3K,cACD,MAAO,CACHpF,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,IAId,KAAKsG,kBACD,MAAO,CACHtF,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACFmQ,MAAOtP,EAAQb,KAAKmQ,QAGhC,QACI,OAAO3E,IC6BJwF,MArEO,CAACxF,EAAQ,GAAI0C,KACjC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACN,KAAKoG,oBACH,MAAO,CACL/F,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJiR,SAAUpQ,EAAQb,KAAKiR,WAG7B,KAAKjK,gBAML,KAAKE,iBAML,KAAKK,cAML,KAAKN,kBAML,KAAKE,kBAML,KAAKC,iBAML,KAAKC,iBAML,KAAKC,SAML,KAAKE,cACH,MAAO,CACLxG,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAMa,EAAQb,MAElB,QACE,OAAOwL,IC/Eb,MAAM,YAAE/D,EAAF,eAAeC,EAAf,YAA+BC,GAAgB2I,EAAQ,GA+B9CY,OA7BK,CAAC1F,EAAQ,GAAI0C,KAC7B,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAE1B,OAAQvN,GACJ,KAAK8G,EACD,MAAO,CACHzG,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,QAExB,KAAKxG,EACD,MAAO,CACH1G,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACFmR,KAAMtQ,EAAQb,KAAKmR,OAG/B,KAAKxJ,EACD,MAAO,CACH3G,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,IAId,QACI,OAAOwL,ICFJ4F,OAxBQ,CAAC5F,EAAQ,GAAI0C,KAChC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAE1B,OAAQvN,GACJ,KAAKiH,gBACD,MAAO,CACH5G,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACFqR,UAAWxQ,EAAQb,KAAKqR,YAGpC,KAAKvJ,eACD,MAAO,CACH9G,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,IAId,QACI,OAAOwL,ICLJ8F,OAhBQ,CAAC9F,EAAQ,GAAI0C,KAChC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACJ,KAAKoH,sBACD,MAAO,CACH/G,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACFuR,eAAgB1Q,EAAQb,KAAKuR,iBAIzC,QACI,OAAO/F,ICEJgG,OAfU,CAAChG,EAAQ,GAAI0C,KACpC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACN,KAAKsH,kBACH,MAAO,CACLjH,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJyR,YAAa5Q,EAAQb,KAAKyR,cAGhC,QACE,OAAOjG,ICqCEkG,OA3CS,CAAClG,EAAQ,GAAI0C,KACnC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACN,KAAKwH,kBACH,MAAO,CACLnH,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,IAEV,KAAKoI,kBACH,MAAO,CACLpH,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJ2P,SAAU9O,EAAQb,KAAK2P,WAG7B,KAAKtH,kBACH,MAAO,CACLrH,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,IAEV,KAAKsI,gBACH,MAAO,CACLtH,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJ2R,UAAW9Q,EAAQb,KAAK2R,YAG9B,KAAKpJ,eACH,MAAO,CACLvH,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJ2P,SAAU9O,EAAQb,KAAK2P,WAG7B,QACE,OAAOnE,IChDb,MAAM,sBACJ/C,GADI,oBAEJG,GAFI,0CAGJD,GAHI,wCAIJD,GAJI,qBAKJF,GALI,kCAMJS,IACEqH,EAAQ,GAuCGsB,OArCe,CAACpG,EAAQ,GAAI0C,KACzC,IAAI,KAAEvN,EAAF,QAAQE,GAAYqN,EAExB,OAAQvN,GACN,KAAK8H,GACH,MAAO,CACLyF,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,CACJ6R,iBAAkBhR,EAAQb,KAAK6R,mBAIrC,KAAKjJ,GACH,MAAO,CACLsF,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,CACJ8R,eAAgBjR,EAAQb,KAAK8R,iBAGnC,KAAKtJ,GAML,KAAKS,GACH,MAAO,CACLiF,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,IAEV,QACE,OAAOwL,IC3Cb,MAAM,cACJrC,GADI,eAEJG,GAFI,aAGJC,GAHI,gBAIJH,GAJI,gBAKJC,GALI,oBAMJG,IACE8G,EAAQ,GAsDGyB,OApDS,CAACvG,EAAQ,GAAI0C,KACnC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAE1B,OAAQvN,GACN,KAAKwI,GACH,MAAO,CACL+E,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,IAEV,KAAKsJ,GACH,MAAO,CACL4E,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,CACJgS,WAAYnR,EAAQb,KAAKgS,aAG/B,KAAKzI,GACH,MAAO,CACL2E,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,CACJwP,SAAU3O,EAAQb,KAAKwP,WAG7B,KAAKpG,GACH,MAAO,CACL8E,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,CACJiS,gBAAiBpR,EAAQb,KAAKiS,kBAGpC,KAAK5I,GACH,MAAO,CACL6E,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,IAEV,KAAKwJ,GACH,MAAO,CACL0E,OAAQrN,EAAQqN,OAChBlN,OAAQH,EAAQG,OAChBhB,KAAM,CACJkS,eAAgBrR,EAAQb,KAAKkS,iBAGnC,QACE,OAAO1G,ICjBE2G,OAnCM,CAAC3G,EAAQ,GAAI0C,KAChC,IAAI,KAAEvN,EAAF,QAAQE,GAAYqN,EACxB,OAAQvN,GACN,KAAK8I,aACH,MAAO,CACLzI,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJoS,kBAAmBvR,EAAQb,KAAKoS,oBAGtC,KAAKzI,aAML,KAAKE,eACH,MAAO,CACL7I,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,IAEV,KAAK4J,eACH,MAAO,CACL5I,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJqS,aAAcxR,EAAQb,KAAKqS,eAGjC,QACE,OAAO7G,ICtCb,MAAM,oBAAE1B,IAAwBwG,EAAQ,GAezBgC,OAbQ,CAAC9G,EAAQ,GAAI0C,KAGhC,OAAQA,EAAOvN,MACX,KAAKmJ,GACD,MAAO,CACHyI,QAASrE,EAAOrN,QAAQ0R,QACxBrE,OAAQA,EAAOrN,QAAQqN,QAE/B,QACI,OAAO1C,ICUJgH,OApBS,CAAChH,EAAQ,GAAI0C,KACjC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACJ,KAAKqJ,eACD,MAAO,CACHhJ,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAMa,EAAQb,MAEtB,KAAKkK,eACL,KAAKD,kBACD,MAAO,CACHjJ,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAMa,EAAQb,MAEtB,QACI,OAAOwL,ICGJiH,OApBQ,CAACjH,EAAQ,GAAI0C,KAChC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACJ,KAAKwJ,eACD,MAAO,CACHnJ,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAMa,EAAQb,MAEtB,KAAKqK,cACL,KAAKD,iBACD,MAAO,CACHpJ,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAMa,EAAQb,MAEtB,QACI,OAAOwL,ICnBnB,MAAM,WAAElB,GAAF,8BAAcC,IAAkC+F,EAAQ,GAyB/CoC,OAvBU,CAAClH,EAAQ,GAAI0C,KACpC,MAAM,KAAEvN,EAAF,QAAQE,GAAYqN,EAC1B,OAAQvN,GACN,KAAK2J,GACH,MAAO,CACLtJ,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJ2S,UAAW9R,EAAQb,KAAK2S,YAG9B,KAAKpI,GACH,MAAO,CACLvJ,OAAQH,EAAQG,OAChBkN,OAAQrN,EAAQqN,OAChBlO,KAAM,CACJqO,SAAUxN,EAAQb,KAAKqO,WAG7B,QACE,OAAO7C,ICIEoH,eAAgB,CAE7BC,qBAAsB7D,EAEtB8D,iBAAkB7E,EAElB8E,oBAAqBjE,EAErBkE,kBAAmBvE,EAEnBhD,aAAcwE,EAEdgD,eAAgB1C,EAEhB2C,cAAezC,EAEf0C,cAAexC,EAEfyC,gBAAiBC,EAEjBC,eAAgBlD,EAEhBlD,gBAAiBgD,EAEjBqD,YAAaC,IAEbC,aAAcvC,GAEdwC,gBAAiBtC,GAEjBuC,sBAAuBrC,GAEvBsC,kBAAmBpC,GAEnBqC,iBAAkBnC,GAElBoC,uBAAwBlC,GAExBmC,iBAAkBhC,GAElBiC,cAAe7B,GAEf8B,gBAAiB3B,GACjB4B,iBAAkB1B,GAClB2B,gBAAiB1B,GAEjB2B,kBAAmB1B,K,UClEN2B,eAAYC,GAAUC,YAAQC,IAAyBC,YAAgBC,Q,cCKtFC,IAASjJ,OACP,cAAC,IAAD,CAAUkJ,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,S1B0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnV,MAAMoV,IAClCA,EAAaC,iB,gC2B3HnB,6BAGeC,QAAMC,OAAO,CAC1BC,QAASjR,eAAe,UACxBkR,QAAS,CACP,eAAgB,wB","file":"static/js/main.4c4e0c6c.chunk.js","sourcesContent":["// export { default as Roles } from './Roles';\n\nimport Roles from \"./Roles\";\n\nexport default Roles;","import http from './RestApi'\n\nclass UserService {\n    login(username, password) {\n        return http.post(\"/account/login\", { username, password })\n    }\n    register(username, password, email, firstName, lastName, phoneNumber) {\n        return http.post(\"/users/account/register\", { username, password, email, firstName, lastName, phoneNumber })\n    }\n}\n\nexport default new UserService();","// import axios from \"axios\";\n// import { API_BASE_URL } from \"../redux/constants\";\n// import RestApi from \"../restAPI/RestApi\";\nimport UserService from \"../restAPI/UserService\";\nclass AuthService {\n    login(username, password) {\n        return UserService.login(username, password)\n            .then((response) => {\n                if (response.data) {\n                    localStorage.setItem(\"credentials\", JSON.stringify(response.data))\n                }\n                return response.data;\n            })\n    }\n    logout() {\n        localStorage.removeItem(\"credentials\");\n    }\n    register(username, password, email, firstName, lastName, phoneNumber) {\n        return UserService.register(username, password, email, firstName, lastName, phoneNumber);\n    }\n}\n\nexport default new AuthService();","import authService from 'src/service/auth/authService'\nimport {\n    LOGIN_FAIL,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGOUT,\n    LOGIN_SUCCESS,\n    SET_MESSAGE,\n    // CLEAR_MESSAGEs\n} from 'src/constants/userConstants'\n\nexport const authenticateUser = (username, password) => async (dispatch) => {\n    return authService.login(username, password).then(\n        (data) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: { credentials: data }\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 200,\n                    data: {\n                        message: \"Login Successfullys\"\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: LOGIN_FAIL\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 403,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n\n}\nexport const createAccount = (username, password, email, firstName, lastName, phoneNumber) => async (dispatch) => {\n    console.log(username);\n    return authService.register(username, password, email, firstName, lastName, phoneNumber)\n        .then(\n            (response) => {\n                dispatch({\n                    type: REGISTER_SUCCESS,\n                })\n                dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        status: 200,\n                        data: {\n                            message: \"Successfully Register\"\n                        }\n                    }\n                })\n                return Promise.resolve();\n            },\n\n            (error) => {\n                const message = (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                dispatch({\n                    type: REGISTER_FAIL,\n\n                })\n                dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        status: 500,\n                        data: {\n                            message: message\n                        }\n                    }\n                })\n                return Promise.reject();\n            }\n\n\n\n        )\n}\n\nexport const logout = () => (dispatch) => {\n    authService.logout();\n    dispatch({\n        type: LOGOUT\n    })\n}","/*\n* These are the placeholder roles you can replace these with yours\n*/\nexport default {\n    SUPER_ADMIN: 'SUPER_ADMIN',\n    ADMIN: 'ADMIN',\n    CUSTOMER: 'CUSTOMER',\n    USER: 'USER',\n    ROLE_USER: 'ROLE_USER'\n};\n\n","import config from \"../../config\"\n\nexport const GET_PRODUCTS = \"GET_PRODUCTS\"\nexport const GET_PRODUCT = \"GET_PRODUCT\"\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\"\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\"\nexport const SAVE_PRODUCT = \"SAVE_PRODUCT\"\nexport const SAVE_FAIL = \"SAVE_PRODUCT_FAIL\"\nexport const UPDATE_FAIL = \"UPDATE_PRODUCT_FAIL\"\nexport const GET_IMAGE = \"GET_IMAGE\"\nexport const FAIL_GET_IMAGE = \"FAIL_GET_IMAGE\"\nexport const GET_PRODUCT_DETAILS = \"GET_PRODUCT_DETAILS\"\nexport const GET_PRODUCT_BY_CATEGORY_NAME = \"GET_PRODUCT_BY_CATEGORY_NAME\"\n\nexport const SET_IMAGE_MESSAGE = \"SET_IMAGE_MESSAGE\"\nexport const SET_PRODUCT_MESSAGE = \"SET_PRODUCT_MESSAGE\"\n\n//carousel\nexport const GET_CAROUSEL_IMAGES = \"GET_CAROUSEL_IMAGES\"\nexport const CAROUSEL_FOLDER_DIRECTORY = \"/carousel/\"\n\n//sidebar\nexport const SET_SIDEBAR = \"SET_SIDEBAR\"\nexport const SET_SIDEBAR_UNFOLD = \"SET_SIDEBAR_UNFOLD\"\n\n//modal\nexport const SET_PRODUCTEDITMODAL_VISIBILIT = \"PRODUCT_EDITOR_MODAL\"\nexport const EDIT_PRODUCT_MODAL = \"EDIT_PRODUCT_MODEL\"\nexport const ALERT_MODAL = \"ALERT_MODAL\"\nexport const ALERT_BAN_MODAL = \"ALERT_BAN_MODAL\"\nexport const ADD_BRANCH_MODAL = \" ADD_BRANCH_MODAL\"\nexport const ADD_BRAND_MODAL = \"ADD_BRAND_MODAL\"\nexport const ADD_CATEGORY_MODAL = \"ADD_CATEGORY_MODAL\"\nexport const ADD_EMPLOYEE_MODAL = \"ADD_EMPLOYEE_MODAL\"\nexport const SET_PRODUCT_DETAILS_MODAL = \"SET_PRODUCT_DETAILS_MODAL\"\nexport const LOGIN_MODAL = \"LOGIN_MODAL\"\nexport const SET_ADDRESS_MODAL = \"SET_ADDRESS_MODAL\"\nexport const SET_SUPPLIER_MODAL = \"SET_SUPPLIER_MODAL\"\nexport const SET_SUPPLY_MODAL = \"SET_SUPPLY_MODAL\"\nexport const SET_SCAN_MODAL = \"SET_SCAN_MODAL\"\nexport const SET_PROMO_MODAL = \"SET_PROMO_MODAL\"\nexport const CHANGE_PASSWORD_MODAL = \"CHANGE_PASSWORD_MODAL\"\n\n// endpoint constalnts\nexport const API_BASE_URL = config.api.private.baseUrl\nexport const FRONT_END_BASED_URL = config.api.private.baseFrontendUrl\n\nexport const OAUTH2_REDIRECT_URI = API_BASE_URL + \"/oauth2/redirect\"\n\nexport const ACCESS_TOKEN = \"accessToken\"\nexport const REFRESH_TOKEN = \"refreshToken\"\nexport const USERNAME = \"username\"\nexport const GOOGLE_AUTH_URL =\n  API_BASE_URL + \"/oauth2/authorize/google?redirect_uri=\" + OAUTH2_REDIRECT_URI\n\n// product branch\nexport const GET_BRANCH = \"GET_BRANCH\"\nexport const GET_BRANCH_TOTAL_PRODUCT = \"GET_BRANCH_TOTAL_PRODUCT\"\nexport const SAVE_BRANCH = \"SAVE_BRANCH\"\nexport const UPDATE_BRANCH = \"UPDATE_BRANCH\"\nexport const DELETE_BRANCH = \"DELETE_BRANCH\"\nexport const GET_DISCOVER_PRODUCT = \"GET_DISCOVER_PRODUCT\"\nexport const GET_PUBLIC_PRODUCT = \"GET_PUBLIC_PRODUCT\"\nexport const SEARCH_PRODUCT = \"SEARCH_PRODUCT\"\nexport const GET_PRODUCTS_BY_STATUS = \"GET_PRODUCTS_BY_STATUS\"\nexport const GET_PRODUCTS_WITH_PROMO = \"GET_PRODUCTS_WITH_PROMO\"\n\n// brand\nexport const GET_BRANDS = \"GET_BRANDS\"\nexport const GET_BRAND = \"GET_BRAND\"\nexport const SAVE_BRAND = \"SAVE_BRAND\"\nexport const UPDATE_BRAND = \"UPDATE_BRAND\"\nexport const DELETE_BRAND = \"DELETE_BRAND\"\nexport const FAIL_BRAND = \"FAIL_BRAND\"\nexport const CLEAR_BRAND = \"CLEAR_BRAND\"\n\n// order\nexport const GET_ORDERS = \"GET_ORDERS\"\nexport const CONFIRM_ORDER = \"CONFIRM_ORDER\"\nexport const PLACE_ORDER = \"PLACE_ORDER\"\nexport const ORDER_ITEMS = \"ORDER_ITEMS\"\nexport const GET_ORDER_BY_ID = \"GET_ORDER_BY_ID\"\nexport const UPDATE_ORDER_STATUS = \"UPDATE_ORDER_STATUS\"\nexport const UPDATE_PAYMENT_STATUS = \"UPDATE_PAYMENT_STATUS\"\nexport const GET_PAYMENT_TRANSACTIONS = \"GET_PAYMENT_TRANSACTIONS\"\n// customer address\nexport const SAVE_CUSTOMER_ADDRESS = \"SAVE_CUSTOMER_ADDRESS\"\nexport const UPDATE_CUSTOMER_ADDRESS = \"UPDATE_CUSTOMER_ADDRESS\"\nexport const GET_CUSTOMER_ADDRESSES = \"GET_CUSTOMER_ADDRESSES\"\nexport const GET_CUSTOMER_ADDRESS = \"GET_CUSTOMER_ADDRESS\"\nexport const DELETE_CUSTOMER_ADDRESS = \"DELETE_CUSTOMER_ADDRESS\"\n/// account\nexport const GET_USERS_ACCOUNT = \"GET_USERS_ACCOUNT\"\nexport const SAVE_EMPLOYEE = \"SAVE_EMPLOYEE\"\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\"\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\"\nexport const FORGOT_PASSWORD = \"FORGOT_PASSWORD\"\nexport const VALIDATE_TOKEN = \"VALIDATE_TOKEN\"\nexport const RESET_PASSWORD = \"RESET_PASSWORD\"\nexport const GET_ME = \"GET_ME\"\nexport const BAN_ACCOUNT = \"BAN_ACCOUNT\"\nexport const UPDATE_USER = \"UPDATE_USER\"\n//cart\nexport const ADD_TO_CART = \"ADD_TO_CART\"\nexport const GET_CART_ITEMS = \"GET_CART_ITEMS\"\nexport const REMOVE_ITEM = \"REMOVE_ITEM\"\n\n//address\nexport const GET_ADDRESSES = \"GET_ADDRESSES\"\nexport const UPDATE_ADDRESS = \"UPDATE_ADDRESS\"\nexport const SAVE_ADDRESS = \"SAVE_ADDRESS\"\n\n// payment method\nexport const GET_PAYMENT_METHODS = \"GET_PAYMENT_METHODS\"\nexport const GET_PAYMENT_METHOD = \"GET_PAYMENT_METHOD\"\n\n//inventory\nexport const GET_INVENTORIES = \"GET_INVENTORIES\"\nexport const GET_INVENTORY = \"GET_INVENTORY\"\n\n// supplier\nexport const CREATE_SUPPLIER = \"CREATE_SUPPLIER\"\nexport const UPDATE_SUPPLIER = \"UPDATE_SUPPLIER\"\nexport const DELETE_SUPPLIER = \"DELETE_SUPPLIER\"\nexport const GET_SUPPLIERS = \"GET_SUPPLIERS\"\nexport const GET_SUPPLIER = \"GET_SUPPLIER\"\n\n// incoming supply\nexport const SAVE_INCOMING_SUPPLY = \"SAVE_INCOMING_SUPPLY\"\nexport const GET_INCOMING_SUPPLIES = \"GET_INCOMING_SUPPLIES\"\nexport const GET_INCOMING_SUPPLIES_BY_PENDING_STATUS =\n  \"GET_INCOMING_SUPPLIES_BY_PENDING_STATUS\"\nexport const GET_INCOMING_SUPPLIES_BY_DELIVERED_STATUS =\n  \"GET_INCOMING_SUPPLIES_BY_DELIVERED_STATUS\"\nexport const GET_INCOMING_SUPPLY = \"GET_INCOMING_SUPPLY\"\nexport const DELETE_INCOMING_SUPPLY = \"DELETE_INCOMING_SUPPLY\"\nexport const UPDATE_INCOMING_SUPPLY = \"UPDATE_INCOMING_SUPPLY\"\nexport const DELIVERED_INCOMING_SUPPLY = \"DELIVERED_INCOMING_SUPPLY\"\nexport const SHIP_INCOMING_SUPPLY = \"SHIP_INCOMING_SUPPLY\"\nexport const MARK_INCOMING_SUPPLY_AS_DELIVERED =\n  \"MARK_INCOMING_SUPPLY_AS_DELIVERED\"\n\nexport const NO_IMAGE_BASE64 = \"/default/no-image.jpg\"\n/// categories\nexport const SAVE_CATEGORY = \"SAVE_CATEGORY\"\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\"\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\"\nexport const GET_CATEGORIES = \"GET_CATEGORIES\"\nexport const GET_CATEGORY = \"GET_CATEGORY\"\nexport const GET_CATEGORIES_LIST = \"GET_CATEGORIES_LIST\"\n\n//promo\nexport const GET_PROMOS = \"GET_PROMOS\"\nexport const GET_PROMO = \"GET_PROMO\"\nexport const SAVE_PROMO = \"SAVE_PROMO\"\nexport const UPDATE_PROMO = \"UPDATE_PROMO\"\nexport const DELETE_PROMO = \"DELETE_PROMO\"\nexport const GET_DECODED_BARCODE = \"GET_DECODED_BARCODE\"\n\n///common\nexport const SEARCH_PRODUCT_TEXT = \"SEARCH_PRODUCT_TEXT\"\n\n// wishlist\nexport const GET_WISHLIST = \"GET_WISHLIST\"\nexport const DELETE_WISHLIST = \"DELETE_WISHLIST\"\nexport const ADD_WISHLIST = \"ADD_WISHLIST\"\n// wishlist\nexport const GET_COMMENTS = \"GET_COMMENTS\"\nexport const DELETE_COMMENT = \"DELETE_COMMENT\"\nexport const ADD_COMMENT = \"ADD_COMMENT\"\n\n//dashboard\nexport const GET_TOTALS = \"GET_TOTALS\"\nexport const GET_PRODUCTS_COUNT_TOTAL_SOLD = \"GET_PRODUCTS_COUNT_TOTAL_SOLD\"\n","// user containts\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";","const dev = {\r\n  api: {\r\n    private: {\r\n      baseUrl: \"http://localhost:4480\",\r\n      baseFrontendUrl: \"http://localhost:4000\",\r\n      prefixFrontendUrl: \"\",\r\n    },\r\n  },\r\n}\r\n\r\nconst test = {\r\n  api: {\r\n    private: {\r\n      baseUrl: \"https://inventory-mng-api.herokuapp.com\",\r\n      baseFrontendUrl: \"https://d3dw1h6vufmuro.cloudfront.net\",\r\n      prefixFrontendUrl: \"/inventory-management-system-reactjs\",\r\n    },\r\n  },\r\n}\r\n\r\nconst getEnv = function () {\r\n  let env = process.env.REACT_APP_ENV\r\n  if (typeof env === \"undefined\") return dev\r\n  env = env.trim()\r\n  if (env === \"dev\") return dev\r\n  if (env === \"test\") return test\r\n}\r\n\r\nconst config = getEnv()\r\n\r\nexport default {\r\n  ...config,\r\n}\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router'\n\nimport config from \"../../config\"\nconst PrivateRouter = ({ component: Component, roles, name, ...rest }) => {\n    const isLoggedIn = useSelector((state) => state.userResponse.isLoggedIn);\n    return (\n        <Route {...rest} render={props => (\n            isLoggedIn ? <Component {...props} />\n                : <Redirect to={config.api.private.prefixFrontendUrl + \"/login\"} />\n        )} />\n    )\n\n}\n\nexport default PrivateRouter\n\n","import React, { Component, lazy } from \"react\"\nimport {\n  BrowserRouter as Router,\n  // HashRouter,\n  Route,\n  Switch,\n} from \"react-router-dom\"\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\" // requires a loader\n\nimport { connect } from \"react-redux\"\nimport PrivateRouter from \"./router/privateRouter/PrivateRouter\"\nimport { DotLoader } from \"react-spinners\"\n\nimport { logout } from \"src/service/apiActions/userAction/userAction\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"./scss/style.scss\"\n\nimport config from \"./config\"\n\nconst loading = (\n  <div className=\"d-flex justify-content-center align-items-center  position-fixed \">\n    <DotLoader color=\"#36D7B7\" size={100} />\n  </div>\n)\n\n// Containers\nconst DefaultLayout = React.lazy(() => import(\"./layout/DefaultLayout\"))\nconst PublicLayout = React.lazy(() => import(\"./layout/PublicLayout\"))\n\n// Pages\nconst Login = React.lazy(() => import(\"./views/common/public/login/Login\"))\nconst Register = React.lazy(() =>\n  import(\"./views/common/public/register/Register\"),\n)\nconst Page404 = React.lazy(() =>\n  import(\"./views/common/public/page404/Page404\"),\n)\nconst Page500 = React.lazy(() =>\n  import(\"./views/common/public/page500/Page500\"),\n)\nconst RedirectSuccessHandler = lazy(() =>\n  import(\"./components/redirectSuccessHandler/RedirectSuccessHandler\"),\n)\nconst ForgotPassword = React.lazy(() =>\n  import(\"src/views/common/forgotPassword/ForgotPassword\"),\n)\n// customer layou\nconst CustomerLayout = React.lazy(() => import(\"src/layout/CustomerLayout\"))\n\nclass App extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    this.manageResponse(prevProps, prevState)\n  }\n\n  manageResponse(prevProps, prevState) {\n    if (this.props.messageResponse != prevProps.messageResponse) {\n      let failMessage = this.props.messageResponse\n      if (failMessage.status > 400 && failMessage.status <= 403) {\n        setTimeout(() => {\n          toast(\"Session Expired\" + failMessage.data.message)\n          this.props.logout()\n          window.location.reload()\n        }, 1000)\n      } else if (failMessage.data && failMessage.data.message) {\n        toast(failMessage.data.message)\n      }\n    }\n  }\n  render() {\n    // const credentials = this.props.credentials;\n    return (\n      <>\n        {/* <div className=\"bg-light \"> */}\n        <Router>\n          <React.Suspense fallback={loading}>\n            <Switch>\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/oauth2/redirect\"}\n                name=\"success handler\"\n                render={(props) => <RedirectSuccessHandler {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/login\"}\n                name=\"Login Page\"\n                render={(props) => <Login {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/password/forgot\"}\n                name=\"Forgot password\"\n                render={(props) => <ForgotPassword {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/register\"}\n                name=\"Register Page\"\n                render={(props) => <Register {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/500\"}\n                name=\"Page 500\"\n                render={(props) => <Page500 {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/400\"}\n                name=\"Page 400\"\n                render={(props) => <Page404 {...props} />}\n              />\n              <PrivateRouter\n                path={config.api.private.prefixFrontendUrl + \"/app\"}\n                component={DefaultLayout}\n              />\n              <PrivateRouter\n                path={config.api.private.prefixFrontendUrl + \"/user\"}\n                component={CustomerLayout}\n              />\n              <Route\n                path=\"/\"\n                name={config.api.private.prefixFrontendUrl + \"public\"}\n                render={(props) => <PublicLayout {...props} />}\n              />\n            </Switch>\n          </React.Suspense>\n        </Router>\n        <ToastContainer />\n        {/* </div> */}\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  const isLoggedIn = state.userResponse.isLoggedIn\n  const credentials = state.userResponse.credentials\n  return {\n    isLoggedIn,\n    credentials,\n    messageResponse: state.messageResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  logout,\n})(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\")\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import {\n  DELETE_PRODUCT,\n  GET_DISCOVER_PRODUCT,\n  // GET_IMAGE,\n  GET_PRODUCT,\n  // GET_PRODUCT,\n  GET_PRODUCTS,\n  GET_PRODUCTS_BY_STATUS,\n  GET_PRODUCTS_WITH_PROMO,\n  GET_PRODUCT_BY_CATEGORY_NAME,\n  GET_PRODUCT_DETAILS,\n  SEARCH_PRODUCT,\n  UPDATE_PRODUCT,\n  // UPDATE_PRODUCT,\n  // DELETE_PRODUCT,\n} from \"../constants\"\n\nconst productReducer = (state = {}, action) => {\n  let status = 200\n  let notificationType = \"info\"\n  let data = {}\n  if (action.payload !== undefined && action.payload.status !== undefined) {\n    status = action.payload.status\n    notificationType = \"success\"\n    if (status >= 400) {\n      notificationType = \"error\"\n    }\n    data = action.payload.data\n  }\n\n  let response = {\n    notificationType: notificationType,\n    type: action.type,\n    status: status,\n    action: \"LIST\",\n  }\n\n  switch (action.type) {\n    case GET_PRODUCTS:\n      response[\"data\"] = data.products\n      break\n    case GET_PRODUCT:\n      return (response = {\n        type: action.type,\n        status: action.payload.status,\n        action: \"GETBYID\",\n        data: {\n          product: action.payload.data.product,\n        },\n      })\n    case GET_DISCOVER_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: \"DISCOVER\",\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_PRODUCT_DETAILS:\n      return {\n        status: action.payload.status,\n        action: \"DETAILS\",\n        data: {\n          product: action.payload.data.product,\n        },\n      }\n    case UPDATE_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          updatedProduct: action.payload.updatedProduct,\n        },\n      }\n    case DELETE_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: action.payload.actin,\n        data: {},\n      }\n    case SEARCH_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_PRODUCT_BY_CATEGORY_NAME:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_PRODUCTS_BY_STATUS:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_PRODUCTS_WITH_PROMO:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    default:\n      return state\n  }\n  return response\n}\n\nexport default productReducer\n","import { GET_CAROUSEL_IMAGES } from \"../constants\"\n\nconst carouselReducer = (state = {}, action) => {\n  let status = 200\n  let statusType = \"info\"\n  let carouselData = {}\n\n  if (action.payload !== undefined && action.payload.status !== undefined) {\n    status = action.payload.status\n    statusType = \"success\"\n    if (status >= 400) {\n      statusType = \"error\"\n    }\n    carouselData = action.payload.data\n  }\n  let carouselResponse = {\n    statusType: statusType,\n    type: action.type,\n    status: status,\n    action: \"RETRIEVE\",\n  }\n\n  switch (action.type) {\n    case GET_CAROUSEL_IMAGES:\n      carouselResponse[\"carouselData\"] = carouselData.carouselImages\n      break\n    default:\n      return state\n  }\n  return carouselResponse\n}\n\nexport default carouselReducer\n","import { SET_SIDEBAR } from \"../constants\"\n\nconst changeStateReducer = (state = {}, action) => {\n  let response = {\n    type: action.type,\n    action: action.type,\n    state: {},\n  }\n\n  switch (action.type) {\n    case SET_SIDEBAR:\n      response.state.sidebarState = action.payload.data.sidebarState\n      break\n    // case SET_SIDEBAR_UNFOLD:\n    //   response.state.sidebarUnfoldable = action.payload.data.sidebarUnfoldable\n    //   break\n    default:\n      return state\n  }\n  return response\n}\n\nexport default changeStateReducer\n","import {\n  ADD_BRANCH_MODAL,\n  ADD_BRAND_MODAL,\n  ADD_CATEGORY_MODAL,\n  ADD_EMPLOYEE_MODAL,\n  ALERT_BAN_MODAL,\n  ALERT_MODAL,\n  CHANGE_PASSWORD_MODAL,\n  EDIT_PRODUCT_MODAL,\n  LOGIN_MODAL,\n  SET_ADDRESS_MODAL,\n  SET_PRODUCTEDITMODAL_VISIBILIT,\n  SET_PRODUCT_DETAILS_MODAL,\n  SET_PROMO_MODAL,\n  SET_SCAN_MODAL,\n  SET_SUPPLIER_MODAL,\n  SET_SUPPLY_MODAL,\n} from \"../constants\"\n\nconst modalVisibilityReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case SET_PRODUCTEDITMODAL_VISIBILIT:\n      // response.state.visible = action.payload.data.visible\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        icon: payload.data.icon,\n      }\n    case EDIT_PRODUCT_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        product: payload.data.product,\n        icon: payload.data.icon,\n      }\n    case ALERT_MODAL:\n      return {\n        alert: payload.alert,\n        action: payload.action,\n        module: payload.module,\n        id: payload.data.id,\n      }\n    case ALERT_BAN_MODAL:\n      return {\n        alert: payload.alert,\n        action: payload.action,\n        module: payload.module,\n        id: payload.data.id,\n      }\n    case ADD_BRANCH_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        branch: payload.data.branch,\n        icon: payload.data.icon,\n      }\n    case ADD_BRAND_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        brand: payload.data.brand,\n        icon: payload.data.icon,\n      }\n    case ADD_CATEGORY_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        category: payload.data.category,\n        icon: payload.data.icon,\n      }\n    case ADD_EMPLOYEE_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        employee: payload.data.employee,\n        icon: payload.data.icon,\n      }\n    case CHANGE_PASSWORD_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        employee: payload.data.employee,\n        icon: payload.data.icon,\n      }\n    case SET_PRODUCT_DETAILS_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        product: payload.data.product,\n      }\n    case LOGIN_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n      }\n    case SET_ADDRESS_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        address: payload.data.address,\n        icon: payload.data.icon,\n      }\n    case SET_SUPPLIER_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.action,\n        supplier: payload.data.supplier,\n        icon: payload.data.icon,\n      }\n    case SET_SUPPLY_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.action,\n        supply: payload.data.supply,\n        icon: payload.data.icon,\n      }\n    case SET_SCAN_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.action,\n      }\n    case SET_PROMO_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.action,\n        promo: payload.data.promo,\n        icon: payload.data.icon,\n      }\n    default:\n      return state\n  }\n}\n\nexport default modalVisibilityReducer\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n} from \"src/constants/userConstants\";\n\nconst credentials = JSON.parse(localStorage.getItem(\"credentials\"));\n\nconst initialState = credentials\n    ? { isLoggedIn: true, credentials }\n    : { isLoggedIn: false, credentials: null };\n\nconst userReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: false,\n            };\n        case REGISTER_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: true,\n                credentials: payload.credentials,\n            };\n        case LOGIN_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n                credentials: null,\n            };\n        case LOGOUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                credentials: null,\n            };\n        default:\n            return state;\n    }\n}\nexport default userReducer;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"src/constants/userConstants\";\nimport { SET_PRODUCT_MESSAGE } from \"../constants\";\n\nconst initialState = {};\n\nconst messageReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_MESSAGE:\n            return {\n                action: type,\n                status: payload.status,\n                data: {\n                    message: payload.data.message,\n                    order: payload.data.order,\n                }\n            };\n\n        case CLEAR_MESSAGE:\n            return {\n                action: type,\n                status: '',\n                data: {\n                    message: ''\n                }\n            };\n\n        case SET_PRODUCT_MESSAGE:\n            return {\n                action: type,\n                status: payload.status,\n                data: {\n                    message: payload.data.message\n                }\n            }\n        default:\n            return state;\n    }\n}\nexport default messageReducer;","import Roles from \"src/router/config\";\n\nconst routesReducer = (state = {}, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case Roles:\n            return {\n                routes: payload\n            }\n        default: return state;\n    }\n}\n\nexport default routesReducer","const { GET_BRANCH, GET_BRANCH_TOTAL_PRODUCT, SAVE_BRANCH, UPDATE_BRANCH } = require(\"../constants\");\n\nconst branchReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_BRANCH:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    branch: payload.data.branches\n                }\n            }\n        case GET_BRANCH_TOTAL_PRODUCT:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    branches: payload.data.branches\n                }\n            }\n        case SAVE_BRANCH:\n            return {\n                status: payload.status,\n                action: payload.action,\n            }\n        case UPDATE_BRANCH:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default branchReducer;","import { GET_BRANDS, SAVE_BRAND, UPDATE_BRAND } from \"../constants\";\n\nconst brandReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_BRANDS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    brands: payload.data.brands\n                }\n            }\n\n        case SAVE_BRAND:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        case UPDATE_BRAND:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default brandReducer;","import { GET_ORDERS, GET_ORDER_BY_ID, ORDER_ITEMS, PLACE_ORDER, UPDATE_PAYMENT_STATUS, GET_PAYMENT_TRANSACTIONS } from \"../constants\";\n\nconst orderReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_ORDERS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    orders: payload.data.orders,\n                    orderStatusCount: payload.data.orderStatusCount\n                }\n            }\n        case GET_PAYMENT_TRANSACTIONS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    payments: payload.data.payments,\n                }\n            }\n        case UPDATE_PAYMENT_STATUS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        case ORDER_ITEMS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    items: payload.data.items\n                }\n            }\n        case PLACE_ORDER:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        case GET_ORDER_BY_ID:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    order: payload.data.order\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default orderReducer;","import {\n  BAN_ACCOUNT,\n  CHANGE_PASSWORD,\n  DELETE_ACCOUNT,\n  FORGOT_PASSWORD,\n  GET_ME,\n  GET_USERS_ACCOUNT,\n  RESET_PASSWORD,\n  SAVE_EMPLOYEE,\n  UPDATE_USER,\n  VALIDATE_TOKEN,\n} from \"../constants\"\n\nconst accoutReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case GET_USERS_ACCOUNT:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          accounts: payload.data.accounts,\n        },\n      }\n    case SAVE_EMPLOYEE:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case DELETE_ACCOUNT:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case BAN_ACCOUNT:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case CHANGE_PASSWORD:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case FORGOT_PASSWORD:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case VALIDATE_TOKEN:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case RESET_PASSWORD:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case GET_ME:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case UPDATE_USER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    default:\n      return state\n  }\n}\nexport default accoutReducer\n","const { ADD_TO_CART, GET_CART_ITEMS, REMOVE_ITEM } = require(\"../constants\");\n\nconst cartReducer = (state = {}, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case ADD_TO_CART:\n            return {\n                status: payload.status,\n                action: payload.action\n            }\n        case GET_CART_ITEMS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    cart: payload.data.cart\n                }\n            }\n        case REMOVE_ITEM:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default cartReducer;","import { GET_ADDRESSES, SAVE_ADDRESS } from \"../constants\";\n\nconst addressReducer = (state = {}, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_ADDRESSES:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    addresses: payload.data.addresses\n                }\n            }\n        case SAVE_ADDRESS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default addressReducer;","import { GET_PAYMENT_METHODS } from \"../constants\";\n\nconst paymentReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_PAYMENT_METHODS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    paymentMethods: payload.data.paymentMethods\n                }\n            }\n\n        default:\n            return state\n    }\n}\nexport default paymentReducer;","import { GET_INVENTORIES } from \"../constants\"\n\nconst inventoryReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case GET_INVENTORIES:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          inventories: payload.data.inventories,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default inventoryReducer\n","import {\n  CREATE_SUPPLIER,\n  DELETE_SUPPLIER,\n  GET_SUPPLIER,\n  GET_SUPPLIERS,\n  UPDATE_SUPPLIER,\n} from \"../constants\"\n\nconst supplierReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case CREATE_SUPPLIER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    case UPDATE_SUPPLIER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          supplier: payload.data.supplier,\n        },\n      }\n    case DELETE_SUPPLIER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    case GET_SUPPLIERS:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          suppliers: payload.data.suppliers,\n        },\n      }\n    case GET_SUPPLIER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          supplier: payload.data.supplier,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default supplierReducer\n","const {\n  GET_INCOMING_SUPPLIES,\n  GET_INCOMING_SUPPLY,\n  GET_INCOMING_SUPPLIES_BY_DELIVERED_STATUS,\n  GET_INCOMING_SUPPLIES_BY_PENDING_STATUS,\n  SAVE_INCOMING_SUPPLY,\n  MARK_INCOMING_SUPPLY_AS_DELIVERED,\n} = require(\"../constants\")\n\nconst incomingSupplyReducer = (state = {}, action) => {\n  let { type, payload } = action\n\n  switch (type) {\n    case GET_INCOMING_SUPPLIES:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          incomingSupplies: payload.data.incomingSupplies,\n        },\n      }\n\n    case GET_INCOMING_SUPPLY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          incomingSupply: payload.data.incomingSupply,\n        },\n      }\n    case SAVE_INCOMING_SUPPLY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {},\n      }\n    case MARK_INCOMING_SUPPLY_AS_DELIVERED:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {},\n      }\n    default:\n      return state\n  }\n}\nexport default incomingSupplyReducer\n","const {\n  SAVE_CATEGORY,\n  GET_CATEGORIES,\n  GET_CATEGORY,\n  UPDATE_CATEGORY,\n  DELETE_CATEGORY,\n  GET_CATEGORIES_LIST,\n} = require(\"../constants\")\n\nconst categoryReducer = (state = {}, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case SAVE_CATEGORY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {},\n      }\n    case GET_CATEGORIES:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          categories: payload.data.categories,\n        },\n      }\n    case GET_CATEGORY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          category: payload.data.category,\n        },\n      }\n    case UPDATE_CATEGORY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          updatedCategory: payload.data.updatedCategory,\n        },\n      }\n    case DELETE_CATEGORY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {},\n      }\n    case GET_CATEGORIES_LIST:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          categoriesList: payload.data.categoriesList,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default categoryReducer\n","import {\n  DELETE_PROMO,\n  GET_PROMOS,\n  SAVE_PROMO,\n  UPDATE_PROMO,\n} from \"../constants\"\nconst promoReducer = (state = {}, action) => {\n  let { type, payload } = action\n  switch (type) {\n    case GET_PROMOS:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          productsWithPromo: payload.data.productsWithPromo,\n        },\n      }\n    case SAVE_PROMO:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    case DELETE_PROMO:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    case UPDATE_PROMO:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          updatedPromo: payload.data.updatedPromo,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default promoReducer\n","const { GET_DECODED_BARCODE } = require(\"../constants\");\n\nconst scannerReducer = (state = {}, action) => {\n\n\n    switch (action.type) {\n        case GET_DECODED_BARCODE:\n            return {\n                decoded: action.payload.decoded,\n                action: action.payload.action\n            }\n        default:\n            return state;\n    }\n}\nexport default scannerReducer","import { GET_WISHLIST, DELETE_WISHLIST, ADD_WISHLIST } from \"../constants\";\n\nconst wishlistReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_WISHLIST:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        case ADD_WISHLIST:\n        case DELETE_WISHLIST:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        default:\n            return state\n    }\n}\nexport default wishlistReducer;","import { GET_COMMENTS, DELETE_COMMENT, ADD_COMMENT } from \"../constants\";\n\nconst commentReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_COMMENTS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        case ADD_COMMENT:\n        case DELETE_COMMENT:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        default:\n            return state\n    }\n}\nexport default commentReducer;","const { GET_TOTALS, GET_PRODUCTS_COUNT_TOTAL_SOLD } = require(\"../constants\")\r\n\r\nconst dashboardReducer = (state = {}, action) => {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case GET_TOTALS:\r\n      return {\r\n        status: payload.status,\r\n        action: payload.action,\r\n        data: {\r\n          summaries: payload.data.summaries,\r\n        },\r\n      }\r\n    case GET_PRODUCTS_COUNT_TOTAL_SOLD:\r\n      return {\r\n        status: payload.status,\r\n        action: payload.action,\r\n        data: {\r\n          products: payload.data.products,\r\n        },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default dashboardReducer\r\n","import { combineReducers } from \"redux\"\nimport { responsiveStateReducer } from \"redux-responsive\"\nimport productReducer from \"./productReducer\"\nimport carouselReducer from \"./carouselReducer\"\nimport changeStateReducer from \"./changeStateReducer\"\nimport modalVisibilityReducer from \"./modalVisibilityReducer\"\nimport userReducer from \"./userReducer\"\nimport messageReducer from \"./messageReducer\"\nimport routesReducer from \"./routesReducer\"\nimport branchReducer from \"./branchReducer\"\nimport brandReducer from \"./brandReducer\"\nimport orderReducer from \"./orderReducer\"\nimport accountReducer from \"./accountReducer\"\nimport cartReducer from \"./cartReducer\"\nimport addressReducer from \"./addressReducer\"\nimport paymentReducer from \"./paymentReducer\"\nimport inventoryReducer from \"./inventoryReducer\"\nimport supplierReducer from \"./supplierReducer\"\nimport incomingSupplyReducer from \"./incomingSupplyReducer\"\nimport categoryReducer from \"./categoryReducer\"\nimport promoReducer from \"./promoReducer\"\nimport scannerReducer from \"./scannerReducer\"\nimport wishlistReducer from \"./wishlistReducer\"\nimport commentReducer from \"./commentReducer\"\nimport dashboardReducer from \"./dashboardReducer\"\n\nexport default combineReducers({\n  //modals\n  modalVisibleResponse: modalVisibilityReducer,\n  //products\n  productResponser: productReducer,\n  //sidebar\n  changeStateResponse: changeStateReducer,\n  //carousel\n  carouselResponser: carouselReducer,\n  //account\n  userResponse: userReducer,\n  //branch\n  branchResponse: branchReducer,\n  // brand\n  brandResponse: brandReducer,\n  //order\n  orderResponse: orderReducer,\n  // employee\n  accountResponse: accountReducer,\n  // routes\n  routesResponse: routesReducer,\n  //message\n  messageResponse: messageReducer,\n  //browserSize\n  browserSize: responsiveStateReducer,\n  //cart\n  cartResponse: cartReducer,\n  //address\n  addressResponse: addressReducer,\n  // payment\n  paymentMethodResponse: paymentReducer,\n  //inventory\n  inventoryResponse: inventoryReducer,\n  // supplier\n  supplierResponse: supplierReducer,\n  //incoming supplies\n  incomingSupplyResponse: incomingSupplyReducer,\n  //category\n  categoryResponse: categoryReducer,\n  //promotion\n  promoResponse: promoReducer,\n  //scannera\n  scannerResponse: scannerReducer,\n  wishlistResponse: wishlistReducer,\n  commentResponse: commentReducer,\n  //dahsboard\n  dashboardResponse: dashboardReducer,\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport reducers from './service/redux/reducers'\n\nimport thunk from 'redux-thunk'\nimport { responsiveStoreEnhancer } from 'redux-responsive'\n\nexport default createStore(reducers, compose(responsiveStoreEnhancer, applyMiddleware(thunk)))\n","import 'react-app-polyfill/stable'\nimport 'core-js'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import axios from \"axios\";\nimport { API_BASE_URL } from \"../redux/constants\";\n\nexport default axios.create({\n  baseURL: API_BASE_URL + \"/api/v1\",\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n});\n\n\n"],"sourceRoot":""}