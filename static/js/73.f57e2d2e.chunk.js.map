{"version":3,"sources":["views/private/order/Order.js"],"names":["Orders","React","lazy","Order","Component","constructor","props","super","state","orderStatus","activeKey","totalCounts","PENDING","CONFIRMED","SHIPPED","COMPLETED","manageorderRepsonse","prevProps","prevState","orderResponse","this","status","action","data","setState","orderStatusCount","totalCountChange","bind","roles","userResponse","credentials","permission","roleName","componentDidUpdate","render","console","log","className","type","id","placeholder","color","variant","role","layout","href","active","onClick","DELIVERED","style","margin","padding","overflow","visible","fallback","size","connect"],"mappings":"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","file":"static/js/73.f57e2d2e.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\"\nimport { connect } from 'react-redux'\nimport Roles from 'src/router/config'\n\nimport {\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CSpinner,\n  CForm,\n  CInputGroup,\n  CButton,\n  CBadge,\n  CFormControl\n} from \"@coreui/react\"\nimport { DotLoader } from \"react-spinners\"\n\n// icon\n// import * as FiIcons from 'react-icons/fi'\n//component tab\nimport * as FaIcons from \"react-icons/fa\"\n\nconst Orders = React.lazy(() =>\n  import(\"src/components/orderTabContent/Orders\"),\n)\n\nexport class Order extends Component {\n  state = {\n    orderStatus: 'pending',\n    activeKey: 1,\n    totalCounts: {\n      PENDING: 0,\n      CONFIRMED: 0,\n      SHIPPED: 0,\n      COMPLETED: 0,\n    },\n  }\n\n  constructor(props) {\n    super(props);\n    this.totalCountChange = this.totalCountChange.bind(this);\n    let { roles } = this.props.userResponse.credentials;\n    this.state.permission = roles.roleName ? roles.roleName : roles\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.manageorderRepsonse(prevProps, prevState);\n  }\n\n  manageorderRepsonse = (prevProps, prevState) => {\n    if (prevProps.orderResponse !== this.props.orderResponse) {\n      let { status, action, data } = this.props.orderResponse;\n      if (status === 200 && action === \"GET_ORDERS\") {\n        this.setState({\n          totalCounts: data.orderStatusCount\n        });\n      }\n    }\n  }\n\n  totalCountChange(totalCounts) {\n    this.setState({\n      totalCounts: totalCounts\n    })\n  }\n\n  render() {\n    const { orderStatus, activeKey, totalCounts, permission } = this.state;\n    console.log(\"ROLE\", permission)\n    const tabStyle = {\n      margin: \"10px 0\",\n      padding: \"12px 16px\",\n      overflow: \"hidden\",\n    }\n    return (\n      <>\n        <div className=\"d-flex justify-content-end mb-2\">\n          <CForm className=\"w-50\">\n            <CInputGroup>\n              <CFormControl\n                type=\"text\"\n                id=\"floatingInput\"\n                placeholder=\"Search\"\n                className=\"p-2\"\n              />\n              <CButton\n                type=\"button\"\n                color=\"info\"\n                variant=\"outline\"\n                id=\"button-addon2\"\n                className=\"\"\n              >\n                <FaIcons.FaSearch />\n              </CButton>\n            </CInputGroup>\n          </CForm>\n        </div>\n        <CNav\n          variant=\"pills\"\n          role=\"tablist\"\n          layout=\"fill\"\n\n        // className=\"flex-column flex-sm-row\"\n        >\n          <CNavItem>\n            <CNavLink\n              href=\"#pending\"\n              active={activeKey === 1}\n              onClick={() => {\n                this.setState({ activeKey: 1, orderStatus: 'pending' })\n              }}\n            >\n              Pending <CBadge color=\"warning\">{totalCounts.PENDING ? totalCounts.PENDING : 0}</CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#confirmed\"\n              active={activeKey === 2}\n              onClick={() => {\n                this.setState({ activeKey: 2, orderStatus: 'confirmed' })\n              }}\n            >\n              Confirmed <CBadge color=\"warning\">{totalCounts.CONFIRMED ? totalCounts.CONFIRMED : 0}</CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#shipped\"\n              active={activeKey === 3}\n              onClick={() => {\n                this.setState({ activeKey: 3, orderStatus: 'shipped' })\n              }}\n            >\n              Shipped <CBadge color=\"warning\">{totalCounts.SHIPPED ? totalCounts.SHIPPED : 0}</CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#delivered\"\n              active={activeKey === 4}\n              onClick={() => {\n                this.setState({ activeKey: 4, orderStatus: 'delivered' })\n              }}\n            >\n              Delivered <CBadge color=\"warning\">{totalCounts.DELIVERED ? totalCounts.DELIVERED : 0}</CBadge>\n            </CNavLink>\n          </CNavItem>\n          {/* {(permission === Roles.SUPER_ADMIN || permission === Roles.ADMIN) &&\n            <CNavItem>\n              <CNavLink\n                href=\"#payment_received\"\n                active={activeKey === 5}\n                onClick={() => {\n                  this.setState({ activeKey: 5, orderStatus: 'PAYMENT_RECEIVED' })\n                }}\n              >\n                Payment Received <CBadge color=\"warning\">{totalCounts.PAYMENT_RECEIVED ? totalCounts.PAYMENT_RECEIVED : 0}</CBadge>\n              </CNavLink>\n            </CNavItem>\n          } */}\n        </CNav>\n\n        <CTabContent style={tabStyle}>\n          <CTabPane\n            role=\"tabpanel\"\n            aria-labelledby=\"contact-tab\"\n            visible={true}\n          >\n            <Suspense\n              fallback={\n                <div className=\"d-flex justify-content-center align-items-center  position-fixed \">\n                  <DotLoader color=\"#36D7B7\" size={100} />\n                </div>\n              }\n            >\n              <Orders\n                key={orderStatus}\n                status={orderStatus}\n                totalCounts={totalCounts}\n                totalCountChange={this.totalCountChange}\n              />\n            </Suspense>\n          </CTabPane>\n        </CTabContent>\n\n        {/* </CContainer> */}\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    orderResponse: state.orderResponse,\n    userResponse: state.userResponse\n  }\n}\nexport default connect(mapStateToProps, {\n})(Order)\n"],"sourceRoot":""}