{"version":3,"sources":["service/restAPI/CartApiService.js","service/apiActions/cartAction/cartAction.js","components/modals/shortcut/LoginModal.js","service/restAPI/WishlistApiService.js","service/apiActions/wishlistAction/wishlistAction.js","components/modals/product/ProductDetialsModal.js","components/products/ProductSummaryDetails.js","components/products/ProductDescriptions.js"],"names":["addToCart","id","axios","post","headers","authHeader","getCart","get","removeItem","console","log","delete","async","CartApiService","then","response","dispatch","type","ADD_TO_CART","payload","status","action","data","SET_MESSAGE","message","Promise","resolve","error","errorMessage","toString","code","reject","GET_CART_ITEMS","cart","removeCartItem","REMOVE_ITEM","LoginModal","Component","state","visible","username","password","loading","manageModalVisible","prevProps","prevState","modalVisibleResponse","this","props","setState","handleOnChange","event","name","target","value","handleShowPassword","preventDefault","handleOnSubmit","length","authenticateUser","roles","userResponse","credentials","roleName","Roles","SUPER_ADMIN","ADMIN","setLoginModal","setInterval","history","push","config","api","private","prefixFrontendUrl","window","location","reload","catch","componentDidUpdate","render","alignment","onDismiss","onSubmit","className","autoCorrect","placeholder","onChange","required","htmlFor","size","invalid","onClick","xs","sm","md","lg","variant","color","form","disabled","connect","messageResponse","getWishlist","query","page","limit","params","saveWishlist","wishlistDetails","deleteWishlist","orderId","WishlistApiService","GET_WISHLIST","ADD_WISHLIST","order","wishlistId","DELETE_WISHLIST","ProductDetialsModal","product","footerDisplay","manageModalVisibleResponse","handleAddToCart","isLoggedIn","token","accessToken","toast","scrollable","setProductDetailsModal","button","productDescription","ProductSummaryDetails","constructor","super","manageStatus","shape","handleAddToWishlist","productId","wishlist","wishlistResponse","inventory","promo","promoStatus","percentage","discount","productPrice","price","arrowStyles","position","zIndex","top","height","cursor","border","fontStyle","fontSize","fontWeight","rating","showArrows","infiniteLoop","renderArrowPrev","onClickHandler","hasPrev","label","title","style","left","renderArrowNext","hasNext","right","fileImages","map","image","index","src","path","fileName","NO_IMAGE_BASE64","productName","count","edit","padding","sku","brand","toFixed","quantity","totalStock","background","ProductDescriptions","description","createMarkup","html","__html","DOMPurify","sanitize","content","JSON","parse","convertFromRawContent","convertFromRaw","editorState","EditorState","createWithContent","draftToHtml","convertToRaw","getCurrentContent","dangerouslySetInnerHTML"],"mappings":"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","file":"static/js/31.b202e194.chunk.js","sourcesContent":["import authHeader from '../auth/authHeader';\nimport axios from './RestApi'\n\nexport class CartApiService {\n    addToCart(id) {\n        return axios.post(\"/cart/item/add/\" + id, {\n\n        }, {\n            headers: authHeader()\n        })\n    }\n    getCart() {\n        return axios.get(\"/cart\", {\n            headers: authHeader()\n        })\n    }\n    removeItem(id) {\n        console.log(id);\n        return axios.delete(\"/cart/item/remove/\" + id, {\n            headers: authHeader()\n        });\n    }\n}\n\nexport default new CartApiService();","import { SET_MESSAGE } from \"src/constants/userConstants\";\nimport { ADD_TO_CART, GET_CART_ITEMS, REMOVE_ITEM } from \"src/service/redux/constants\";\nimport CartApiService from \"src/service/restAPI/CartApiService\"\n\nexport const addToCart = (id) => async (dispatch) => {\n    return CartApiService.addToCart(id)\n        .then(\n            (response) => {\n                dispatch({\n                    type: ADD_TO_CART,\n                    payload: {\n                        status: 200,\n                        action: \"ADDTOCART\",\n                        data: {\n\n                        }\n                    }\n                })\n                dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        status: 200,\n                        data: {\n                            message: \"Added Successfully\"\n                        }\n                    }\n                })\n                return Promise.resolve();\n            },\n            (error) => {\n                const errorMessage =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                const status = (error.response &&\n                    error.response.data &&\n                    error.response.data.code) ||\n                    error.toString();\n\n                dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        status: status,\n                        data: {\n                            message: errorMessage\n                        }\n                    }\n                })\n                return Promise.reject();\n            }\n        )\n}\nexport const getCart = () => async (dispatch) => {\n    return CartApiService.getCart().then(\n        (response) => {\n            dispatch({\n                type: GET_CART_ITEMS,\n                payload: {\n                    status: 200,\n                    action: \"CARTITEMS\",\n                    data: {\n                        cart: response.data\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n}\n\nexport const removeCartItem = (id) => async (dispatch) => {\n    return CartApiService.removeItem(id).then(\n        (response) => {\n            dispatch({\n                type: REMOVE_ITEM,\n                payload: {\n                    status: 200,\n                    action: \"REMOVE\",\n                    data: {\n\n                    }\n                }\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 200,\n                    data: {\n                        message: \"Remove Item Successfully\"\n                    }\n                }\n            })\n\n            return Promise.resolve();\n        },\n        (error) => {\n            console.log(error);\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n}","import React, { Component } from \"react\"\nimport {\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CModalBody,\n  CButton,\n  CForm,\n  CFormFloating,\n  CFormLabel,\n  CFormControl,\n  CCol,\n  CRow,\n  CInputGroup,\n  CFormFeedback,\n  CSpinner,\n  CContainer,\n} from \"@coreui/react\"\n\nimport { connect } from \"react-redux\"\n//action\nimport { setLoginModal } from \"src/service/apiActions/modalAction/modalAction\"\nimport { authenticateUser } from \"src/service/apiActions/userAction/userAction\"\n//icons\nimport * as FaIcons from \"react-icons/fa\"\nimport * as FiIcons from \"react-icons/fi\"\nimport Roles from \"src/router/config\"\nimport { history } from \"src/_helper/history\"\n\nimport config from \"../../../config\"\n\nexport class LoginModal extends Component {\n  state = {\n    visible: false,\n    username: \"\",\n    password: \"\",\n    type: \"password\",\n    loading: false,\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.manageModalVisible(prevProps, prevState)\n  }\n  manageModalVisible = (prevProps, prevState) => {\n    if (prevProps.modalVisibleResponse !== this.props.modalVisibleResponse) {\n      let { action, visible } = this.props.modalVisibleResponse\n      if (action === \"LOGIN\") {\n        this.setState({\n          visible: visible,\n        })\n      } else if (action === \"loginclose\") {\n        this.setState({\n          visible: visible,\n        })\n      }\n    }\n  }\n  handleOnChange = (event) => {\n    let name = event.target.name\n    this.setState({\n      [name]: event.target.value,\n    })\n  }\n  handleShowPassword = (event) => {\n    const { type } = this.state\n    event.preventDefault()\n    this.setState({\n      type: type === \"password\" ? \"text\" : \"password\",\n    })\n  }\n  handleOnSubmit = (event) => {\n    const { username, password } = this.state\n    event.preventDefault()\n    this.setState({\n      loading: true,\n    })\n    if (username.length !== 0 && password.length !== 0) {\n      this.props\n        .authenticateUser(username, password)\n        .then(() => {\n          let { roles } = this.props.userResponse.credentials\n\n          if (\n            roles.roleName === Roles.SUPER_ADMIN ||\n            roles.roleName === Roles.ADMIN\n          ) {\n            this.props.setLoginModal(false, \"loginclose\")\n            setInterval(() => {\n              history.push(\n                config.api.private.prefixFrontendUrl + \"/app/dashboard\",\n              )\n              window.location.reload()\n            }, 1000)\n          } else {\n            this.props.setLoginModal(false, \"loginclose\")\n          }\n        })\n        .catch(() => {\n          this.setState({\n            loading: false,\n          })\n        })\n    } else {\n      this.setState({\n        loading: false,\n      })\n    }\n  }\n\n  render() {\n    let { visible, username, password, type, loading } = this.state\n    return (\n      <>\n        <CModal alignment=\"center\" visible={visible}>\n          <CModalHeader\n            onDismiss={() => this.props.setLoginModal(false, \"loginclose\")}\n          >\n            <CModalTitle>Login</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CContainer>\n              <CForm id=\"loginForm\" onSubmit={this.handleOnSubmit}>\n                <CRow>\n                  <CInputGroup className=\"d-flex justify-content-center\">\n                    <CCol>\n                      <CFormFloating className=\"mb-3 text-dark \">\n                        <CFormControl\n                          name=\"username\"\n                          type=\"text\"\n                          autoCorrect=\"false\"\n                          id=\"floatingInput\"\n                          placeholder=\"username\"\n                          onChange={this.handleOnChange}\n                          value={username}\n                          required\n                          className=\"rounded-pill  ps-4 pe-4\"\n                        />\n                        <CFormLabel\n                          htmlFor=\"floatingInput \"\n                          className=\"ps-4 pe-4\"\n                        >\n                          <FaIcons.FaUserCircle size={18} />\n                          <span className=\"ps-2\">Username</span>\n                        </CFormLabel>\n                        <CFormFeedback invalid>\n                          Please provide a valid username\n                        </CFormFeedback>\n                      </CFormFloating>\n                    </CCol>\n                  </CInputGroup>\n                  <CInputGroup className=\"d-flex justify-content-center\">\n                    <CCol>\n                      <CFormFloating className=\"text-dark position-relative\">\n                        <CFormControl\n                          name=\"password\"\n                          type={type}\n                          id=\"floatingPassword\"\n                          autoCorrect=\"false\"\n                          placeholder=\"Password\"\n                          onChange={this.handleOnChange}\n                          value={password}\n                          required\n                          className=\"rounded-pill ps-4 pe-4\"\n                        />\n                        <CFormLabel\n                          htmlFor=\"exampleFormControlTextarea1 \"\n                          className=\"ps-4 pe-4\"\n                        >\n                          <FaIcons.FaLock size={18} />\n                          <span className=\"ps-2\">Password</span>\n                        </CFormLabel>\n                        <span\n                          onClick={this.handleShowPassword}\n                          className=\"position-absolute top-50 end-0 translate-middle-y ps-4 pe-4\"\n                        >\n                          {type === \"password\" ? (\n                            <FaIcons.FaEyeSlash size={20} />\n                          ) : (\n                            <FaIcons.FaEye size={20} />\n                          )}\n                        </span>\n                        <CFormFeedback invalid>\n                          Please provide a valid password\n                        </CFormFeedback>\n                      </CFormFloating>\n                    </CCol>\n                    <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\"></CCol>\n                  </CInputGroup>\n                </CRow>\n              </CForm>\n            </CContainer>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              variant=\"ghost\"\n              color=\"dark\"\n              onClick={() => this.props.setLoginModal(false, \"loginclose\")}\n            >\n              Close\n            </CButton>\n            <CButton\n              form=\"loginForm\"\n              type=\"submit\"\n              color=\"info\"\n              className=\"d-flex justify-content-center align-items-center position-relative overflow-hidden login-btn\"\n              disabled={loading}\n            >\n              {loading ? (\n                <CSpinner size=\"sm\" />\n              ) : (\n                <span className=\"d-flex align-items-center login-icon me-2\">\n                  <FiIcons.FiLogIn size={20} />\n                </span>\n              )}\n\n              <span className=\"label-btn \">Login</span>\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    modalVisibleResponse: state.modalVisibleResponse,\n    messageResponse: state.messageResponse,\n    userResponse: state.userResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  setLoginModal,\n  authenticateUser,\n})(LoginModal)\n","import authHeader from '../auth/authHeader';\nimport axios from './RestApi';\n\nexport class WishlistApiService {\n    getWishlist(query, page, limit) {\n        return axios.get(\"/wishlist\", {\n            headers: authHeader(),\n            params: {\n                query: query,\n                page: page,\n                limit: limit,\n            }\n        })\n    }\n    saveWishlist(wishlistDetails) {\n        return axios.post(\"/wishlist\", wishlistDetails, {\n            headers: authHeader()\n        })\n    }\n    deleteWishlist(orderId) {\n        return axios.delete(\"/wishlist/\" + orderId, {\n            headers: authHeader()\n        })\n    }\n}\nexport default new WishlistApiService();","import { GET_WISHLIST, DELETE_WISHLIST, ADD_WISHLIST } from \"src/service/redux/constants\";\nimport { SET_MESSAGE } from \"src/constants/userConstants\";\nimport WishlistApiService from \"src/service/restAPI/WishlistApiService\";\n\n\nexport const getWishlist = (query, page, limit) => async (dispatch) => {\n    return WishlistApiService.getWishlist(query, page, limit).then(\n        (response) => {\n            dispatch({\n                type: GET_WISHLIST,\n                payload: {\n                    status: 200,\n                    action: \"GET_WISHLIST\",\n                    data: response.data\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n\n}\n\nexport const saveWishlist = (wishlistDetails) => async (dispatch) => {\n    return WishlistApiService.saveWishlist(wishlistDetails).then(\n        (response) => {\n            dispatch({\n                type: ADD_WISHLIST,\n                payload: {\n                    status: 200,\n                    action: \"ADD_WISHLIST\",\n                    data: response.data\n                }\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 200,\n                    data: {\n                        message: \"Successfully added to wishlist\",\n                        order: response.data\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n}\n\nexport const deleteWishlist = (wishlistId) => async (dispatch) => {\n    return WishlistApiService.deleteWishlist(wishlistId).then(\n        (response) => {\n            dispatch({\n                type: DELETE_WISHLIST,\n                payload: {\n                    status: 200,\n                    action: \"DELETE_WISHLIST\",\n                    data: {\n                        order: response.data\n                    }\n                }\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 200,\n                    data: {\n                        message: \"Successfully deleted wishlist\"\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            console.log(\"JKOSLDFJ\")\n            return Promise.reject();\n        }\n    )\n}","import React, { Component } from \"react\"\nimport {\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CRow,\n  CCol,\n  CButton,\n  CSpinner,\n\n\n} from \"@coreui/react\"\nimport { connect } from \"react-redux\"\n//action\nimport { setProductDetailsModal } from \"src/service/apiActions/modalAction/modalAction\"\nimport { setLoginModal } from \"src/service/apiActions/modalAction/modalAction\"\nimport { addToCart } from \"src/service/apiActions/cartAction/cartAction\"\n//icons\n// import { FaCartPlus, FaShoppingCart } from \"react-icons/fa\";\nimport * as FaIcons from \"react-icons/fa\"\nimport ProductSummaryDetails from \"../../products/ProductSummaryDetails\"\nimport LoginModal from \"../shortcut/LoginModal\"\nimport ProductDescriptions from \"src/components/products/ProductDescriptions\"\nexport class ProductDetialsModal extends Component {\n  state = {\n    visible: false,\n    product: [],\n    loading: false,\n    message: \"\",\n\n    footerDisplay: false,\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.manageModalVisibleResponse(prevProps, prevState)\n  }\n  manageModalVisibleResponse = (prevProps, prevState) => {\n    if (prevProps.modalVisibleResponse !== this.props.modalVisibleResponse) {\n      let { action, visible, product } = this.props.modalVisibleResponse\n      if (action === \"PRODUCTDETAILS\") {\n        this.setState({\n          visible: visible,\n          product: product,\n          footerDisplay: true,\n        })\n      } else if (action === \"close\") {\n        this.setState({\n          visible: visible,\n          product: product,\n          footerDisplay: false,\n        })\n      } else if (action === \"view\") {\n        this.setState({\n          visible: visible,\n          product: product,\n          footerDisplay: false,\n        })\n      }\n    }\n  }\n  handleAddToCart = (event) => {\n    let { product } = this.state.product\n    let { isLoggedIn, credentials } = this.props.userResponse\n    this.setState({\n      loading: true,\n    })\n    if (!isLoggedIn) {\n      this.setState({\n        loading: false,\n      })\n      this.props.setLoginModal(true, \"LOGIN\")\n    } else {\n      let token = credentials.type + credentials.accessToken\n      this.props\n        .addToCart(product.id, token)\n        .then(() => {\n          console.log(\"success added\")\n          this.setState({\n            loading: false,\n          })\n        })\n\n    }\n  }\n\n  render() {\n    let { visible, product, loading, toast, footerDisplay } = this.state\n    return (\n      <>\n        {product && (\n          <>\n            <LoginModal />\n\n            <CModal\n              size=\"xl\"\n              visible={visible}\n              scrollable\n              onDismiss={() =>\n                this.props.setProductDetailsModal(false, \"close\", \"\")\n              }\n            >\n              <CModalHeader\n                onDismiss={() =>\n                  this.props.setProductDetailsModal(false, \"close\", \"\")\n                }\n              >\n                <CModalTitle>Product Details</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <ProductSummaryDetails product={product} button={false} />\n                <div className=\" p-2\">\n                  <h4 className=\"mb-4\">Product Description</h4>\n                  <ProductDescriptions\n                    productDescription={\n                      product.product && product.product.productDescription\n                    }\n                  />\n                </div>\n              </CModalBody>\n              <CModalFooter>\n                <div className={footerDisplay ? \"d-flex\" : \"d-none\"}>\n                  <CButton\n                    variant=\"ghost\"\n                    color=\"dark\"\n                    className=\"d-flex justify-content-center align-items-center\"\n                  >\n                    <span className=\"text-black\">View Detailed</span>\n                  </CButton>\n                  <CButton\n                    type=\"button\"\n                    color=\"info\"\n                    className=\"d-flex justify-content-center align-items-center\"\n                    onClick={this.handleAddToCart}\n                    disabled={loading}\n                  >\n                    {loading ? (\n                      <CSpinner size=\"sm\" />\n                    ) : (\n                      <span className=\"d-flex align-items-center login-icon me-2\">\n                        <FaIcons.FaCartPlus />\n                      </span>\n                    )}\n                    <span className=\"ms-2\">Add To Cart</span>\n                  </CButton>\n                </div>\n                <CButton\n                  className={footerDisplay ? \"d-none\" : \"d-block\"}\n                  color=\"secondary\"\n                  variant=\"ghost\"\n                  onClick={() =>\n                    this.props.setProductDetailsModal(false, \"close\", \"\")\n                  }\n                >\n                  Close\n                </CButton>\n              </CModalFooter>\n            </CModal>\n          </>\n        )}\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    modalVisibleResponse: state.modalVisibleResponse,\n    userResponse: state.userResponse,\n    messageResponse: state.messageResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  setProductDetailsModal,\n  setLoginModal,\n  addToCart,\n})(ProductDetialsModal)\n","import React, { Component } from \"react\"\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CCardTitle,\n  CCardBody,\n  CButton,\n  CCardFooter,\n  CSpinner,\n  CBadge\n\n} from \"@coreui/react\"\nimport * as IoIcons from \"react-icons/io\"\nimport { Carousel } from \"react-responsive-carousel\"\nimport ReactStars from \"react-rating-stars-component\"\nimport { NO_IMAGE_BASE64 } from \"src/service/redux/constants\"\nimport * as FaIcons from \"react-icons/fa\"\nimport { addToCart } from \"src/service/apiActions/cartAction/cartAction\"\nimport { connect } from \"react-redux\"\nimport { setLoginModal } from \"src/service/apiActions/modalAction/modalAction\"\nimport LoginModal from \"../modals/shortcut/LoginModal\"\n\nimport { saveWishlist, deleteWishlist } from \"src/service/apiActions/wishlistAction/wishlistAction\"\n\nexport class ProductSummaryDetails extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      product: this.props.product,\n      loading: false,\n      button: this.props.button,\n\n    }\n  }\n\n  handleAddToCart = (event) => {\n    let { product } = this.state.product\n    let { isLoggedIn, credentials } = this.props.userResponse\n    this.setState({\n      loading: true,\n    })\n    if (!isLoggedIn) {\n      this.setState({\n        loading: false,\n      })\n      this.props.setLoginModal(true, \"LOGIN\")\n    } else {\n      let token = credentials.type + credentials.accessToken\n      this.props\n        .addToCart(product.id, token)\n        .then(() => {\n          this.setState({\n            loading: false,\n          })\n        })\n        .catch(() => {\n          let { status, action } = this.props.messageResponse\n          this.setState({\n            loading: false,\n          })\n        })\n    }\n  }\n\n  handleAddToWishlist(productId) {\n    let { product } = this.state\n    let { isLoggedIn, credentials } = this.props.userResponse\n    this.setState({\n      loading: true,\n    })\n    if (!isLoggedIn) {\n      this.setState({\n        loading: false,\n      })\n      this.props.setLoginModal(true, \"LOGIN\")\n      return;\n    }\n    const wishlist = product.wishlist;\n    if (wishlist && wishlist.id > 0) {\n      this.props.deleteWishlist(wishlist.id).then(() => {\n        product.wishlist = null;\n        this.setState({ product: product, loading: false })\n      })\n    } else {\n      this.props.saveWishlist({ id: productId }).then(() => {\n        product.wishlist = this.props.wishlistResponse.data;\n        this.setState({ product: product, loading: false })\n      })\n    }\n  }\n  manageStatus = (status) => {\n    switch (status) {\n      case \"OK\":\n        return (\n          <CBadge color=\"success\" shape=\"rounded-pill\">\n            {status}\n          </CBadge>\n        )\n      case \"LOW\":\n        return (\n          <CBadge color=\"warning\" shape=\"rounded-pill\">\n            {status}\n          </CBadge>\n        )\n      case \"OUT_OF_STOCK\":\n        return (\n          <CBadge color=\"danger\" shape=\"rounded-pill\">\n            OUT OF STOCK\n          </CBadge>\n        )\n      default:\n        return (\n          <CBadge color=\"danger\" shape=\"rounded-pill\">\n            {status}\n          </CBadge>\n        )\n    }\n  }\n  render() {\n    const { product, inventory, wishlist, promo } = this.state.product\n    const { loading, toast, button } = this.state;\n    const promoStatus = promo && promo.status\n    const percentage = promo && promo.percentage\n    let discount = (product.productPrice * percentage) / 100\n    let price = product.productPrice - discount\n    const arrowStyles = {\n      position: \"absolute\",\n      zIndex: \"2\",\n      top: \"calc(4% - 16px)\",\n      // width: \"30\",\n      height: \"100%\",\n      cursor: \"pointer\",\n      border: \"none\",\n    }\n    const fontStyle = {\n      fontSize: \"14px\",\n      fontWeight: \"500\",\n    }\n    const rating = product.rating ? product.rating : 0;\n    return (\n      <>\n        <LoginModal />\n\n\n        <CRow>\n\n          <CCol sm=\"12\" md=\"5\" lg=\"5\">\n            <Carousel\n              showArrows={true}\n              infiniteLoop={true}\n              renderArrowPrev={(onClickHandler, hasPrev, label) =>\n                hasPrev && (\n                  <button\n                    type=\"button\"\n                    onClick={onClickHandler}\n                    title={label}\n                    className=\"arrow-style\"\n                    style={{ ...arrowStyles, left: 0 }}\n                  >\n                    <IoIcons.IoIosArrowBack\n                      size=\"40\"\n                      style={{ color: \"white\" }}\n                    />\n                  </button>\n                )\n              }\n              renderArrowNext={(onClickHandler, hasNext, label) =>\n                hasNext && (\n                  <button\n                    type=\"button\"\n                    onClick={onClickHandler}\n                    title={label}\n                    className=\"arrow-style\"\n                    style={{ ...arrowStyles, right: 0 }}\n                  >\n                    <IoIcons.IoIosArrowForward\n                      size=\"40\"\n                      style={{ color: \"white\" }}\n                    />\n                  </button>\n                )\n              }\n            >\n              {product.fileImages.length > 0 ? (\n                product.fileImages.map((image, index) => {\n                  return (\n                    <div key={index}>\n                      <img\n                        src={\"/images/products/\" + image.path + image.fileName}\n                      />\n                    </div>\n                  )\n                })\n              ) : (\n                <img src={NO_IMAGE_BASE64} />\n              )}\n            </Carousel>\n          </CCol>\n          <CCol sm=\"12\" md=\"7\" lg=\"7\">\n            <CCard className=\"border-0 p-3\">\n              <CCardTitle>{product.productName}</CCardTitle>\n              <CCardBody className=\" ps-0\">\n                <div className=\"d-flex justify-content-start align-items-center\">\n                  {rating ?\n                    <ReactStars\n                      count={5}\n                      value={rating ? rating : 0}\n                      size={24}\n                      edit={false}\n                    />\n                    :\n                    <div style={{ padding: \"5px 0px\" }}>\n                      <span className=\"text-black-50 \">No Rating</span>\n                    </div>\n                  }\n                </div>\n                {product.sku &&\n                  <div className=\"mt-2 mb-2\" style={{ ...fontStyle }}>\n                    <span className=\"text-black-50 me-3 \">SKU</span>\n                    <span className=\"text-black-50 me-3 \">112354879</span>\n                  </div>\n                }\n                <div className=\"mt-2 mb-2\" style={{ ...fontStyle }}>\n                  <span className=\"me-3 text-black-50\">Brand</span>\n                  <span className=\"me-3\">\n                    {product.brand ? product.brand.brand : \"No Brand\"}\n                  </span>\n                </div>\n                <div className=\"mt-3 mb-3  d-flex align-items-center justify-content-between\">\n                  <h5 className=\"peso-price\">\n                    &#8369;{promoStatus ? <>\n                      <span\n                        className=\"text-muted text-decoration-line-through me-2\"\n                        style={{ fontSize: \"16px\" }}\n                      >\n                        {product.productPrice.toFixed(2)}\n                      </span>\n                      <span>{price.toFixed(2)}</span>\n                      <span\n                        className=\"text-muted ms-3\"\n                        style={{ fontSize: \"16px\" }}\n                      >\n                        {percentage + \"%\"}\n                      </span></>\n                      : product.productPrice.toFixed(2)}\n                  </h5>\n                  {/* <span style={{ ...fontStyle }} className=\"peso-price\">\n                    {inventory.totalSold ? inventory.totalSold : 0} <span className=\"text-muted\">sold</span>\n                  </span> */}\n                </div>\n                <div className=\"product-stock-container\">\n                  <span className=\"stock-label\">Stock: </span>\n                  {promo ? <span className=\"stock-label-value\">\n                    {promo.quantity}\n                  </span> : inventory.totalStock > 0 ? (\n                    <span className=\"stock-label-value\">\n                      {inventory.totalStock}\n                    </span>\n                  ) : (\n                    this.manageStatus(inventory.status)\n                  )}\n                </div>\n                <hr />\n\n              </CCardBody>\n              {button ?\n                <CCardFooter className=\"bg-transparent\">\n                  <div className=\"d-flex justify-content-end \">\n                    {promoStatus ?\n                      <CButton\n                        type=\"button\"\n                        color=\"info\"\n                        className=\"d-flex justify-content-center align-items-center w-100\"\n                        onClick={this.handleAddToCart}\n                        disabled={loading}\n                      >\n                        {loading ? (\n                          <CSpinner size=\"sm\" />\n                        ) : (\n                          <span className=\"d-flex align-items-center login-icon me-2\">\n                            <FaIcons.FaCartPlus />\n                          </span>\n                        )}\n                        <span className=\"ms-2\">Add To Cart</span>\n                      </CButton>\n                      : inventory.status != 'OUT_OF_STOCK' ?\n                        <CButton\n                          type=\"button\"\n                          color=\"info\"\n                          className=\"d-flex justify-content-center align-items-center w-100\"\n                          onClick={this.handleAddToCart}\n                          disabled={loading}\n                        >\n                          {loading ? (\n                            <CSpinner size=\"sm\" />\n                          ) : (\n                            <span className=\"d-flex align-items-center login-icon me-2\">\n                              <FaIcons.FaCartPlus />\n                            </span>\n                          )}\n                          <span className=\"ms-2\">Add To Cart</span>\n                        </CButton>\n                        :\n                        <CButton\n                          type=\"button\"\n                          color=\"info\"\n                          className=\"d-flex justify-content-center align-items-center w-100\"\n                          onClick={() => { this.handleAddToWishlist(product.id) }}\n                          disabled={loading}\n                          style={{ background: \"pink\" }}\n                        >\n                          {loading ? (\n                            <CSpinner size=\"sm\" />\n                          ) : (\n                            <span className=\"d-flex align-items-center login-icon me-2\">\n                              <FaIcons.FaHeart />\n                            </span>\n                          )}\n                          <span className=\"ms-2\">{wishlist ? 'Remove Wishlist' : 'Add To Wishlist'}</span>\n                        </CButton>\n                    }\n\n                  </div>\n\n                </CCardFooter> : <></>}\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    modalVisibleResponse: state.modalVisibleResponse,\n    userResponse: state.userResponse,\n    wishlistResponse: state.wishlistResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  setLoginModal,\n  addToCart,\n  saveWishlist,\n  deleteWishlist,\n})(ProductSummaryDetails)\n","import React, { Component } from \"react\"\nimport { EditorState, convertFromRaw, convertToRaw } from \"draft-js\"\nimport DOMPurify from \"dompurify\"\nimport draftToHtml from \"draftjs-to-html\"\nexport class ProductDescriptions extends Component {\n  state = {\n    description: this.props.productDescription,\n  }\n  createMarkup = (html) => {\n    return {\n      __html: DOMPurify.sanitize(html),\n    }\n  }\n  render() {\n    let { description } = this.state\n    let content = description && JSON.parse(description)\n    if (content) {\n      let convertFromRawContent = convertFromRaw(content)\n      const editorState = EditorState.createWithContent(convertFromRawContent)\n      const html = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n      return (\n        <>\n          <div\n            className=\"preview ps-4\"\n            dangerouslySetInnerHTML={this.createMarkup(html)}\n          ></div>\n        </>\n      )\n    } else {\n      return (\n        <>\n          <div className=\"preview ps-4\"></div>\n        </>\n      )\n    }\n  }\n}\n\nexport default ProductDescriptions\n"],"sourceRoot":""}