{"version":3,"sources":["service/apiActions/modalAction/modalAction.js","service/restAPI/AddressApiService.js","service/apiActions/addressAction/addressAction.js","views/common/address/CustomerAddressController.js","components/modals/address/AddressModal.js"],"names":["setProductModal","visible","action","icon","async","dispatch","type","SET_PRODUCTEDITMODAL_VISIBILIT","payload","status","data","setProductDetailsModal","product","SET_PRODUCT_DETAILS_MODAL","editProductModal","updateProduct","EDIT_PRODUCT_MODAL","setAlertModal","alert","module","id","ALERT_MODAL","setAlertBanModal","ALERT_BAN_MODAL","addBrandModal","branch","ADD_BRAND_MODAL","brand","addCategoryModal","category","ADD_CATEGORY_MODAL","addAccountModal","employee","ADD_EMPLOYEE_MODAL","changePasswordModal","CHANGE_PASSWORD_MODAL","setLoginModal","LOGIN_MODAL","setAddressModal","address","SET_ADDRESS_MODAL","setSupplierModal","supplier","SET_SUPPLIER_MODAL","setSupplyModal","supply","SET_SUPPLY_MODAL","setScanModal","SET_SCAN_MODAL","setPromoModal","promo","SET_PROMO_MODAL","getAddresses","axios","get","headers","authHeader","updateAddress","update","saveAddress","post","firstName","lastName","phoneNumber","region","city","province","barangay","street","postalCode","getAdress","AddressApiService","then","response","GET_ADDRESSES","addresses","Promise","resolve","error","errorMessage","message","toString","code","SET_MESSAGE","reject","console","log","SAVE_ADDRESS","CustomerAddressController","Component","state","addressId","retreiveAddressResponse","this","props","manageAddressResponse","prevProps","prevState","addressResponse","setState","manageModalVisible","modalVisible","componentDidMount","userResponse","isLoggedIn","history","push","componentDidUpdate","render","shape","color","variant","className","onClick","size","style","marginLeft","map","index","checked","getValue","md","fontStyle","role","connect","messageResponse","modalVisibleResponse","clearMessage","withRouter","AddressModal","addressStates","loading","handleOnChange","event","target","name","value","handleOnSubmit","preventDefault","handleSaveAddress","onResetValue","catch","prevPros","onDismiss","onSubmit","placeholder","onChange","required","htmlFor","disabled","form"],"mappings":"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","file":"static/js/36.9e3632e7.chunk.js","sourcesContent":["import {\n  ADD_BRANCH_MODAL,\n  ALERT_MODAL,\n  EDIT_PRODUCT_MODAL,\n  SET_PRODUCTEDITMODAL_VISIBILIT,\n  ADD_BRAND_MODAL,\n  ADD_CATEGORY_MODAL,\n  ADD_EMPLOYEE_MODAL,\n  SET_PRODUCT_DETAILS_MODAL,\n  LOGIN_MODAL,\n  SET_ADDRESS_MODAL,\n  SET_SUPPLIER_MODAL,\n  SET_SUPPLY_MODAL,\n  SET_SCAN_MODAL,\n  SET_PROMO_MODAL,\n  ALERT_BAN_MODAL,\n  CHANGE_PASSWORD_MODAL,\n} from \"src/service/redux/constants\"\n\nexport const setProductModal = (visible, action, icon) => async (dispatch) => {\n  dispatch({\n    type: SET_PRODUCTEDITMODAL_VISIBILIT,\n    payload: {\n      status: 200,\n      data: {\n        visible: visible,\n        action: action,\n        icon: icon,\n      },\n    },\n  })\n}\nexport const setProductDetailsModal =\n  (visible, action, product) => async (dispatch) => {\n    dispatch({\n      type: SET_PRODUCT_DETAILS_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          product: product,\n        },\n      },\n    })\n  }\nexport const editProductModal =\n  (visible, action, updateProduct, icon) => async (dispatch) => {\n    dispatch({\n      type: EDIT_PRODUCT_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          product: updateProduct,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const setAlertModal =\n  (alert, action, module, id) => async (dispatch) => {\n    dispatch({\n      type: ALERT_MODAL,\n      payload: {\n        action: action,\n        module: module,\n        alert: alert,\n        data: {\n          id: id,\n        },\n      },\n    })\n  }\nexport const setAlertBanModal =\n  (alert, action, module, id) => async (dispatch) => {\n    dispatch({\n      type: ALERT_BAN_MODAL,\n      payload: {\n        action: action,\n        module: module,\n        alert: alert,\n        data: {\n          id: id,\n        },\n      },\n    })\n  }\nexport const addBranchModal =\n  (visible, action, branch, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_BRANCH_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          branch: branch,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addBrandModal =\n  (visible, action, branch, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_BRAND_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          brand: branch,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addCategoryModal =\n  (visible, action, category, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_CATEGORY_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          category: category,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addAccountModal =\n  (visible, action, employee, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_EMPLOYEE_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          employee: employee,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const changePasswordModal =\n  (visible, action, employee, icon) => async (dispatch) => {\n    dispatch({\n      type: CHANGE_PASSWORD_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          employee: employee,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const setLoginModal = (visible, action) => async (dispatch) => {\n  dispatch({\n    type: LOGIN_MODAL,\n    payload: {\n      data: {\n        visible: visible,\n        action: action,\n      },\n    },\n  })\n}\n\nexport const setAddressModal =\n  (visible, action, address, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_ADDRESS_MODAL,\n      payload: {\n        data: {\n          visible: visible,\n          action: action,\n          address: address,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const setSupplierModal =\n  (visible, action, supplier, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_SUPPLIER_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          supplier: supplier,\n        },\n      },\n    })\n  }\nexport const setSupplyModal =\n  (visible, action, supply, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_SUPPLY_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          supply: supply,\n        },\n      },\n    })\n  }\n\nexport const setScanModal = (visible, action) => async (dispatch) => {\n  dispatch({\n    type: SET_SCAN_MODAL,\n    payload: {\n      action: action,\n      data: {\n        visible: visible,\n      },\n    },\n  })\n}\nexport const setPromoModal =\n  (visible, action, promo, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_PROMO_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          promo: promo,\n        },\n      },\n    })\n  }\n","import authHeader from '../auth/authHeader';\nimport axios from './RestApi'\n\nexport class AddressApiService {\n    getAddresses() {\n        return axios.get(\"/addresses\", {\n            headers: authHeader()\n        })\n    }\n    updateAddress(id, address) {\n        return axios.update(\"/addresses/update/\" + id, {\n            address\n        }, {\n            headers: authHeader()\n        })\n    }\n    saveAddress(address) {\n        return axios.post(\"/addresses/save\", {\n            firstName: address.firstName,\n            lastName: address.lastName,\n            phoneNumber: address.phoneNumber,\n            region: address.region,\n            city: address.city,\n            province: address.province,\n            barangay: address.barangay,\n            street: address.street,\n            postalCode: address.postalCode\n        }, {\n            headers: authHeader()\n        })\n    }\n}\n\nexport default new AddressApiService();","import { SET_MESSAGE } from \"src/constants/userConstants\";\nimport { GET_ADDRESSES, SAVE_ADDRESS } from \"src/service/redux/constants\";\nimport AddressApiService from \"src/service/restAPI/AddressApiService\"\n\nexport const getAdress = () => async (dispatch) => {\n    return AddressApiService.getAddresses().then(\n        (response) => {\n            dispatch({\n                type: GET_ADDRESSES,\n                payload: {\n                    status: 200,\n                    action: \"GET_ADDRESSES\",\n                    data: {\n                        addresses: response.data\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n}\n\nexport const saveAddress = (address) => async (dispatch) => {\n    console.log(address)\n    return AddressApiService.saveAddress(address).then(\n        (response) => {\n            dispatch({\n                type: SAVE_ADDRESS,\n                payload: {\n                    status: 200,\n                    action: \"SAVE_ADDRESS\",\n                    data: {\n                    }\n                }\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 200,\n                    data: {\n                        message: \"Address Successfully Saved\"\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            const status = (error.response &&\n                error.response.data &&\n                error.response.data.code) ||\n                error.toString();\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: status,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n}","import React, { Component } from \"react\"\r\nimport {\r\n  CButton,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardTitle,\r\n  CFormCheck,\r\n  CCardBody,\r\n  CAlert,\r\n} from \"@coreui/react\"\r\nimport { withRouter } from \"react-router\"\r\nimport { getAdress } from \"src/service/apiActions/addressAction/addressAction\"\r\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction\"\r\nimport { setAddressModal } from \"src/service/apiActions/modalAction/modalAction\"\r\nimport AddressModal from \"src/components/modals/address/AddressModal\"\r\nimport { connect } from \"react-redux\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nexport class CustomerAddressController extends Component {\r\n  state = {\r\n    message: \"\",\r\n    action: \"\",\r\n    addresses: [],\r\n    addressId: \"\",\r\n    visible: false,\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.userResponse.isLoggedIn) {\r\n      this.props.history.push(\"/login\")\r\n    } else {\r\n      this.retreiveAddressResponse()\r\n    }\r\n  }\r\n  retreiveAddressResponse = () => {\r\n    this.props.getAdress()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.manageAddressResponse(prevProps, prevState)\r\n    this.manageModalVisible(prevProps, prevState)\r\n  }\r\n  manageAddressResponse = (prevProps, prevState) => {\r\n    if (prevProps.addressResponse !== this.props.addressResponse) {\r\n      let { action, status, data } = this.props.addressResponse\r\n      if (action === \"GET_ADDRESSES\" && status === 200) {\r\n        this.setState({\r\n          addresses: data.addresses,\r\n        })\r\n      }\r\n    }\r\n  }\r\n  manageModalVisible = (prevProps, prevState) => {\r\n    if (prevProps.modalVisible !== this.props.modalVisible) {\r\n      let { action } = this.props.modalVisible\r\n      if (action === \"close\") {\r\n        this.retreiveAddressResponse()\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { message, addresses, visible } = this.state\r\n    const cursorStyle = {\r\n      cursor: \"pointer\",\r\n    }\r\n    return (\r\n      <>\r\n        <AddressModal />\r\n        <CButton\r\n          shape=\"rounded-pill\"\r\n          color=\"primary\"\r\n          variant=\"ghost\"\r\n          className=\"d-flex justify-content-center align-items-center mb-3\"\r\n          onClick={() =>\r\n            this.props.setAddressModal(\r\n              !visible,\r\n              \"Add\",\r\n              \"\",\r\n              <FaIcons.FaPlus size={20} className=\"me-2\" />,\r\n            )\r\n          }\r\n        >\r\n          <FaIcons.FaPlus size={20} />\r\n          <span style={{ marginLeft: \"10px\" }}>Add Branch</span>\r\n        </CButton>\r\n        <CRow>\r\n          {addresses.map((address, index) => {\r\n            let checked = this.props.getValue == address.id\r\n            return (\r\n              <CCol key={index} md={12} className=\"mb-3\">\r\n                <CCard\r\n                  className={\r\n                    checked ? \"border-envelope shadow\" : \"border-envelope\"\r\n                  }\r\n                >\r\n                  <CCardBody className=\"p-3 \">\r\n                    <div className=\"d-flex align-items-center justify-content-start\">\r\n                      <CCardTitle>\r\n                        {address.firstName + \" \" + address.lastName}\r\n                      </CCardTitle>\r\n                    </div>\r\n\r\n                    <div className=\"ps-3\">{address.city}</div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            )\r\n          })}\r\n          <CCol className=\"m-3 text-center\" style={{ fontStyle: \"italic\" }}>\r\n            <CAlert color=\"warning\">\r\n              To Proceed to the next step Select or Add your Address Information\r\n            </CAlert>\r\n          </CCol>\r\n        </CRow>\r\n        {message && (\r\n          <div className=\"form-group d-flex justify-content-center align-items-center\">\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    addressResponse: state.addressResponse,\r\n    userResponse: state.userResponse,\r\n    messageResponse: state.messageResponse,\r\n    modalVisible: state.modalVisibleResponse,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getAdress,\r\n  clearMessage,\r\n  setAddressModal,\r\n})(withRouter(CustomerAddressController))\r\n","import React, { Component } from \"react\"\nimport {\n  CButton,\n  // CRow,\n  CCol,\n  CFormFloating,\n  CFormLabel,\n  CFormControl,\n  CForm,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalTitle,\n  CModalFooter,\n  CSpinner,\n} from \"@coreui/react\"\nimport { connect } from \"react-redux\"\n//action\nimport { setAddressModal } from \"src/service/apiActions/modalAction/modalAction\"\nimport { saveAddress } from \"src/service/apiActions/addressAction/addressAction\"\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction\"\nexport class AddressModal extends Component {\n  state = {\n    visible: false,\n    icon: \"\",\n    address: this.addressStates,\n    loading: false,\n    action: \"\",\n  }\n  addressStates = {\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    region: \"\",\n    city: \"\",\n    province: \"\",\n    barangay: \"\",\n    street: \"\",\n    postalCode: \"\",\n  }\n  componentDidUpdate(prevPros, prevState) {\n    this.manageModalVisible(prevPros, prevState)\n  }\n  manageModalVisible = (prevProps, prevState) => {\n    if (prevProps.modalVisible !== this.props.modalVisible) {\n      let { visible, action, address, icon } = this.props.modalVisible\n      if (action === \"Add\") {\n        this.setState({\n          visible: visible,\n          icon: icon,\n          action: action,\n        })\n      } else if (action === \"Edit\") {\n        this.setState({\n          visible: visible,\n          icon: icon,\n          action: action,\n        })\n      } else {\n        this.setState({\n          visible: visible,\n          icon: \"\",\n          action: \"\",\n        })\n      }\n    }\n  }\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n  handleOnSubmit = (event) => {\n    event.preventDefault()\n    this.setState({\n      loading: true,\n    })\n    let {\n      action,\n      firstName,\n      lastName,\n      phoneNumber,\n      region,\n      city,\n      province,\n      barangay,\n      street,\n      postalCode,\n    } = this.state\n\n    let address = {\n      firstName: firstName,\n      lastName: lastName,\n      phoneNumber: phoneNumber,\n      region: region,\n      city: city,\n      province: province,\n      barangay: barangay,\n      street: street,\n      postalCode: postalCode,\n    }\n    if (action === \"Add\") {\n      this.handleSaveAddress(address)\n    } else if (action === \"Edit\") {\n    }\n  }\n  onResetValue = () => {\n    this.setState(() => this.addressStates)\n  }\n  handleSaveAddress = (address) => {\n    this.props\n      .saveAddress(address)\n      .then(() => {\n        let { status } = this.props.messageResponse\n        if (status === 200) {\n          this.setState({\n            loading: false,\n          })\n          this.onResetValue()\n        }\n      })\n      .catch(() => {\n        let { status, data } = this.props.messageResponse\n        this.setState({\n          loading: false,\n        })\n      })\n  }\n\n  render() {\n    let {\n      visible,\n      firstName,\n      lastName,\n      phoneNumber,\n      region,\n      city,\n      province,\n      barangay,\n      street,\n      postalCode,\n      loading,\n      action,\n    } = this.state\n    return (\n      <>\n\n        <CModal size=\"lg\" visible={visible}>\n          <CModalHeader\n            onDismiss={() => this.props.setAddressModal(false, \"close\", \"\", \"\")}\n          >\n            <CModalTitle>Customer Address</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CForm\n              className=\"row g-3\"\n              id=\"address-form\"\n              onSubmit={this.handleOnSubmit}\n            >\n              <CCol md={6}>\n                <CFormFloating className=\"mb-3\">\n                  <CFormControl\n                    name=\"firstName\"\n                    type=\"text\"\n                    id=\"floatingFirstName\"\n                    placeholder=\"First name\"\n                    value={firstName}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingFirstName\">\n                    First name\n                  </CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={6}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"lastName\"\n                    type=\"text\"\n                    id=\"floatingLastName\"\n                    placeholder=\"Last name\"\n                    value={lastName}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingLastName\">Last name</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={6}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"phoneNumber\"\n                    type=\"tel\"\n                    required\n                    // pattern=\"^(09|\\+639)\\d{9}$\"\n                    id=\"floatingPhoneNumber\"\n                    placeholder=\"Last name\"\n                    value={phoneNumber}\n                    onChange={this.handleOnChange}\n                  />\n                  <CFormLabel htmlFor=\"floatingPhoneNumber\">\n                    Phone number\n                  </CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={6}>\n                <CFormFloating className=\"mb-3\">\n                  <CFormControl\n                    name=\"region\"\n                    type=\"text\"\n                    id=\"floatingRegion\"\n                    placeholder=\"Region\"\n                    value={region}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingRegion\">Region</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={5}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"city\"\n                    type=\"text\"\n                    id=\"floatingCity\"\n                    placeholder=\"City\"\n                    value={city}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingCity\">City</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={4}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"province\"\n                    type=\"text\"\n                    id=\"floatingProvince\"\n                    placeholder=\"Province\"\n                    value={province}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingProvince\">Province</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={3}>\n                <CFormFloating>\n                  <CFormControl\n                    name=\"postalCode\"\n                    type=\"number\"\n                    id=\"floatingPostalCode\"\n                    placeholder=\"Postal Code\"\n                    value={postalCode}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingPostalCode\">\n                    Postal code\n                  </CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={12} className=\"mt-4 pt-2\">\n                <CFormFloating>\n                  <CFormControl\n                    name=\"barangay\"\n                    type=\"text\"\n                    id=\"floatingBarangay\"\n                    placeholder=\"Barangay\"\n                    value={barangay}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingBarangay\">Barangay</CFormLabel>\n                </CFormFloating>\n              </CCol>\n              <CCol md={12} className=\"mt-4 pt-2\">\n                <CFormFloating>\n                  <CFormControl\n                    name=\"street\"\n                    type=\"text\"\n                    id=\"floatingStreet\"\n                    placeholder=\"Street\"\n                    value={street}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  <CFormLabel htmlFor=\"floatingStreet\">1234 Main St</CFormLabel>\n                </CFormFloating>\n              </CCol>\n            </CForm>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              color=\"dark\"\n              variant=\"ghost\"\n              onClick={() => {\n                this.props.setAddressModal(false, \"close\", \"\", \"\")\n                // this.props.clearMessage();\n              }}\n            >\n              Close\n            </CButton>\n            <CButton\n              color=\"info\"\n              disabled={loading}\n              type=\"submit\"\n              form=\"address-form\"\n            >\n              {loading && <CSpinner size=\"sm\" className=\"ms-1\" />}\n              Save {action === \"Edit\" ? \"Changes\" : \"Branch\"}\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    modalVisible: state.modalVisibleResponse,\n    messageResponse: state.messageResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  setAddressModal,\n  saveAddress,\n  clearMessage,\n})(AddressModal)\n"],"sourceRoot":""}