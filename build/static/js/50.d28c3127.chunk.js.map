{"version":3,"sources":["service/apiActions/productAction/productAction.js","service/restAPI/ProductApiService.js","views/common/public/home/Home.js"],"names":["saveProduct","formData","async","ProductApiService","then","response","dispatch","type","SAVE_PRODUCT","SET_MESSAGE","payload","status","data","message","Promise","resolve","error","console","log","error_message","toString","code","SAVE_FAIL","reject","getDiscoverProducts","query","page","limit","GET_DISCOVER_PRODUCT","products","SET_PRODUCT_MESSAGE","getPopularProducts","GET_POPULAR_PRODUCT","getImage","image","token","GET_IMAGE","FAIL_GET_IMAGE","getProduct","id","GET_PRODUCT","product","getProductDetails","GET_PRODUCT_DETAILS","deleteProduct","DELETE_PRODUCT","action","updateProduct","productId","UPDATE_PRODUCT","updatedProduct","searchProductByBarcodeOrName","SEARCH_PRODUCT","getProductsByCategoryName","categoryName","GET_PRODUCT_BY_CATEGORY_NAME","getProductsByStatus","GET_PRODUCTS_BY_STATUS","getProductsWithPromo","GET_PRODUCTS_WITH_PROMO","axios","post","headers","authHeader","put","delete","getProducts","get","params","path","getPath","responseType","HeroCarousel","React","lazy","PromoProducts","PopularProducts","ProductDetialsModal","CategoryList","Home","Component","state","loading","totalPages","this","props","catch","setState","componentDidMount","render","fallback","className","color","size","xs","sm","md","lg","role","connect","userResponse","messageResponse"],"mappings":"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","file":"static/js/50.d28c3127.chunk.js","sourcesContent":["// import RestApi from '../RestApi'\nimport { SET_MESSAGE } from \"src/constants/userConstants\"\nimport ProductApiService from \"src/service/restAPI/ProductApiService\"\nimport {\n  DELETE_PRODUCT,\n  FAIL_GET_IMAGE,\n  GET_DISCOVER_PRODUCT,\n  GET_IMAGE,\n  GET_PRODUCT,\n  GET_PRODUCTS,\n  GET_PRODUCTS_BY_STATUS,\n  GET_PRODUCTS_WITH_PROMO,\n  GET_PRODUCT_BY_CATEGORY_NAME,\n  GET_PRODUCT_DETAILS,\n  SAVE_FAIL,\n  // UPDATE_PRODUCT,\n  // DELETE_PRODUCT\n  SAVE_PRODUCT,\n  SEARCH_PRODUCT,\n  SET_PRODUCT_MESSAGE,\n  UPDATE_PRODUCT,\n  GET_POPULAR_PRODUCT\n} from \"../../redux/constants\"\n\nexport const saveProduct = (formData) => async (dispatch) => {\n  return ProductApiService.saveProduct(formData).then(\n    (response) => {\n      dispatch({\n        type: SAVE_PRODUCT,\n      })\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: 200,\n          data: {\n            message: \"Successfully Saved\",\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      console.log(error)\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.toString()\n      console.log(status)\n      dispatch({\n        type: SAVE_FAIL,\n      })\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\n\nexport const getProducts = (query, page, limit) => async (dispatch) => {\n  return ProductApiService.getProducts(query, page, limit).then(\n    (response) => {\n      dispatch({\n        type: GET_PRODUCTS,\n        payload: {\n          status: 200,\n          data: {\n            products: response.data,\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.status ||\n        error.toString()\n\n      dispatch({\n        type: SET_PRODUCT_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\n\nexport const getDiscoverProducts = (query, page, limit) => async (dispatch) => {\n  return ProductApiService.getDiscoverProducts(query, page, limit).then(\n    (response) => {\n      dispatch({\n        type: GET_DISCOVER_PRODUCT,\n        payload: {\n          status: 200,\n          data: {\n            products: response.data,\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.status ||\n        error.toString()\n\n      dispatch({\n        type: SET_PRODUCT_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\n\nexport const getPopularProducts = (query, page, limit) => async (dispatch) => {\n  return ProductApiService.getPopularProducts(query, page, limit).then(\n    (response) => {\n      dispatch({\n        type: GET_POPULAR_PRODUCT,\n        payload: {\n          status: 200,\n          data: {\n            products: response.data,\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.status ||\n        error.toString()\n\n      dispatch({\n        type: SET_PRODUCT_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\n\nexport const getImage = (image, token) => async (dispatch) => {\n  return ProductApiService.getImage(image, token).then(\n    (response) => {\n      console.log(response)\n      dispatch({\n        type: GET_IMAGE,\n        payload: {\n          status: response.status,\n          data: {\n            image: response.data,\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.status ||\n        error.toString()\n      dispatch({\n        type: FAIL_GET_IMAGE,\n      })\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\nexport const getProduct = (id) => async (dispatch) => {\n  return ProductApiService.getProduct(id).then(\n    (response) => {\n      dispatch({\n        type: GET_PRODUCT,\n        payload: {\n          status: 200,\n          data: {\n            product: response.data,\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.status ||\n        error.toString()\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\nexport const getProductDetails = (id) => async (dispatch) => {\n  return ProductApiService.getProductDetails(id).then(\n    (response) => {\n      dispatch({\n        type: GET_PRODUCT_DETAILS,\n        payload: {\n          status: 200,\n          data: {\n            product: response.data,\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.status ||\n        error.toString()\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\nexport const deleteProduct = (id) => async (dispatch) => {\n  return ProductApiService.deleteProduct(id).then(\n    (response) => {\n      dispatch({\n        type: DELETE_PRODUCT,\n        payload: {\n          status: 200,\n          action: DELETE_PRODUCT,\n          data: {},\n        },\n      })\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: 200,\n          data: {\n            message: \"Successfully Deleted\",\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.status ||\n        error.toString()\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\n\nexport const updateProduct = (productId, formData) => async (dispatch) => {\n  return ProductApiService.updateProduct(productId, formData).then(\n    (response) => {\n      dispatch({\n        type: UPDATE_PRODUCT,\n        payload: {\n          status: 200,\n          action: UPDATE_PRODUCT,\n          data: {\n            updatedProduct: response.data,\n          },\n        },\n      })\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: 200,\n          data: {\n            message: \"Successfully Updated\",\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.error_message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.status ||\n        error.toString()\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: message,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\nexport const searchProductByBarcodeOrName =\n  (query, page, limit) => async (dispatch) => {\n    return ProductApiService.searchProductByBarcodeOrName(\n      query,\n      page,\n      limit,\n    ).then(\n      (response) => {\n        dispatch({\n          type: SEARCH_PRODUCT,\n          payload: {\n            status: 200,\n            action: SEARCH_PRODUCT,\n            data: {\n              products: response.data,\n            },\n          },\n        })\n        return Promise.resolve()\n      },\n      (error) => {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.error_message ||\n          error.toString()\n\n        const status =\n          (error.response && error.response.data && error.response.data.code) ||\n          error.status ||\n          error.toString()\n\n        dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            status: status,\n            data: {\n              message: message,\n            },\n          },\n        })\n        return Promise.reject()\n      },\n    )\n  }\n\nexport const getProductsByCategoryName =\n  (categoryName, query, page, limit) => async (dispatch) => {\n    return ProductApiService.getProductsByCategoryName(\n      categoryName,\n      query,\n      page,\n      limit,\n    ).then(\n      (response) => {\n        dispatch({\n          type: GET_PRODUCT_BY_CATEGORY_NAME,\n          payload: {\n            status: 200,\n            action: GET_PRODUCT_BY_CATEGORY_NAME,\n            data: {\n              products: response.data,\n            },\n          },\n        })\n        return Promise.resolve()\n      },\n      (error) => {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.error_message ||\n          error.toString()\n\n        const status =\n          (error.response && error.response.data && error.response.data.code) ||\n          error.status ||\n          error.toString()\n\n        dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            status: status,\n            data: {\n              message: message,\n            },\n          },\n        })\n        return Promise.reject()\n      },\n    )\n  }\nexport const getProductsByStatus =\n  (query, status, page, limit) => async (dispatch) => {\n    return ProductApiService.getProductsByStatus(\n      query,\n      status,\n      page,\n      limit,\n    ).then(\n      (response) => {\n        dispatch({\n          type: GET_PRODUCTS_BY_STATUS,\n          payload: {\n            status: 200,\n            action: GET_PRODUCTS_BY_STATUS,\n            data: {\n              products: response.data,\n            },\n          },\n        })\n      },\n      (error) => {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.error_message ||\n          error.toString()\n\n        const status =\n          (error.response && error.response.data && error.response.data.code) ||\n          error.status ||\n          error.toString()\n\n        dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            status: status,\n            data: {\n              message: message,\n            },\n          },\n        })\n        return Promise.reject()\n      },\n    )\n  }\n\nexport const getProductsWithPromo =\n  (status, query, page, limit) => async (dispatch) => {\n    return ProductApiService.getProductsWithPromo(\n      status,\n      query,\n      page,\n      limit,\n    ).then(\n      (response) => {\n        dispatch({\n          type: GET_PRODUCTS_WITH_PROMO,\n          payload: {\n            status: 200,\n            action: GET_PRODUCTS_WITH_PROMO,\n            data: {\n              products: response.data,\n            },\n          },\n        })\n        return Promise.resolve()\n      },\n      (error) => {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.error_message ||\n          error.toString()\n\n        const status =\n          (error.response && error.response.data && error.response.data.code) ||\n          error.status ||\n          error.toString()\n\n        dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            status: status,\n            data: {\n              message: message,\n            },\n          },\n        })\n        return Promise.reject()\n      },\n    )\n  }\n","import authHeader from \"../auth/authHeader\"\nimport axios from \"./RestApi\"\n\nexport class ProductApiService {\n  saveProduct(formData) {\n    return axios.post(\"/products/save\", formData, { headers: authHeader() })\n  }\n  updateProduct(productId, formData) {\n    return axios.put(\"/products/update/\" + productId, formData, {\n      headers: authHeader(),\n    })\n  }\n  deleteProduct(id) {\n    return axios.delete(\"/products/delete/\" + id, {\n      headers: authHeader(),\n    })\n  }\n  getProducts(query, page, limit) {\n    return axios.get(\"/products\", {\n      headers: authHeader(),\n      params: {\n        query: query,\n        page: page,\n        limit: limit,\n      },\n    })\n  }\n  getImage(path, image) {\n    console.log()\n    let getPath = path ? path : \"null/\"\n\n    return axios.get(\"/products/getImages/bytesArrays/\" + getPath + image, {\n      responseType: \"blob\",\n    })\n  }\n  getProduct(id) {\n    return axios.get(\"/products/\" + id, {\n      headers: authHeader(),\n    })\n  }\n  getProductDetails(id) {\n    return axios.get(\"/products/details/\" + id, {\n      headers: authHeader(),\n    })\n  }\n  getDiscoverProducts(query, page, limit) {\n    return axios.get(\"/products/discover\", {\n      headers: authHeader(),\n      params: {\n        query: query,\n        page: page,\n        limit: limit,\n      },\n    })\n  }\n  getPopularProducts(query, page, limit) {\n    return axios.get(\"/products/popular\", {\n      headers: authHeader(),\n      params: {\n        query: query,\n        page: page,\n        limit: limit,\n      },\n    })\n  }\n  searchProductByBarcodeOrName(query, page, limit) {\n    return axios.get(\"/products/search\", {\n      headers: authHeader(),\n      params: {\n        query: query,\n        page: page,\n        limit: limit,\n      },\n    })\n  }\n  getProductsByCategoryName(categoryName, query, page, limit) {\n    return axios.get(\"/products/category/\" + categoryName, {\n\n      headers: authHeader(),\n      params: {\n        query: query,\n        page: page,\n        limit: limit,\n      },\n    })\n  }\n  getProductsByStatus(query, status, page, limit) {\n    return axios.get(\"/products/status\", {\n      headers: authHeader(),\n      params: {\n        status: status,\n        query: query,\n        page: page,\n        limit: limit,\n      },\n    })\n  }\n  getProductsWithPromo(status, query, page, limit) {\n    return axios.get(\"/products/promo\", {\n      headers: authHeader(),\n      params: {\n        status: status,\n        query: query,\n        page: page,\n        limit: limit,\n      },\n    })\n  }\n}\n\nexport default new ProductApiService()\n\n// export default new ProductApiService();\n","import React, { Component, Suspense } from \"react\"\nimport { CContainer, CRow, CCol } from \"@coreui/react\"\nimport { DotLoader } from \"react-spinners\"\n\n// import { HeroCarousel } from 'src/components/carousel/index'\n\nimport { connect } from \"react-redux\"\n// import { NewArrivalProducts, PopularProducts } from 'src/components/public'\n// action\nimport {\n  getDiscoverProducts,\n  getProductsWithPromo,\n  getPopularProducts\n} from \"src/service/apiActions/productAction/productAction\"\n// import ProductDetialsModal from 'src/components/modals/product/ProductDetialsModal'\nconst HeroCarousel = React.lazy(() =>\n  import(\"src/components/carousel/HeroCarousel\"),\n)\nconst PromoProducts = React.lazy(() =>\n  import(\n    \"src/components/public/productFeatures/PromoProducts/PromoProducts\"\n  ),\n)\nconst PopularProducts = React.lazy(() =>\n  import(\n    \"src/components/public/productFeatures/popularProducts/PopularProducts\"\n  ),\n)\nconst ProductDetialsModal = React.lazy(() =>\n  import(\"src/components/modals/product/ProductDetialsModal\"),\n)\nconst CategoryList = React.lazy(() =>\n  import(\"src/components/category/CategoryList\"),\n)\n\nexport class Home extends Component {\n  state = {\n    loading: false,\n    message: \"\",\n    products: {\n      data: [],\n      totalPages: 0,\n    },\n    page: 0,\n    limit: 10,\n    query: \"\",\n  }\n  componentDidMount() {\n    const { page, limit, query } = this.state\n    this.getPopularProducts()\n  }\n\n  getPopularProducts = () => {\n    let { page, limit, query } = this.state\n    this.props.getPopularProducts(query, page, limit).catch(() => {\n      this.setState({\n        loading: false,\n      })\n    })\n  }\n\n  getDiscoverProducts = () => {\n    let { page, limit, query } = this.state\n    this.props.getDiscoverProducts(query, page, limit).catch(() => {\n      this.setState({\n        loading: false,\n      })\n    })\n  }\n\n  render() {\n    let { message } = this.state\n    return (\n      <>\n        <Suspense\n          fallback={\n            <div className=\"d-flex justify-content-center align-items-center  position-fixed spinner\">\n              <DotLoader color=\"#36D7B7\" size={100} />\n            </div>\n          }\n        >\n          <ProductDetialsModal />\n\n          <CContainer>\n            <CRow>\n              <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"4\">\n                <CategoryList />\n              </CCol>\n              <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"8\">\n                <HeroCarousel />\n              </CCol>\n            </CRow>\n            {/* <div className=\"border d-flex justify-content-between align-items-center\"></div> */}\n          </CContainer>\n          <CContainer className=\"mt-4\">\n            {message && (\n              <div className=\"form-group d-flex justify-content-center align-items-center\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <PopularProducts />\n            <PromoProducts />\n          </CContainer>\n        </Suspense>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userResponse: state.userResponse,\n    messageResponse: state.messageResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  getDiscoverProducts,\n  getProductsWithPromo,\n  getPopularProducts\n})(Home)\n"],"sourceRoot":""}