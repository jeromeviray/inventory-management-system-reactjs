{"version":3,"sources":["service/apiActions/modalAction/modalAction.js","service/restAPI/TermsAndCondiitonApiService.js","components/modals/termsAndCondition/TermsAndCondtionModal.js","service/apiActions/termsAction/TermsAndConditionAction.js","views/common/termsAndCondition/TermsAndCondition.js"],"names":["setProductModal","visible","action","icon","async","dispatch","type","SET_PRODUCTEDITMODAL_VISIBILIT","payload","status","data","setProductDetailsModal","product","SET_PRODUCT_DETAILS_MODAL","editProductModal","updateProduct","EDIT_PRODUCT_MODAL","setAlertModal","alert","module","id","ALERT_MODAL","setAlertBanModal","ALERT_BAN_MODAL","setStoreModal","storeInfo","UDPATE_STORE_INFORMATION","addBrandModal","branch","ADD_BRAND_MODAL","brand","addCategoryModal","category","ADD_CATEGORY_MODAL","addAccountModal","employee","ADD_EMPLOYEE_MODAL","changePasswordModal","CHANGE_PASSWORD_MODAL","setLoginModal","LOGIN_MODAL","setAddressModal","address","SET_ADDRESS_MODAL","setSupplierModal","supplier","SET_SUPPLIER_MODAL","setSupplyModal","supply","SET_SUPPLY_MODAL","setScanModal","SET_SCAN_MODAL","setPromoModal","promo","SET_PROMO_MODAL","setTermAndConditionModal","termsAndCondition","SET_TERMS_AND_CONDITION_MODAL","setCarouselModal","carousel","SET_CAROULSE_MDOAL","saveTermsAndCondition","content","axios","post","headers","authHeader","updateTermsAndCondition","put","getTermsAndCondition","get","TermsAndCondtionModal","Component","state","loading","message","successFully","editorState","EditorState","createEmpty","validated","onEditorStateChange","this","setState","manageStoreInfo","prevProps","prevState","modalVisible","props","createWithContent","convertFromRaw","JSON","parse","branchId","branchName","handleOnSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","handleSave","handleEdit","stringify","convertToRaw","getCurrentContent","then","catch","componentDidUpdate","render","size","scrollable","onDismiss","clearMessage","className","role","onSubmit","noValidate","sm","md","lg","wrapperClassName","editorClassName","placeholder","toolbar","options","color","variant","onClick","disabled","form","connect","modalVisibleResponse","messageResponse","TermsAndCondionApiService","response","SAVE_TERMS_AND_CONDITION","SET_MESSAGE","Promise","resolve","error","errorMessage","toString","code","reject","UPDATE_TERMS_AND_CONDITION","TermsAndCondition","manageTermsAndConditionResponse","termsAndConditionResponse","createMarkup","html","__html","DOMPurify","sanitize","componentDidMount","convertFromRawContent","getContent","draftToHtml","margin","marginBottom","marginLeft","style","createdAt","updatedAt","dangerouslySetInnerHTML","GET_TERMS_AND_CONDITION"],"mappings":"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","file":"static/js/58.354aa785.chunk.js","sourcesContent":["import {\n  ADD_BRANCH_MODAL,\n  ALERT_MODAL,\n  EDIT_PRODUCT_MODAL,\n  SET_PRODUCTEDITMODAL_VISIBILIT,\n  ADD_BRAND_MODAL,\n  ADD_CATEGORY_MODAL,\n  ADD_EMPLOYEE_MODAL,\n  SET_PRODUCT_DETAILS_MODAL,\n  LOGIN_MODAL,\n  SET_ADDRESS_MODAL,\n  SET_SUPPLIER_MODAL,\n  SET_SUPPLY_MODAL,\n  SET_SCAN_MODAL,\n  SET_PROMO_MODAL,\n  ALERT_BAN_MODAL,\n  CHANGE_PASSWORD_MODAL,\n  UDPATE_STORE_INFORMATION,\n  SET_TERMS_AND_CONDITION_MODAL,\n  SET_CAROULSE_MDOAL,\n} from \"src/service/redux/constants\"\n\nexport const setProductModal = (visible, action, icon) => async (dispatch) => {\n  dispatch({\n    type: SET_PRODUCTEDITMODAL_VISIBILIT,\n    payload: {\n      status: 200,\n      data: {\n        visible: visible,\n        action: action,\n        icon: icon,\n      },\n    },\n  })\n}\nexport const setProductDetailsModal =\n  (visible, action, product) => async (dispatch) => {\n    dispatch({\n      type: SET_PRODUCT_DETAILS_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          product: product,\n        },\n      },\n    })\n  }\nexport const editProductModal =\n  (visible, action, updateProduct, icon) => async (dispatch) => {\n    dispatch({\n      type: EDIT_PRODUCT_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          product: updateProduct,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const setAlertModal =\n  (alert, action, module, id) => async (dispatch) => {\n    dispatch({\n      type: ALERT_MODAL,\n      payload: {\n        action: action,\n        module: module,\n        alert: alert,\n        data: {\n          id: id,\n        },\n      },\n    })\n  }\nexport const setAlertBanModal =\n  (alert, action, module, id) => async (dispatch) => {\n    dispatch({\n      type: ALERT_BAN_MODAL,\n      payload: {\n        action: action,\n        module: module,\n        alert: alert,\n        data: {\n          id: id,\n        },\n      },\n    })\n  }\nexport const setStoreModal =\n  (visible, action, storeInfo, icon) => async (dispatch) => {\n    dispatch({\n      type: UDPATE_STORE_INFORMATION,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          storeInfo: storeInfo,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addBrandModal =\n  (visible, action, branch, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_BRAND_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          brand: branch,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addCategoryModal =\n  (visible, action, category, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_CATEGORY_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          category: category,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addAccountModal =\n  (visible, action, employee, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_EMPLOYEE_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          employee: employee,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const changePasswordModal =\n  (visible, action, employee, icon) => async (dispatch) => {\n    dispatch({\n      type: CHANGE_PASSWORD_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          employee: employee,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const setLoginModal = (visible, action) => async (dispatch) => {\n  dispatch({\n    type: LOGIN_MODAL,\n    payload: {\n      data: {\n        visible: visible,\n        action: action,\n      },\n    },\n  })\n}\n\nexport const setAddressModal =\n  (visible, action, address, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_ADDRESS_MODAL,\n      payload: {\n        data: {\n          visible: visible,\n          action: action,\n          address: address,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const setSupplierModal =\n  (visible, action, supplier, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_SUPPLIER_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          supplier: supplier,\n        },\n      },\n    })\n  }\nexport const setSupplyModal =\n  (visible, action, supply, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_SUPPLY_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          supply: supply,\n        },\n      },\n    })\n  }\n\nexport const setScanModal = (visible, action) => async (dispatch) => {\n  dispatch({\n    type: SET_SCAN_MODAL,\n    payload: {\n      action: action,\n      data: {\n        visible: visible,\n      },\n    },\n  })\n}\nexport const setPromoModal =\n  (visible, action, promo, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_PROMO_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          promo: promo,\n        },\n      },\n    })\n  }\nexport const setTermAndConditionModal =\n  (visible, action, termsAndCondition, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_TERMS_AND_CONDITION_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          termsAndCondition: termsAndCondition,\n          icon: icon,\n        },\n      },\n    })\n  }\n  export const setCarouselModal =\n    (visible, action, carousel, icon) => async (dispatch) => {\n      dispatch({\n        type: SET_CAROULSE_MDOAL,\n        payload: {\n          status: 200,\n          data: {\n            visible: visible,\n            action: action,\n            carousel: carousel,\n            icon: icon,\n          },\n        },\n      })\n    }","import axios from \"./RestApi\"\r\nimport authHeader from \"../auth/authHeader\"\r\n\r\nexport class TermsAndCondionApiService {\r\n  saveTermsAndCondition(content) {\r\n    return axios.post(\r\n      \"/terms/save\",\r\n      {\r\n        content,\r\n      },\r\n      {\r\n        headers: authHeader(),\r\n      },\r\n    )\r\n  }\r\n  updateTermsAndCondition(id, content) {\r\n    return axios.put(\r\n      \"/terms/update/\" + id,\r\n      {\r\n        content,\r\n      },\r\n      {\r\n        headers: authHeader(),\r\n      },\r\n    )\r\n  }\r\n  getTermsAndCondition() {\r\n    return axios.get(\r\n      \"/terms\",\r\n      {\r\n        headers: authHeader(),\r\n      },\r\n    )\r\n  }\r\n}\r\nexport default new TermsAndCondionApiService()\r\n","import React, { Component } from \"react\"\r\nimport {\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CButton,\r\n  CModalTitle,\r\n  CSpinner,\r\n  CForm,\r\n  CCol,\r\n  CRow,\r\n} from \"@coreui/react\"\r\nimport { convertFromRaw, convertToRaw, EditorState } from \"draft-js\"\r\nimport { Editor } from \"react-draft-wysiwyg\"\r\nimport { setTermAndConditionModal } from \"src/service/apiActions/modalAction/modalAction\"\r\nimport {\r\n  saveTermsAndCondition,\r\n  updateTermsAndCondition,\r\n} from \"src/service/apiActions/termsAction/TermsAndConditionAction\"\r\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction\"\r\nimport { connect } from \"react-redux\"\r\nexport class TermsAndCondtionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    icon: \"\",\r\n    loading: false,\r\n    message: \"\",\r\n    action: \"\",\r\n    status: \"\",\r\n    successFully: \"\",\r\n    editorState: EditorState.createEmpty(),\r\n    validated: false,\r\n    id: \"\",\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.manageStoreInfo(prevProps, prevState)\r\n  }\r\n  manageStoreInfo = (prevProps, prevState) => {\r\n    if (prevProps.modalVisible !== this.props.modalVisible) {\r\n      let { visible, action, termsAndCondition, icon } = this.props.modalVisible\r\n      if (action === \"Edit\") {\r\n        this.setState({\r\n          id: termsAndCondition.id,\r\n          visible: visible,\r\n          icon: icon,\r\n          action: action,\r\n          editorState: termsAndCondition.content\r\n            ? EditorState.createWithContent(\r\n                convertFromRaw(JSON.parse(termsAndCondition.content)),\r\n              )\r\n            : EditorState.createEmpty(),\r\n        })\r\n      } else if (action === \"Add\") {\r\n        this.setState({\r\n          visible: visible,\r\n\r\n          icon: icon,\r\n          action: action,\r\n        })\r\n      } else {\r\n        this.setState({\r\n          visible: visible,\r\n          branchId: \"\",\r\n          branchName: \"\",\r\n          icon: \"\",\r\n          action: \"\",\r\n          loading: false,\r\n        })\r\n      }\r\n    }\r\n  }\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const form = event.currentTarget\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation()\r\n    }\r\n    this.setState({\r\n      validated: true,\r\n      loading: true,\r\n    })\r\n    const { action } = this.state\r\n    if (action === \"Add\") {\r\n      this.handleSave()\r\n    } else if (action === \"Edit\") {\r\n      this.handleEdit()\r\n    }\r\n  }\r\n  handleSave = () => {\r\n    const { editorState } = this.state\r\n    const content = JSON.stringify(\r\n      convertToRaw(editorState.getCurrentContent()),\r\n    )\r\n    this.props\r\n      .saveTermsAndCondition(content)\r\n      .then(() => {\r\n        this.setState({\r\n          validated: false,\r\n          loading: false,\r\n        })\r\n        this.props.setTermAndConditionModal(false, \"close\", \"\", \"\")\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n  handleEdit = () => {\r\n    const { id, editorState } = this.state\r\n    const content = JSON.stringify(\r\n      convertToRaw(editorState.getCurrentContent()),\r\n    )\r\n    this.props\r\n      .updateTermsAndCondition(id, content)\r\n      .then(() => {\r\n        this.setState({\r\n          validated: false,\r\n          loading: false,\r\n        })\r\n        this.props.setTermAndConditionModal(false, \"close\", \"\", \"\")\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n  render() {\r\n    let {\r\n      visible,\r\n      action,\r\n      icon,\r\n      loading,\r\n      successFully,\r\n      message,\r\n      editorState,\r\n      validated,\r\n    } = this.state\r\n    return (\r\n      <div>\r\n        <CModal visible={visible} size=\"xl\" scrollable>\r\n          <CModalHeader\r\n            onDismiss={() => {\r\n              this.props.setTermAndConditionModal(false, \"close\", \"\", \"\")\r\n              this.props.clearMessage()\r\n            }}\r\n          >\r\n            <CModalTitle>\r\n              <div className=\"d-flex align-items-center\">\r\n                {icon}\r\n                {action + \" Terms and Condition\"}\r\n              </div>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    successFully ? \"alert alert-success\" : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CForm\r\n              onSubmit={this.handleOnSubmit}\r\n              id=\"branch-form\"\r\n              noValidate\r\n              validated={validated}\r\n            >\r\n              <div className=\"mb-3\">\r\n                <CRow>\r\n                  <CCol sm=\"12\" md=\"12\" lg=\"12\" className=\"mt-4\">\r\n                    <Editor\r\n                      editorState={editorState}\r\n                      wrapperClassName=\"editor-wrapper\"\r\n                      editorClassName=\"editor\"\r\n                      onEditorStateChange={this.onEditorStateChange}\r\n                      placeholder=\"Inser Description about your Store\"\r\n                      toolbar={{\r\n                        options: [\r\n                          \"inline\",\r\n                          \"blockType\",\r\n                          \"fontSize\",\r\n                          \"fontFamily\",\r\n                          \"list\",\r\n                          \"textAlign\",\r\n                          \"colorPicker\",\r\n                          \"emoji\",\r\n                          \"remove\",\r\n                          \"history\",\r\n                        ],\r\n                      }}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton\r\n              color=\"dark\"\r\n              variant=\"ghost\"\r\n              onClick={() => {\r\n                this.props.setTermAndConditionModal(false, \"close\", \"\", \"\")\r\n                this.props.clearMessage()\r\n              }}\r\n            >\r\n              Close\r\n            </CButton>\r\n            <CButton\r\n              color=\"primary\"\r\n              disabled={loading}\r\n              type=\"submit\"\r\n              form=\"branch-form\"\r\n            >\r\n              {loading && <CSpinner size=\"sm\" className=\"ms-1\" />}\r\n              Save {action === \"Edit\" ? \"Changes\" : \"Terms And Condition\"}\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modalVisible: state.modalVisibleResponse,\r\n    messageResponse: state.messageResponse,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  setTermAndConditionModal,\r\n  clearMessage,\r\n  saveTermsAndCondition,\r\n  updateTermsAndCondition,\r\n})(TermsAndCondtionModal)\r\n","import { SET_MESSAGE } from \"src/constants/userConstants\"\r\nimport {\r\n  GET_TERMS_AND_CONDITION,\r\n  SAVE_TERMS_AND_CONDITION,\r\n  UPDATE_TERMS_AND_CONDITION,\r\n} from \"src/service/redux/constants\"\r\nimport TermsAndCondionApiService from \"src/service/restAPI/TermsAndCondiitonApiService\"\r\nexport const saveTermsAndCondition = (content) => async (dispatch) => {\r\n  return TermsAndCondionApiService.saveTermsAndCondition(content).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: SAVE_TERMS_AND_CONDITION,\r\n        payload: {\r\n          status: 200,\r\n          action: SAVE_TERMS_AND_CONDITION,\r\n          data: {},\r\n        },\r\n      })\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: {\r\n          status: 200,\r\n          data: {\r\n            message: \"Successfully Saved\",\r\n          },\r\n        },\r\n      })\r\n      return Promise.resolve()\r\n    },\r\n    (error) => {\r\n      const errorMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n\r\n      const status =\r\n        (error.response && error.response.data && error.response.data.code) ||\r\n        error.toString()\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: {\r\n          status: status,\r\n          data: {\r\n            message: errorMessage,\r\n          },\r\n        },\r\n      })\r\n      return Promise.reject()\r\n    },\r\n  )\r\n}\r\nexport const updateTermsAndCondition = (id, content) => async (dispatch) => {\r\n  return TermsAndCondionApiService.updateTermsAndCondition(id, content).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: UPDATE_TERMS_AND_CONDITION,\r\n        payload: {\r\n          status: 200,\r\n          action: UPDATE_TERMS_AND_CONDITION,\r\n          data: {\r\n            termsAndCondition: response.data,\r\n          },\r\n        },\r\n      })\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: {\r\n          status: 200,\r\n          data: {\r\n            message: \"Successfully Updated\",\r\n          },\r\n        },\r\n      })\r\n      return Promise.resolve()\r\n    },\r\n    (error) => {\r\n      const errorMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n\r\n      const status =\r\n        (error.response && error.response.data && error.response.data.code) ||\r\n        error.toString()\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: {\r\n          status: status,\r\n          data: {\r\n            message: errorMessage,\r\n          },\r\n        },\r\n      })\r\n      return Promise.reject()\r\n    },\r\n  )\r\n}\r\nexport const getTermsAndCondition = () => async (dispatch) => {\r\n  return TermsAndCondionApiService.getTermsAndCondition().then(\r\n    (response) => {\r\n      dispatch({\r\n        type: GET_TERMS_AND_CONDITION,\r\n        payload: {\r\n          status: 200,\r\n          action: GET_TERMS_AND_CONDITION,\r\n          data: {\r\n            termsAndCondition: response.data,\r\n          },\r\n        },\r\n      })\r\n\r\n      return Promise.resolve()\r\n    },\r\n    (error) => {\r\n      const errorMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n\r\n      const status =\r\n        (error.response && error.response.data && error.response.data.code) ||\r\n        error.toString()\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: {\r\n          status: status,\r\n          data: {\r\n            message: errorMessage,\r\n          },\r\n        },\r\n      })\r\n      return Promise.reject()\r\n    },\r\n  )\r\n}\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CButton,\r\n  CCardText,\r\n  CCardTitle,\r\n} from \"@coreui/react\"\r\nimport React, { Component } from \"react\"\r\nimport * as MdIcons from \"react-icons/md\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nimport { connect } from \"react-redux\"\r\nimport { getTermsAndCondition } from \"src/service/apiActions/termsAction/TermsAndConditionAction\"\r\nimport { EditorState, convertFromRaw, convertToRaw } from \"draft-js\"\r\nimport DOMPurify from \"dompurify\"\r\nimport draftToHtml from \"draftjs-to-html\"\r\nimport TermsAndCondtionModal from \"src/components/modals/termsAndCondition/TermsAndCondtionModal\"\r\nimport { setTermAndConditionModal } from \"src/service/apiActions/modalAction/modalAction\"\r\nexport class TermsAndCondition extends Component {\r\n  state = {\r\n    termsAndCondition: [],\r\n    visible: false,\r\n  }\r\n  componentDidMount() {\r\n    this.props.getTermsAndCondition()\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.manageTermsAndConditionResponse(prevProps, prevState)\r\n    this.manageStoreInfo(prevProps, prevState)\r\n  }\r\n  manageTermsAndConditionResponse = (prevProps, prevState) => {\r\n    if (\r\n      prevProps.termsAndConditionResponse !==\r\n      this.props.termsAndConditionResponse\r\n    ) {\r\n      const { action, status, data } = this.props.termsAndConditionResponse\r\n      if (action === \"GET_TERMS_AND_CONDITION\" && status === 200) {\r\n        this.setState({\r\n          termsAndCondition: data,\r\n        })\r\n      }\r\n    }\r\n  }\r\n  manageStoreInfo = (prevProps, prevState) => {\r\n    if (prevProps.modalVisible !== this.props.modalVisible) {\r\n      let { action } = this.props.modalVisible\r\n      if (action === \"close\") {\r\n        this.props.getTermsAndCondition()\r\n      }\r\n    }\r\n  }\r\n  createMarkup = (html) => {\r\n    return {\r\n      __html: DOMPurify.sanitize(html),\r\n    }\r\n  }\r\n  render() {\r\n    const { termsAndCondition, visible } = this.state\r\n    const { content } = termsAndCondition\r\n    let convertFromRawContent = \"\"\r\n    let html = <></>\r\n    if (content) {\r\n      let getContent = termsAndCondition && JSON.parse(content)\r\n      if (getContent) {\r\n        convertFromRawContent = convertFromRaw(getContent)\r\n        const editorState = EditorState.createWithContent(convertFromRawContent)\r\n        html = draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n      }\r\n    }\r\n    const margin = {\r\n      marginBottom: \"12px\",\r\n      marginLeft: \"5px\",\r\n    }\r\n    return (\r\n      <>\r\n        <TermsAndCondtionModal />\r\n        <CCard>\r\n          <CCardHeader className=\"d-flex justify-content-between align-items-center\">\r\n            <CCardTitle>Terms And Condition</CCardTitle>\r\n            <div className=\"\">\r\n              {termsAndCondition ? (\r\n                <CButton\r\n                  color=\"info\"\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={() =>\r\n                    this.props.setTermAndConditionModal(\r\n                      !visible,\r\n                      \"Edit\",\r\n                      termsAndCondition,\r\n                      <MdIcons.MdModeEdit size=\"24\" className=\"me-2\" />,\r\n                    )\r\n                  }\r\n                >\r\n                  <MdIcons.MdModeEdit size=\"20\" />\r\n                </CButton>\r\n              ) : (\r\n                <CButton\r\n                  color=\"info\"\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={() =>\r\n                    this.props.setTermAndConditionModal(\r\n                      !visible,\r\n                      \"Add\",\r\n                      null,\r\n                      <FaIcons.FaPlus size={20} />,\r\n                    )\r\n                  }\r\n                >\r\n                  <FaIcons.FaPlus size={20} />,\r\n                </CButton>\r\n              )}\r\n            </div>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            {termsAndCondition ? (\r\n              <>\r\n                <div className=\"text-black-50 d-flex justify-content-between align-items-center mb-3\">\r\n                  <h6 className=\"m-0 pe-3 mb-2\">\r\n                    Created Date:\r\n                    <strong style={{ ...margin }}>\r\n                      {termsAndCondition.createdAt}\r\n                    </strong>\r\n                  </h6>\r\n                  <h6 className=\"m-0 pe-3 mb-2\">\r\n                    Last Updated Date:\r\n                    <strong style={{ ...margin }}>\r\n                      {termsAndCondition.updatedAt}\r\n                    </strong>\r\n                  </h6>\r\n                </div>\r\n                <hr />\r\n\r\n                <CCardText className=\"p-3 d-flex justify-content-center\">\r\n                  <div\r\n                    className=\"preview ps-4\"\r\n                    dangerouslySetInnerHTML={this.createMarkup(html)}\r\n                  ></div>\r\n                </CCardText>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"preview ps-4 text-warning\">\r\n                  No Terms And Condition Created\r\n                </div>\r\n              </>\r\n            )}\r\n          </CCardBody>\r\n        </CCard>\r\n      </>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modalVisible: state.modalVisibleResponse,\r\n    messageResponse: state.messageResponse,\r\n    termsAndConditionResponse: state.termsAndConditionResponse,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTermsAndCondition,\r\n  setTermAndConditionModal,\r\n})(TermsAndCondition)\r\n"],"sourceRoot":""}