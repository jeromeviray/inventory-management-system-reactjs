{"version":3,"sources":["service/auth/authHeader.js","router/config/index.js","service/restAPI/UserService.js","service/auth/authService.js","service/apiActions/userAction/userAction.js","service/restAPI/StoreInformationApiService.js","service/apiActions/storeAction/StoreInformationAction.js","router/config/Roles.js","constants/userConstants.js","service/redux/constants.js","config.js","router/privateRouter/PrivateRouter.js","App.js","serviceWorker.js","service/redux/reducers/productReducer.js","service/redux/reducers/carouselReducer.js","service/redux/reducers/changeStateReducer.js","service/redux/reducers/modalVisibilityReducer.js","service/redux/reducers/userReducer.js","service/redux/reducers/messageReducer.js","service/redux/reducers/routesReducer.js","service/redux/reducers/branchReducer.js","service/redux/reducers/brandReducer.js","service/redux/reducers/orderReducer.js","service/redux/reducers/accountReducer.js","service/redux/reducers/cartReducer.js","service/redux/reducers/addressReducer.js","service/redux/reducers/paymentReducer.js","service/redux/reducers/inventoryReducer.js","service/redux/reducers/supplierReducer.js","service/redux/reducers/incomingSupplyReducer.js","service/redux/reducers/categoryReducer.js","service/redux/reducers/promoReducer.js","service/redux/reducers/scannerReducer.js","service/redux/reducers/wishlistReducer.js","service/redux/reducers/commentReducer.js","service/redux/reducers/dashboardReducer.js","service/redux/reducers/storeInformationReducer.js","service/redux/reducers/index.js","service/redux/reducers/termsAndConditionReducer.js","store.js","index.js","service/restAPI/RestApi.js"],"names":["authHeader","credentials","JSON","parse","localStorage","getItem","accessToken","Authorization","type","Roles","login","username","password","http","post","register","email","firstName","lastName","phoneNumber","UserService","then","response","data","setItem","stringify","logout","removeItem","authenticateUser","async","authService","dispatch","LOGIN_SUCCESS","payload","SET_MESSAGE","status","message","Promise","resolve","error","errorMessage","toString","LOGIN_FAIL","reject","createAccount","console","log","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT","getStoreInformation","axios","get","updateStoreInformation","id","storeName","acronym","location","description","contactNumber","put","headers","StoreInformationApiService","GET_STORE_INFORMATION","action","storeInfo","code","SUPER_ADMIN","ADMIN","CUSTOMER","USER","ROLE_USER","CLEAR_MESSAGE","GET_POPULAR_PRODUCT","GET_PRODUCTS","GET_PRODUCT","DELETE_PRODUCT","UPDATE_PRODUCT","SAVE_PRODUCT","SAVE_FAIL","UPDATE_FAIL","GET_IMAGE","FAIL_GET_IMAGE","GET_PRODUCT_DETAILS","GET_PRODUCT_BY_CATEGORY_NAME","SET_IMAGE_MESSAGE","SET_PRODUCT_MESSAGE","GET_CAROUSEL_IMAGES","CAROUSEL_FOLDER_DIRECTORY","SET_SIDEBAR","SET_SIDEBAR_UNFOLD","SET_PRODUCTEDITMODAL_VISIBILIT","EDIT_PRODUCT_MODAL","ALERT_MODAL","ALERT_BAN_MODAL","ADD_BRANCH_MODAL","ADD_BRAND_MODAL","ADD_CATEGORY_MODAL","ADD_EMPLOYEE_MODAL","SET_PRODUCT_DETAILS_MODAL","LOGIN_MODAL","SET_ADDRESS_MODAL","SET_SUPPLIER_MODAL","SET_SUPPLY_MODAL","SET_SCAN_MODAL","SET_PROMO_MODAL","CHANGE_PASSWORD_MODAL","SET_TERMS_AND_CONDITION_MODAL","API_BASE_URL","config","api","private","baseUrl","FRONT_END_BASED_URL","baseFrontendUrl","OAUTH2_REDIRECT_URI","ACCESS_TOKEN","REFRESH_TOKEN","USERNAME","GOOGLE_AUTH_URL","GET_BRANCH","GET_BRANCH_TOTAL_PRODUCT","SAVE_BRANCH","UPDATE_BRANCH","DELETE_BRANCH","GET_DISCOVER_PRODUCT","GET_PUBLIC_PRODUCT","SEARCH_PRODUCT","GET_PRODUCTS_BY_STATUS","GET_PRODUCTS_WITH_PROMO","GET_BRANDS","GET_BRAND","SAVE_BRAND","UPDATE_BRAND","DELETE_BRAND","FAIL_BRAND","CLEAR_BRAND","GET_ORDERS","CONFIRM_ORDER","PLACE_ORDER","ORDER_ITEMS","GET_ORDER_BY_ID","UPDATE_ORDER_STATUS","UPDATE_PAYMENT_STATUS","GET_PAYMENT_TRANSACTIONS","SAVE_CUSTOMER_ADDRESS","UPDATE_CUSTOMER_ADDRESS","GET_CUSTOMER_ADDRESSES","GET_CUSTOMER_ADDRESS","DELETE_CUSTOMER_ADDRESS","GET_USERS_ACCOUNT","SAVE_EMPLOYEE","CHANGE_PASSWORD","DELETE_ACCOUNT","FORGOT_PASSWORD","VALIDATE_TOKEN","RESET_PASSWORD","GET_ME","BAN_ACCOUNT","UPDATE_USER","VERIFY_ACCOUNT","ADD_TO_CART","GET_CART_ITEMS","REMOVE_ITEM","GET_ADDRESSES","UPDATE_ADDRESS","SAVE_ADDRESS","GET_PAYMENT_METHODS","GET_PAYMENT_METHOD","GET_INVENTORIES","GET_INVENTORY","CREATE_SUPPLIER","UPDATE_SUPPLIER","DELETE_SUPPLIER","GET_SUPPLIERS","GET_SUPPLIER","SAVE_INCOMING_SUPPLY","GET_INCOMING_SUPPLIES","GET_INCOMING_SUPPLIES_BY_PENDING_STATUS","GET_INCOMING_SUPPLIES_BY_DELIVERED_STATUS","GET_INCOMING_SUPPLY","DELETE_INCOMING_SUPPLY","UPDATE_INCOMING_SUPPLY","DELIVERED_INCOMING_SUPPLY","SHIP_INCOMING_SUPPLY","MARK_INCOMING_SUPPLY_AS_DELIVERED","NO_IMAGE_BASE64","SAVE_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","GET_CATEGORIES","GET_CATEGORY","GET_CATEGORIES_LIST","GET_PROMOS","GET_PROMO","SAVE_PROMO","UPDATE_PROMO","DELETE_PROMO","GET_DECODED_BARCODE","SEARCH_PRODUCT_TEXT","GET_WISHLIST","DELETE_WISHLIST","ADD_WISHLIST","GET_COMMENTS","DELETE_COMMENT","ADD_COMMENT","GET_TOTALS","GET_PRODUCTS_COUNT_TOTAL_SOLD","SAVE_STORE_INFORMATION","UDPATE_STORE_INFORMATION","SAVE_TERMS_AND_CONDITION","UPDATE_TERMS_AND_CONDITION","GET_TERMS_AND_CONDITION","dev","prefixFrontendUrl","test","env","trim","getEnv","PrivateRouter","component","Component","roles","name","rest","isLoggedIn","useSelector","state","userResponse","render","props","to","loading","className","color","size","DefaultLayout","React","lazy","PublicLayout","Login","Register","Page404","Page500","RedirectSuccessHandler","ForgotPassword","CustomerLayout","App","componentDidUpdate","prevProps","prevState","this","manageResponse","messageResponse","failMessage","setTimeout","toast","window","reload","Suspense","fallback","exact","path","connect","Boolean","hostname","match","productReducer","notificationType","undefined","products","product","updatedProduct","actin","carouselReducer","statusType","carouselData","carouselResponse","carouselImages","changeStateReducer","sidebarState","modalVisibilityReducer","visible","icon","alert","module","branch","brand","category","employee","address","supplier","supply","promo","termsAndCondition","initialState","userReducer","messageReducer","order","routesReducer","routes","require","branchReducer","branches","brandReducer","brands","orderReducer","orders","orderStatusCount","payments","items","accoutReducer","accounts","cartReducer","cart","addressReducer","addresses","paymentReducer","paymentMethods","inventoryReducer","inventories","supplierReducer","suppliers","incomingSupplyReducer","incomingSupplies","incomingSupply","categoryReducer","categories","updatedCategory","categoriesList","promoReducer","productsWithPromo","updatedPromo","scannerReducer","decoded","wishlistReducer","commentReducer","dashboardReducer","summaries","storeInformationReducer","combineReducers","modalVisibleResponse","productResponser","changeStateResponse","carouselResponser","branchResponse","brandResponse","orderResponse","accountResponse","accountReducer","routesResponse","browserSize","responsiveStateReducer","cartResponse","addressResponse","paymentMethodResponse","inventoryResponse","supplierResponse","incomingSupplyResponse","categoryResponse","promoResponse","scannerResponse","wishlistResponse","commentResponse","dashboardResponse","storeInformationResponse","termsAndConditionResponse","createStore","reducers","compose","responsiveStoreEnhancer","applyMiddleware","thunk","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","create","baseURL"],"mappings":"qKAAe,SAASA,IACpB,MAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,gBAEpD,OAAIJ,GAAeA,EAAYK,YAEpB,CAAEC,cAAeN,EAAYO,KAAOP,EAAYK,aAGhD,GARf,mC,iCCAA,aAIeG,MAAf,G,mJCOe,UATf,MACIC,MAAMC,EAAUC,GACZ,OAAOC,IAAKC,KAAK,iBAAkB,CAAEH,WAAUC,aAEnDG,SAASJ,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,GACrD,OAAON,IAAKC,KAAK,0BAA2B,CAAEH,WAAUC,WAAUI,QAAOC,YAAWC,WAAUC,kBCevF,UAlBf,MACIT,MAAMC,EAAUC,GACZ,OAAOQ,EAAYV,MAAMC,EAAUC,GAC9BS,MAAMC,IACCA,EAASC,MACTnB,aAAaoB,QAAQ,cAAetB,KAAKuB,UAAUH,EAASC,OAEzDD,EAASC,QAG5BG,SACItB,aAAauB,WAAW,eAE5BZ,SAASJ,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,GACrD,OAAOC,EAAYL,SAASJ,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,K,QCP7E,MAAMS,EAAmB,CAACjB,EAAUC,IAAaiB,SAC7CC,EAAYpB,MAAMC,EAAUC,GAAUS,MACxCE,IACGQ,EAAS,CACLvB,KAAMwB,IACNC,QAAS,CAAEhC,YAAasB,KAE5BQ,EAAS,CACLvB,KAAM0B,IACND,QAAS,CACLE,OAAQ,IACRZ,KAAM,CACFa,QAAS,0BAIdC,QAAQC,aAElBC,IACG,MAAMC,EACDD,EAAMjB,UACHiB,EAAMjB,SAASC,MACfgB,EAAMjB,SAASC,KAAKa,SACxBG,EAAMH,SACNG,EAAME,WAcV,OAZAV,EAAS,CACLvB,KAAMkC,MAEVX,EAAS,CACLvB,KAAM0B,IACND,QAAS,CACLE,OAAQ,IACRZ,KAAM,CACFa,QAASI,MAIdH,QAAQM,YAKdC,EAAgB,CAACjC,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,IAAgBU,UAC1FgB,QAAQC,IAAInC,GACLmB,EAAYf,SAASJ,EAAUC,EAAUI,EAAOC,EAAWC,EAAUC,GACvEE,MACIC,IACGS,EAAS,CACLvB,KAAMuC,MAEVhB,EAAS,CACLvB,KAAM0B,IACND,QAAS,CACLE,OAAQ,IACRZ,KAAM,CACFa,QAAS,4BAIdC,QAAQC,aAGlBC,IACG,MAAMH,EAAWG,EAAMjB,UACnBiB,EAAMjB,SAASC,MACfgB,EAAMjB,SAASC,KAAKa,SACpBG,EAAMH,SACNG,EAAME,WAeV,OAbAV,EAAS,CACLvB,KAAMwC,MAGVjB,EAAS,CACLvB,KAAM0B,IACND,QAAS,CACLE,OAAQ,IACRZ,KAAM,CACFa,QAASA,MAIdC,QAAQM,aAQlBjB,EAAS,IAAOK,IACzBD,EAAYJ,SACZK,EAAS,CACLvB,KAAMyC,Q,yIC1EC,UA7BR,MACLC,sBACE,OAAOC,IAAMC,IAAI,UAEnBC,uBACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA3C,GAEA,OAAOmC,IAAMS,IACX,iBAAmBN,EACnB,CACEC,YACAC,UACAC,WACAC,cACAC,gBACA3C,SAEF,CACE6C,QAAS7D,kBCpBV,MAAMkD,EAAsB,IAAMrB,SAChCiC,EAA2BZ,sBAAsB7B,MACrDC,IACCS,EAAS,CACPvB,KAAMuD,wBACN9B,QAAS,CACPE,OAAQ,IACR6B,OAAQD,wBACRxC,KAAM,CACJ0C,UAAW3C,EAASC,SAInBc,QAAQC,aAEhBC,IACC,MAAMC,EACHD,EAAMjB,UACLiB,EAAMjB,SAASC,MACfgB,EAAMjB,SAASC,KAAKa,SACtBG,EAAMH,SACNG,EAAME,WAEFN,EACHI,EAAMjB,UAAYiB,EAAMjB,SAASC,MAAQgB,EAAMjB,SAASC,KAAK2C,MAC9D3B,EAAME,WAWR,OATAV,EAAS,CACPvB,KAAM0B,IACND,QAAS,CACPE,OAAQA,EACRZ,KAAM,CACJa,QAASI,MAIRH,QAAQM,YAIRU,EACX,CAACC,EAAIC,EAAWC,EAASC,EAAUC,EAAaC,EAAe3C,IAC/Da,SACSiC,EAA2BT,uBAChCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA3C,GACAK,MACCC,IACCS,EAAS,CACPvB,KAAM0B,IACND,QAAS,CACPE,OAAQ,IACRZ,KAAM,CACJa,QAAS,2BAYRC,QAAQC,aAEhBC,IACC,MAAMC,EACHD,EAAMjB,UACLiB,EAAMjB,SAASC,MACfgB,EAAMjB,SAASC,KAAKa,SACtBG,EAAMH,SACNG,EAAME,WAEFN,EACHI,EAAMjB,UAAYiB,EAAMjB,SAASC,MAAQgB,EAAMjB,SAASC,KAAK2C,MAC9D3B,EAAME,WAWR,OATAV,EAAS,CACPvB,KAAM0B,IACND,QAAS,CACPE,OAAQA,EACRZ,KAAM,CACJa,QAASI,MAIRH,QAAQM,a,iCChGR,KACXwB,YAAa,cACbC,MAAO,QACPC,SAAU,WACVC,KAAM,OACNC,UAAW,c,gCCRf,8OACO,MAAMxB,EAAmB,mBACnBC,EAAgB,gBAChBhB,EAAgB,gBAChBU,EAAa,aACbO,EAAS,SAETf,EAAc,cACdsC,EAAgB,iB,+BCR7B,mqNAEO,MAAMC,EAAsB,sBACtBC,EAAe,eACfC,EAAc,cACdC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAe,eACfC,EAAY,oBACZC,EAAc,sBACdC,EAAY,YACZC,EAAiB,iBACjBC,EAAsB,sBACtBC,EAA+B,+BAE/BC,EAAoB,oBACpBC,EAAsB,sBAGtBC,EAAsB,sBACtBC,EAA4B,aAG5BC,EAAc,cACdC,EAAqB,qBAGrBC,EAAiC,uBACjCC,EAAqB,qBACrBC,EAAc,cACdC,EAAkB,kBAClBC,EAAmB,oBACnBC,EAAkB,kBAClBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAA4B,4BAC5BC,EAAc,cACdC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAwB,wBACxBC,EAAgC,gCAGhCC,EAAeC,IAAOC,IAAIC,QAAQC,QAClCC,EAAsBJ,IAAOC,IAAIC,QAAQG,gBAEzCC,EAAsBF,EAAsB,mBAE5CG,EAAe,cACfC,EAAgB,eAChBC,EAAW,WACXC,EACXX,EAAe,yCAA2CO,EAG/CK,EAAa,aACbC,EAA2B,2BAC3BC,EAAc,cACdC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAiB,iBACjBC,GAAyB,yBACzBC,GAA0B,0BAG1BC,GAAa,aACbC,GAAY,YACZC,GAAa,aACbC,GAAe,eACfC,GAAe,eACfC,GAAa,aACbC,GAAc,cAGdC,GAAa,aACbC,GAAgB,gBAChBC,GAAc,cACdC,GAAc,cACdC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAwB,wBACxBC,GAA2B,2BAE3BC,GAAwB,wBACxBC,GAA0B,0BAC1BC,GAAyB,yBACzBC,GAAuB,uBACvBC,GAA0B,0BAE1BC,GAAoB,oBACpBC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAS,SACTC,GAAc,cACdC,GAAc,cACdC,GAAiB,iBAEjBC,GAAc,cACdC,GAAiB,iBACjBC,GAAc,cAGdC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAe,eAGfC,GAAsB,sBACtBC,GAAqB,qBAGrBC,GAAkB,kBAClBC,GAAgB,gBAGhBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAgB,gBAChBC,GAAe,eAGfC,GAAuB,uBACvBC,GAAwB,wBACxBC,GACX,0CACWC,GACX,4CACWC,GAAsB,sBACtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAA4B,4BAC5BC,GAAuB,uBACvBC,GACX,oCAEWC,GAAkB,wBAElBC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAe,eACfC,GAAsB,sBAGtBC,GAAa,aACbC,GAAY,YACZC,GAAa,aACbC,GAAe,eACfC,GAAe,eACfC,GAAsB,sBAGtBC,GAAsB,sBAGtBC,GAAe,eACfC,GAAkB,kBAClBC,GAAe,eAEfC,GAAe,eACfC,GAAiB,iBACjBC,GAAc,cAGdC,GAAa,aACbC,GAAgC,gCAGhChJ,GAAwB,wBACxBiJ,GAAyB,yBACzBC,GAA2B,2BAG3BC,GAA2B,2BAC3BC,GAA6B,6BAC7BC,GAA0B,2B,gCC1LvC,MAAMC,EAAM,CACVvG,IAAK,CACHC,QAAS,CACPC,QAAS,wBACTE,gBAAiB,wBACjBoG,kBAAmB,MAKnBC,EAAO,CACXzG,IAAK,CACHC,QAAS,CACPC,QAAS,iEACTE,gBAAiB,gDACjBoG,kBAAmB,MAanBzG,EARS,WACb,IAAI2G,EAAM,OACV,MAAmB,qBAARA,EAA4BH,GACvCG,EAAMA,EAAIC,OACE,QAARD,EAAsBH,EACd,SAARG,EAAuBD,OAA3B,GAGaG,GAEA,QACV7G,I,mhCCfU8G,MAXO,EAAGC,UAAWC,EAAWC,QAAOC,UAASC,MAC3D,MAAMC,EAAaC,aAAaC,GAAUA,EAAMC,aAAaH,aAC7D,OACI,cAAC,IAAD,IAAWD,EAAMK,OAAQC,GACrBL,EAAa,cAACJ,EAAD,IAAeS,IACtB,cAAC,IAAD,CAAUC,GAAI1H,IAAOC,IAAIC,QAAQuG,kBAAoB,c,mDCavE,MAAMkB,EACJ,qBACEC,UAAU,0EADZ,SAGE,cAAC,YAAD,CAAWC,MAAM,UAAUC,KAAM,QAK/BC,EAAgBC,IAAMC,MAAK,IAAM,8EACjCC,EAAeF,IAAMC,MAAK,IAAM,6EAGhCE,EAAQH,IAAMC,MAAK,IAAM,sEACzBG,EAAWJ,IAAMC,MAAK,IAC1B,sEAEII,EAAUL,IAAMC,MAAK,IACzB,uDAEIK,EAAUN,IAAMC,MAAK,IACzB,gEAEIM,EAAyBN,gBAAK,IAClC,kCAEIO,EAAiBR,IAAMC,MAAK,IAChC,6EAGIQ,EAAiBT,IAAMC,MAAK,IAAM,6EAExC,MAAMS,UAAY1B,YAChB2B,mBAAmBC,EAAWC,GAC5BC,KAAKC,eAAeH,EAAWC,GAC/BC,KAAKrB,MAAMpL,sBAGb0M,eAAeH,EAAWC,GACxB,GAAIC,KAAKrB,MAAMuB,iBAAmBJ,EAAUI,gBAAiB,CAC3D,IAAIC,EAAcH,KAAKrB,MAAMuB,gBACzBC,EAAY3N,OAAS,KAAO2N,EAAY3N,QAAU,KAAOwN,KAAKrB,MAAML,WACtE8B,YAAW,KACTC,YAAM,kBAAoBF,EAAYvO,KAAKa,SAC3CuN,KAAKrB,MAAM5M,SACXuO,OAAOxM,SAASyM,WACf,KACMJ,EAAYvO,MAAQuO,EAAYvO,KAAKa,SAC9C4N,YAAMF,EAAYvO,KAAKa,UAI7BiM,SAEE,OACE,qCAEE,cAAC,IAAD,UACE,cAAC,IAAM8B,SAAP,CAAgBC,SAAU5B,EAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE6B,OAAK,EACLC,KAAMzJ,IAAOC,IAAIC,QAAQuG,kBAAoB,mBAC7CS,KAAK,kBACLM,OAASC,GAAU,cAACc,EAAD,IAA4Bd,MAEjD,cAAC,IAAD,CACE+B,OAAK,EACLC,KAAMzJ,IAAOC,IAAIC,QAAQuG,kBAAoB,SAC7CS,KAAK,aACLM,OAASC,GAAU,cAACU,EAAD,IAAWV,MAEhC,cAAC,IAAD,CACE+B,OAAK,EACLC,KAAMzJ,IAAOC,IAAIC,QAAQuG,kBAAoB,mBAC7CS,KAAK,kBACLM,OAASC,GAAU,cAACe,EAAD,IAAoBf,MAEzC,cAAC,IAAD,CACE+B,OAAK,EACLC,KAAMzJ,IAAOC,IAAIC,QAAQuG,kBAAoB,YAC7CS,KAAK,gBACLM,OAASC,GAAU,cAACW,EAAD,IAAcX,MAEnC,cAAC,IAAD,CACE+B,OAAK,EACLC,KAAMzJ,IAAOC,IAAIC,QAAQuG,kBAAoB,OAC7CS,KAAK,WACLM,OAASC,GAAU,cAACa,EAAD,IAAab,MAElC,cAAC,IAAD,CACE+B,OAAK,EACLC,KAAMzJ,IAAOC,IAAIC,QAAQuG,kBAAoB,OAC7CS,KAAK,WACLM,OAASC,GAAU,cAACY,EAAD,IAAaZ,MAElC,cAAC,EAAD,CACEgC,KAAMzJ,IAAOC,IAAIC,QAAQuG,kBAAoB,OAC7CM,UAAWgB,IAEb,cAAC,EAAD,CACE0B,KAAMzJ,IAAOC,IAAIC,QAAQuG,kBAAoB,QAC7CM,UAAW0B,IAEb,cAAC,IAAD,CACEgB,KAAK,IACLvC,KAAMlH,IAAOC,IAAIC,QAAQuG,kBAAoB,SAC7Ce,OAASC,GAAU,cAACS,EAAD,IAAkBT,aAK7C,cAAC,IAAD,QAeOiC,mBATUpC,IAGhB,CACLF,WAHiBE,EAAMC,aAAaH,WAIpChO,YAHkBkO,EAAMC,aAAanO,YAIrC4P,gBAAiB1B,EAAM0B,mBAGa,CACtCnO,WACAwB,yBAFaqN,CAGZhB,GC/IiBiB,QACW,cAA7BP,OAAOxM,SAASgN,UAEe,UAA7BR,OAAOxM,SAASgN,UAEhBR,OAAOxM,SAASgN,SAASC,MACvB,2D,2BC+GSC,MA7GQ,CAACxC,EAAQ,GAAInK,KAClC,IAAI7B,EAAS,IACTyO,EAAmB,OACnBrP,EAAO,QACYsP,IAAnB7M,EAAO/B,cAAmD4O,IAA1B7M,EAAO/B,QAAQE,SACjDA,EAAS6B,EAAO/B,QAAQE,OACxByO,EAAmB,UACfzO,GAAU,MACZyO,EAAmB,SAErBrP,EAAOyC,EAAO/B,QAAQV,MAGxB,IAAID,EAAW,CACbsP,iBAAkBA,EAClBpQ,KAAMwD,EAAOxD,KACb2B,OAAQA,EACR6B,OAAQ,QAGV,OAAQA,EAAOxD,MACb,KAAKkE,eACHpD,EAAQ,KAAWC,EAAKuP,SACxB,MACF,KAAKnM,cACH,MAAmB,CACjBnE,KAAMwD,EAAOxD,KACb2B,OAAQ6B,EAAO/B,QAAQE,OACvB6B,OAAQ,UACRzC,KAAM,CACJwP,QAAS/M,EAAO/B,QAAQV,KAAKwP,UAGnC,KAAKlJ,uBACH,MAAO,CACL1F,OAAQ6B,EAAO/B,QAAQE,OACvB6B,OAAQ,WACRzC,KAAM,CACJuP,SAAU9M,EAAO/B,QAAQV,KAAKuP,WAGpC,KAAKrM,sBACH,MAAO,CACLtC,OAAQ6B,EAAO/B,QAAQE,OACvB6B,OAAQ,sBACRzC,KAAM,CACJuP,SAAU9M,EAAO/B,QAAQV,KAAKuP,WAGpC,KAAK3L,sBACH,MAAO,CACLhD,OAAQ6B,EAAO/B,QAAQE,OACvB6B,OAAQ,UACRzC,KAAM,CACJwP,QAAS/M,EAAO/B,QAAQV,KAAKwP,UAGnC,KAAKlM,iBACH,MAAO,CACL1C,OAAQ6B,EAAO/B,QAAQE,OACvB6B,OAAQA,EAAO/B,QAAQ+B,OACvBzC,KAAM,CACJyP,eAAgBhN,EAAO/B,QAAQ+O,iBAGrC,KAAKpM,iBACH,MAAO,CACLzC,OAAQ6B,EAAO/B,QAAQE,OACvB6B,OAAQA,EAAO/B,QAAQgP,MACvB1P,KAAM,IAEV,KAAKwG,iBAQL,KAAK3C,+BAQL,KAAK4C,yBAQL,KAAKC,0BACH,MAAO,CACL9F,OAAQ6B,EAAO/B,QAAQE,OACvB6B,OAAQA,EAAO/B,QAAQ+B,OACvBzC,KAAM,CACJuP,SAAU9M,EAAO/B,QAAQV,KAAKuP,WAGpC,QACE,OAAO3C,EAEX,OAAO7M,GC5FM4P,MA9BS,CAAC/C,EAAQ,GAAInK,KACnC,IAAI7B,EAAS,IACTgP,EAAa,OACbC,EAAe,QAEIP,IAAnB7M,EAAO/B,cAAmD4O,IAA1B7M,EAAO/B,QAAQE,SACjDA,EAAS6B,EAAO/B,QAAQE,OACxBgP,EAAa,UACThP,GAAU,MACZgP,EAAa,SAEfC,EAAepN,EAAO/B,QAAQV,MAEhC,IAAI8P,EAAmB,CACrBF,WAAYA,EACZ3Q,KAAMwD,EAAOxD,KACb2B,OAAQA,EACR6B,OAAQ,YAGV,OAAQA,EAAOxD,OACR+E,sBAII4I,GAHPkD,EAAgB,aAAmBD,EAAaE,eAK7CD,ICPME,MApBY,CAACpD,EAAQ,GAAInK,KACtC,IAAI1C,EAAW,CACbd,KAAMwD,EAAOxD,KACbwD,OAAQA,EAAOxD,KACf2N,MAAO,IAGT,OAAQnK,EAAOxD,OACRiF,cAOI0I,GANP7M,EAAS6M,MAAMqD,aAAexN,EAAO/B,QAAQV,KAAKiQ,aAQ/ClQ,ICmIMmQ,MAjIgB,CAACtD,EAAQ,GAAInK,KAC1C,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACN,KAAKmF,iCAEH,MAAO,CACL+L,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrB2N,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAK/L,qBACH,MAAO,CACL8L,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrB+M,QAAS9O,EAAQV,KAAKwP,QACtBY,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAK9L,cAOL,KAAKC,kBACH,MAAO,CACL8L,MAAO3P,EAAQ2P,MACf5N,OAAQ/B,EAAQ+B,OAChB6N,OAAQ5P,EAAQ4P,OAChBvO,GAAIrB,EAAQV,KAAK+B,IAErB,KAAKyC,mBACH,MAAO,CACL2L,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrB8N,OAAQ7P,EAAQV,KAAKuQ,OACrBH,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAK3L,kBACH,MAAO,CACL0L,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrB+N,MAAO9P,EAAQV,KAAKwQ,MACpBJ,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAK1L,qBACH,MAAO,CACLyL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrBgO,SAAU/P,EAAQV,KAAKyQ,SACvBL,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAKzL,qBAOL,KAAKQ,wBACH,MAAO,CACLgL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrBiO,SAAUhQ,EAAQV,KAAK0Q,SACvBN,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAKxL,4BACH,MAAO,CACLuL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrB+M,QAAS9O,EAAQV,KAAKwP,SAE1B,KAAK3K,cACH,MAAO,CACLsL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,QAEzB,KAAKqC,oBACH,MAAO,CACLqL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrBkO,QAASjQ,EAAQV,KAAK2Q,QACtBP,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAKrL,qBACH,MAAO,CACLoL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQ+B,OAChBmO,SAAUlQ,EAAQV,KAAK4Q,SACvBR,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAKpL,mBACH,MAAO,CACLmL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQ+B,OAChBoO,OAAQnQ,EAAQV,KAAK6Q,OACrBT,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAKnL,iBACH,MAAO,CACLkL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQ+B,QAEpB,KAAKyC,kBACH,MAAO,CACLiL,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQ+B,OAChBqO,MAAOpQ,EAAQV,KAAK8Q,MACpBV,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAK1E,2BACH,MAAO,CACLyE,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrBC,UAAWhC,EAAQV,KAAK0C,UACxB0N,KAAM1P,EAAQV,KAAKoQ,MAEvB,KAAKhL,gCACH,MAAO,CACL+K,QAASzP,EAAQV,KAAKmQ,QACtB1N,OAAQ/B,EAAQV,KAAKyC,OACrBsO,kBAAmBrQ,EAAQV,KAAK+Q,kBAChCX,KAAM1P,EAAQV,KAAKoQ,MAEvB,QACE,OAAOxD,I,QC1Ib,MAAMlO,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,gBAE9CkS,EAAetS,EACf,CAAEgO,YAAY,EAAMhO,eACpB,CAAEgO,YAAY,EAAOhO,YAAa,MAsCzBuS,MApCK,CAACrE,EAAQoE,EAAcvO,KACvC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAE1B,OAAQxD,GACJ,KAAKuC,IAKL,KAAKC,IACD,MAAO,IACAmL,EACHF,YAAY,GAEpB,KAAKjM,IACD,MAAO,IACAmM,EACHF,YAAY,EACZhO,YAAagC,EAAQhC,aAE7B,KAAKyC,IAML,KAAKO,IACD,MAAO,IACAkL,EACHF,YAAY,EACZhO,YAAa,MAErB,QACI,OAAOkO,IC5CnB,MAAMoE,EAAe,GAoCNE,MAlCQ,CAACtE,EAAQoE,EAAcvO,KAC1C,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACJ,KAAK0B,IACD,MAAO,CACH8B,OAAQxD,EACR2B,OAAQF,EAAQE,OAChBZ,KAAM,CACFa,QAASH,EAAQV,KAAKa,QACtBsQ,MAAOzQ,EAAQV,KAAKmR,QAIhC,KAAKlO,IACD,MAAO,CACHR,OAAQxD,EACR2B,OAAQ,GACRZ,KAAM,CACFa,QAAS,KAIrB,KAAKkD,sBACD,MAAO,CACHtB,OAAQxD,EACR2B,OAAQF,EAAQE,OAChBZ,KAAM,CACFa,QAASH,EAAQV,KAAKa,UAGlC,QACI,OAAO+L,I,SCtBJwE,MAZO,CAACxE,EAAQ,GAAInK,KAC/B,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAE1B,OAAQxD,IACCC,IACM,CACHmS,OAAQ3Q,GAEAkM,GCVxB,MAAM,WAAE3G,EAAF,yBAAcC,EAAd,YAAwCC,EAAxC,cAAqDC,GAAkBkL,EAAQ,GAsCtEC,MApCO,CAAC3E,EAAQ,GAAInK,KAC/B,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACJ,KAAKgH,EACD,MAAO,CACHrF,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACFuQ,OAAQ7P,EAAQV,KAAKwR,WAGjC,KAAKtL,EACD,MAAO,CACHtF,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACFwR,SAAU9Q,EAAQV,KAAKwR,WAGnC,KAAKrL,EACD,MAAO,CACHvF,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,QAExB,KAAK2D,EACD,MAAO,CACHxF,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAId,QACI,OAAO4M,ICDJ6E,MAhCM,CAAC7E,EAAQ,GAAInK,KAC9B,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACJ,KAAK0H,aACD,MAAO,CACH/F,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACF0R,OAAQhR,EAAQV,KAAK0R,SAIjC,KAAK7K,aAQL,KAAKC,eACD,MAAO,CACHlG,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAId,QACI,OAAO4M,ICyBJ+E,MAtDM,CAAC/E,EAAQ,GAAInK,KAC9B,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACJ,KAAKiI,aACD,MAAO,CACHtG,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACF4R,OAAQlR,EAAQV,KAAK4R,OACrBC,iBAAkBnR,EAAQV,KAAK6R,mBAG3C,KAAKpK,2BACD,MAAO,CACH7G,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACF8R,SAAUpR,EAAQV,KAAK8R,WAGnC,KAAKtK,wBACD,MAAO,CACH5G,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAMU,EAAQV,MAEtB,KAAKqH,cACD,MAAO,CACHzG,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACF+R,MAAOrR,EAAQV,KAAK+R,QAGhC,KAAK3K,cACD,MAAO,CACHxG,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAId,KAAKsH,kBACD,MAAO,CACH1G,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACFmR,MAAOzQ,EAAQV,KAAKmR,QAGhC,QACI,OAAOvE,IC6BJoF,MArEO,CAACpF,EAAQ,GAAInK,KACjC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACN,KAAK8I,oBACH,MAAO,CACLnH,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJiS,SAAUvR,EAAQV,KAAKiS,WAG7B,KAAKjK,gBAML,KAAKE,iBAML,KAAKK,cAML,KAAKN,kBAML,KAAKE,kBAML,KAAKC,iBAML,KAAKC,iBAML,KAAKC,SAML,KAAKE,cACH,MAAO,CACL5H,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAMU,EAAQV,MAElB,QACE,OAAO4M,IC/Eb,MAAM,YAAElE,EAAF,eAAeC,EAAf,YAA+BC,IAAgB0I,EAAQ,GA+B9CY,OA7BK,CAACtF,EAAQ,GAAInK,KAC7B,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAE1B,OAAQxD,GACJ,KAAKyJ,EACD,MAAO,CACH9H,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,QAExB,KAAKkG,EACD,MAAO,CACH/H,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACFmS,KAAMzR,EAAQV,KAAKmS,OAG/B,KAAKvJ,GACD,MAAO,CACHhI,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAId,QACI,OAAO4M,ICFJwF,OAxBQ,CAACxF,EAAQ,GAAInK,KAChC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAE1B,OAAQxD,GACJ,KAAK4J,gBACD,MAAO,CACHjI,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACFqS,UAAW3R,EAAQV,KAAKqS,YAGpC,KAAKtJ,eACD,MAAO,CACHnI,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAId,QACI,OAAO4M,ICLJ0F,OAhBQ,CAAC1F,EAAQ,GAAInK,KAChC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,IACC+J,sBACM,CACHpI,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACFuS,eAAgB7R,EAAQV,KAAKuS,iBAK9B3F,GCEJ4F,OAfU,CAAC5F,EAAQ,GAAInK,KACpC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,IACDiK,kBACI,CACLtI,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJyS,YAAa/R,EAAQV,KAAKyS,cAIvB7F,GCqCE8F,OA3CS,CAAC9F,EAAQ,GAAInK,KACnC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACN,KAAKmK,kBACH,MAAO,CACLxI,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAEV,KAAKqJ,kBACH,MAAO,CACLzI,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJ4Q,SAAUlQ,EAAQV,KAAK4Q,WAG7B,KAAKtH,kBACH,MAAO,CACL1I,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAEV,KAAKuJ,gBACH,MAAO,CACL3I,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJ2S,UAAWjS,EAAQV,KAAK2S,YAG9B,KAAKnJ,eACH,MAAO,CACL5I,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJ4Q,SAAUlQ,EAAQV,KAAK4Q,WAG7B,QACE,OAAOhE,IChDb,MAAM,sBACJlD,GADI,oBAEJG,GAFI,0CAGJD,GAHI,wCAIJD,GAJI,qBAKJF,GALI,kCAMJS,IACEoH,EAAQ,GAuCGsB,OArCe,CAAChG,EAAQ,GAAInK,KACzC,IAAI,KAAExD,EAAF,QAAQyB,GAAY+B,EAExB,OAAQxD,GACN,KAAKyK,GACH,MAAO,CACLjH,OAAQ/B,EAAQ+B,OAChB7B,OAAQF,EAAQE,OAChBZ,KAAM,CACJ6S,iBAAkBnS,EAAQV,KAAK6S,mBAIrC,KAAKhJ,GACH,MAAO,CACLpH,OAAQ/B,EAAQ+B,OAChB7B,OAAQF,EAAQE,OAChBZ,KAAM,CACJ8S,eAAgBpS,EAAQV,KAAK8S,iBAGnC,KAAKrJ,GAML,KAAKS,GACH,MAAO,CACLzH,OAAQ/B,EAAQ+B,OAChB7B,OAAQF,EAAQE,OAChBZ,KAAM,IAEV,QACE,OAAO4M,IC3Cb,MAAM,cACJxC,GADI,eAEJG,GAFI,aAGJC,GAHI,gBAIJH,GAJI,gBAKJC,GALI,oBAMJG,IACE6G,EAAQ,GAsDGyB,OApDS,CAACnG,EAAQ,GAAInK,KACnC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAE1B,OAAQxD,GACN,KAAKmL,GA8BL,KAAKE,GACH,MAAO,CACL7H,OAAQ/B,EAAQ+B,OAChB7B,OAAQF,EAAQE,OAChBZ,KAAM,IA5BV,KAAKuK,GACH,MAAO,CACL9H,OAAQ/B,EAAQ+B,OAChB7B,OAAQF,EAAQE,OAChBZ,KAAM,CACJgT,WAAYtS,EAAQV,KAAKgT,aAG/B,KAAKxI,GACH,MAAO,CACL/H,OAAQ/B,EAAQ+B,OAChB7B,OAAQF,EAAQE,OAChBZ,KAAM,CACJyQ,SAAU/P,EAAQV,KAAKyQ,WAG7B,KAAKpG,GACH,MAAO,CACL5H,OAAQ/B,EAAQ+B,OAChB7B,OAAQF,EAAQE,OAChBZ,KAAM,CACJiT,gBAAiBvS,EAAQV,KAAKiT,kBASpC,KAAKxI,GACH,MAAO,CACLhI,OAAQ/B,EAAQ+B,OAChB7B,OAAQF,EAAQE,OAChBZ,KAAM,CACJkT,eAAgBxS,EAAQV,KAAKkT,iBAGnC,QACE,OAAOtG,ICjBEuG,OAnCM,CAACvG,EAAQ,GAAInK,KAChC,IAAI,KAAExD,EAAF,QAAQyB,GAAY+B,EACxB,OAAQxD,GACN,KAAKyL,aACH,MAAO,CACL9J,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJoT,kBAAmB1S,EAAQV,KAAKoT,oBAGtC,KAAKxI,aAML,KAAKE,eACH,MAAO,CACLlK,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAEV,KAAK6K,eACH,MAAO,CACLjK,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJqT,aAAc3S,EAAQV,KAAKqT,eAGjC,QACE,OAAOzG,ICtCb,MAAM,oBAAE7B,IAAwBuG,EAAQ,GAezBgC,OAbQ,CAAC1G,EAAQ,GAAInK,IAGxBA,EAAOxD,OACN8L,GACM,CACHwI,QAAS9Q,EAAO/B,QAAQ6S,QACxB9Q,OAAQA,EAAO/B,QAAQ+B,QAGpBmK,ECUJ4G,OApBS,CAAC5G,EAAQ,GAAInK,KACjC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACJ,KAAKgM,eAML,KAAKE,eACL,KAAKD,kBACD,MAAO,CACHtK,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAMU,EAAQV,MAEtB,QACI,OAAO4M,ICGJ6G,OApBQ,CAAC7G,EAAQ,GAAInK,KAChC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACJ,KAAKmM,eAML,KAAKE,cACL,KAAKD,iBACD,MAAO,CACHzK,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAMU,EAAQV,MAEtB,QACI,OAAO4M,ICnBnB,MAAM,WAAErB,GAAF,8BAAcC,IAAkC8F,EAAQ,GAyB/CoC,OAvBU,CAAC9G,EAAQ,GAAInK,KACpC,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACN,KAAKsM,GACH,MAAO,CACL3K,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJ2T,UAAWjT,EAAQV,KAAK2T,YAG9B,KAAKnI,GACH,MAAO,CACL5K,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJuP,SAAU7O,EAAQV,KAAKuP,WAG7B,QACE,OAAO3C,ICCEgH,OArBwB,CAAChH,EAAQ,GAAInK,KAClD,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACN,KAAKuD,wBACH,MAAO,CACL5B,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,CACJ0C,UAAWhC,EAAQV,KAAK0C,YAG9B,KAAKgJ,2BACH,MAAO,CACL9K,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAM,IAEV,QACE,OAAO4M,ICQEiH,mBAAgB,CAE7BC,qBAAsB5D,EAEtB6D,iBAAkB3E,EAElB4E,oBAAqBhE,EAErBiE,kBAAmBtE,EAEnB9C,aAAcoE,EAEdiD,eAAgB3C,EAEhB4C,cAAe1C,EAEf2C,cAAezC,EAEf0C,gBAAiBC,EAEjBC,eAAgBnD,EAEhB9C,gBAAiB4C,EAEjBsD,YAAaC,IAEbC,aAAcxC,GAEdyC,gBAAiBvC,GAEjBwC,sBAAuBtC,GAEvBuC,kBAAmBrC,GAEnBsC,iBAAkBpC,GAElBqC,uBAAwBnC,GAExBoC,iBAAkBjC,GAElBkC,cAAe9B,GAEf+B,gBAAiB5B,GACjB6B,iBAAkB3B,GAClB4B,gBAAiB3B,GAEjB4B,kBAAmB3B,GACnB4B,yBAA0B1B,GAE1B2B,0BCvEsC,CAAC3I,EAAQ,GAAInK,KACnD,MAAM,KAAExD,EAAF,QAAQyB,GAAY+B,EAC1B,OAAQxD,GACN,KAAK0M,2BACH,MAAO,CACL/K,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAMU,EAAQV,MAElB,KAAK4L,6BAML,KAAKC,0BACH,MAAO,CACLjL,OAAQF,EAAQE,OAChB6B,OAAQ/B,EAAQ+B,OAChBzC,KAAMU,EAAQV,KAAK+Q,mBAEvB,QACE,OAAOnE,M,UCtBE4I,eAAYC,GAAUC,YAAQC,IAAyBC,YAAgBC,Q,cCKtFC,IAAShJ,OACP,cAAC,IAAD,CAAUiJ,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,S5B0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtW,MAAMuW,IAClCA,EAAaC,iB,gC6B3HnB,6BAGe1U,QAAM2U,OAAO,CAC1BC,QAASnR,eAAe,UACxB/C,QAAS,CACP,eAAgB,wB","file":"static/js/main.c28ab3be.chunk.js","sourcesContent":["export default function authHeader() {\n    const credentials = JSON.parse(localStorage.getItem(\"credentials\"));\n\n    if (credentials && credentials.accessToken) {\n        // For Spring Boot back-end\n        return { Authorization: credentials.type + credentials.accessToken };\n\n    } else {\n        return {};\n    }\n}\n","// export { default as Roles } from './Roles';\n\nimport Roles from \"./Roles\";\n\nexport default Roles;","import http from './RestApi'\n\nclass UserService {\n    login(username, password) {\n        return http.post(\"/account/login\", { username, password })\n    }\n    register(username, password, email, firstName, lastName, phoneNumber) {\n        return http.post(\"/users/account/register\", { username, password, email, firstName, lastName, phoneNumber })\n    }\n}\n\nexport default new UserService();","// import axios from \"axios\";\n// import { API_BASE_URL } from \"../redux/constants\";\n// import RestApi from \"../restAPI/RestApi\";\nimport UserService from \"../restAPI/UserService\";\nclass AuthService {\n    login(username, password) {\n        return UserService.login(username, password)\n            .then((response) => {\n                if (response.data) {\n                    localStorage.setItem(\"credentials\", JSON.stringify(response.data))\n                }\n                return response.data;\n            })\n    }\n    logout() {\n        localStorage.removeItem(\"credentials\");\n    }\n    register(username, password, email, firstName, lastName, phoneNumber) {\n        return UserService.register(username, password, email, firstName, lastName, phoneNumber);\n    }\n}\n\nexport default new AuthService();","import authService from 'src/service/auth/authService'\nimport {\n    LOGIN_FAIL,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGOUT,\n    LOGIN_SUCCESS,\n    SET_MESSAGE,\n    // CLEAR_MESSAGEs\n} from 'src/constants/userConstants'\n\nexport const authenticateUser = (username, password) => async (dispatch) => {\n    return authService.login(username, password).then(\n        (data) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: { credentials: data }\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 200,\n                    data: {\n                        message: \"Login Successfullys\"\n                    }\n                }\n            })\n            return Promise.resolve();\n        },\n        (error) => {\n            const errorMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: LOGIN_FAIL\n            })\n            dispatch({\n                type: SET_MESSAGE,\n                payload: {\n                    status: 403,\n                    data: {\n                        message: errorMessage\n                    }\n                }\n            })\n            return Promise.reject();\n        }\n    )\n\n}\nexport const createAccount = (username, password, email, firstName, lastName, phoneNumber) => async (dispatch) => {\n    console.log(username);\n    return authService.register(username, password, email, firstName, lastName, phoneNumber)\n        .then(\n            (response) => {\n                dispatch({\n                    type: REGISTER_SUCCESS,\n                })\n                dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        status: 200,\n                        data: {\n                            message: \"Successfully Register\"\n                        }\n                    }\n                })\n                return Promise.resolve();\n            },\n\n            (error) => {\n                const message = (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                dispatch({\n                    type: REGISTER_FAIL,\n\n                })\n                dispatch({\n                    type: SET_MESSAGE,\n                    payload: {\n                        status: 500,\n                        data: {\n                            message: message\n                        }\n                    }\n                })\n                return Promise.reject();\n            }\n\n\n\n        )\n}\n\nexport const logout = () => (dispatch) => {\n    authService.logout();\n    dispatch({\n        type: LOGOUT\n    })\n}","import authHeader from \"../auth/authHeader\"\nimport axios from \"./RestApi\"\nexport class StoreInformationApiService {\n  getStoreInformation() {\n    return axios.get(\"/store\")\n  }\n  updateStoreInformation(\n    id,\n    storeName,\n    acronym,\n    location,\n    description,\n    contactNumber,\n    email,\n  ) {\n    return axios.put(\n      \"/store/update/\" + id,\n      {\n        storeName,\n        acronym,\n        location,\n        description,\n        contactNumber,\n        email,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n  }\n}\nexport default new StoreInformationApiService()\n","import { SET_MESSAGE } from \"src/constants/userConstants\"\nimport {\n  GET_STORE_INFORMATION,\n  UDPATE_STORE_INFORMATION,\n} from \"src/service/redux/constants\"\nimport StoreInformationApiService from \"src/service/restAPI/StoreInformationApiService\"\nexport const getStoreInformation = () => async (dispatch) => {\n  return StoreInformationApiService.getStoreInformation().then(\n    (response) => {\n      dispatch({\n        type: GET_STORE_INFORMATION,\n        payload: {\n          status: 200,\n          action: GET_STORE_INFORMATION,\n          data: {\n            storeInfo: response.data,\n          },\n        },\n      })\n      return Promise.resolve()\n    },\n    (error) => {\n      const errorMessage =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n\n      const status =\n        (error.response && error.response.data && error.response.data.code) ||\n        error.toString()\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: {\n          status: status,\n          data: {\n            message: errorMessage,\n          },\n        },\n      })\n      return Promise.reject()\n    },\n  )\n}\nexport const updateStoreInformation =\n  (id, storeName, acronym, location, description, contactNumber, email) =>\n  async (dispatch) => {\n    return StoreInformationApiService.updateStoreInformation(\n      id,\n      storeName,\n      acronym,\n      location,\n      description,\n      contactNumber,\n      email,\n    ).then(\n      (response) => {\n        dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            status: 200,\n            data: {\n              message: \"Successfully Updated\",\n            },\n          },\n        })\n        // dispatch({\n        //   type: UDPATE_STORE_INFORMATION,\n        //   paylaod: {\n        //     action: UDPATE_STORE_INFORMATION,\n        //     status: 200,\n        //     data: {},\n        //   },\n        // })\n        return Promise.resolve()\n      },\n      (error) => {\n        const errorMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString()\n\n        const status =\n          (error.response && error.response.data && error.response.data.code) ||\n          error.toString()\n\n        dispatch({\n          type: SET_MESSAGE,\n          payload: {\n            status: status,\n            data: {\n              message: errorMessage,\n            },\n          },\n        })\n        return Promise.reject()\n      },\n    )\n  }\n","/*\n* These are the placeholder roles you can replace these with yours\n*/\nexport default {\n    SUPER_ADMIN: 'SUPER_ADMIN',\n    ADMIN: 'ADMIN',\n    CUSTOMER: 'CUSTOMER',\n    USER: 'USER',\n    ROLE_USER: 'ROLE_USER'\n};\n\n","// user containts\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";","import config from \"../../config\"\n\nexport const GET_POPULAR_PRODUCT = \"GET_POPULAR_PRODUCT\"\nexport const GET_PRODUCTS = \"GET_PRODUCTS\"\nexport const GET_PRODUCT = \"GET_PRODUCT\"\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\"\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\"\nexport const SAVE_PRODUCT = \"SAVE_PRODUCT\"\nexport const SAVE_FAIL = \"SAVE_PRODUCT_FAIL\"\nexport const UPDATE_FAIL = \"UPDATE_PRODUCT_FAIL\"\nexport const GET_IMAGE = \"GET_IMAGE\"\nexport const FAIL_GET_IMAGE = \"FAIL_GET_IMAGE\"\nexport const GET_PRODUCT_DETAILS = \"GET_PRODUCT_DETAILS\"\nexport const GET_PRODUCT_BY_CATEGORY_NAME = \"GET_PRODUCT_BY_CATEGORY_NAME\"\n\nexport const SET_IMAGE_MESSAGE = \"SET_IMAGE_MESSAGE\"\nexport const SET_PRODUCT_MESSAGE = \"SET_PRODUCT_MESSAGE\"\n\n//carousel\nexport const GET_CAROUSEL_IMAGES = \"GET_CAROUSEL_IMAGES\"\nexport const CAROUSEL_FOLDER_DIRECTORY = \"/carousel/\"\n\n//sidebar\nexport const SET_SIDEBAR = \"SET_SIDEBAR\"\nexport const SET_SIDEBAR_UNFOLD = \"SET_SIDEBAR_UNFOLD\"\n\n//modal\nexport const SET_PRODUCTEDITMODAL_VISIBILIT = \"PRODUCT_EDITOR_MODAL\"\nexport const EDIT_PRODUCT_MODAL = \"EDIT_PRODUCT_MODEL\"\nexport const ALERT_MODAL = \"ALERT_MODAL\"\nexport const ALERT_BAN_MODAL = \"ALERT_BAN_MODAL\"\nexport const ADD_BRANCH_MODAL = \" ADD_BRANCH_MODAL\"\nexport const ADD_BRAND_MODAL = \"ADD_BRAND_MODAL\"\nexport const ADD_CATEGORY_MODAL = \"ADD_CATEGORY_MODAL\"\nexport const ADD_EMPLOYEE_MODAL = \"ADD_EMPLOYEE_MODAL\"\nexport const SET_PRODUCT_DETAILS_MODAL = \"SET_PRODUCT_DETAILS_MODAL\"\nexport const LOGIN_MODAL = \"LOGIN_MODAL\"\nexport const SET_ADDRESS_MODAL = \"SET_ADDRESS_MODAL\"\nexport const SET_SUPPLIER_MODAL = \"SET_SUPPLIER_MODAL\"\nexport const SET_SUPPLY_MODAL = \"SET_SUPPLY_MODAL\"\nexport const SET_SCAN_MODAL = \"SET_SCAN_MODAL\"\nexport const SET_PROMO_MODAL = \"SET_PROMO_MODAL\"\nexport const CHANGE_PASSWORD_MODAL = \"CHANGE_PASSWORD_MODAL\"\nexport const SET_TERMS_AND_CONDITION_MODAL = \"SET_TERMS_AND_CONDITION_MODAL\"\n\n// endpoint constalnts\nexport const API_BASE_URL = config.api.private.baseUrl\nexport const FRONT_END_BASED_URL = config.api.private.baseFrontendUrl\n\nexport const OAUTH2_REDIRECT_URI = FRONT_END_BASED_URL + \"/oauth2/redirect\"\n\nexport const ACCESS_TOKEN = \"accessToken\"\nexport const REFRESH_TOKEN = \"refreshToken\"\nexport const USERNAME = \"username\"\nexport const GOOGLE_AUTH_URL =\n  API_BASE_URL + \"/oauth2/authorize/google?redirect_uri=\" + OAUTH2_REDIRECT_URI\n\n// product branch\nexport const GET_BRANCH = \"GET_BRANCH\"\nexport const GET_BRANCH_TOTAL_PRODUCT = \"GET_BRANCH_TOTAL_PRODUCT\"\nexport const SAVE_BRANCH = \"SAVE_BRANCH\"\nexport const UPDATE_BRANCH = \"UPDATE_BRANCH\"\nexport const DELETE_BRANCH = \"DELETE_BRANCH\"\nexport const GET_DISCOVER_PRODUCT = \"GET_DISCOVER_PRODUCT\"\nexport const GET_PUBLIC_PRODUCT = \"GET_PUBLIC_PRODUCT\"\nexport const SEARCH_PRODUCT = \"SEARCH_PRODUCT\"\nexport const GET_PRODUCTS_BY_STATUS = \"GET_PRODUCTS_BY_STATUS\"\nexport const GET_PRODUCTS_WITH_PROMO = \"GET_PRODUCTS_WITH_PROMO\"\n\n// brand\nexport const GET_BRANDS = \"GET_BRANDS\"\nexport const GET_BRAND = \"GET_BRAND\"\nexport const SAVE_BRAND = \"SAVE_BRAND\"\nexport const UPDATE_BRAND = \"UPDATE_BRAND\"\nexport const DELETE_BRAND = \"DELETE_BRAND\"\nexport const FAIL_BRAND = \"FAIL_BRAND\"\nexport const CLEAR_BRAND = \"CLEAR_BRAND\"\n\n// order\nexport const GET_ORDERS = \"GET_ORDERS\"\nexport const CONFIRM_ORDER = \"CONFIRM_ORDER\"\nexport const PLACE_ORDER = \"PLACE_ORDER\"\nexport const ORDER_ITEMS = \"ORDER_ITEMS\"\nexport const GET_ORDER_BY_ID = \"GET_ORDER_BY_ID\"\nexport const UPDATE_ORDER_STATUS = \"UPDATE_ORDER_STATUS\"\nexport const UPDATE_PAYMENT_STATUS = \"UPDATE_PAYMENT_STATUS\"\nexport const GET_PAYMENT_TRANSACTIONS = \"GET_PAYMENT_TRANSACTIONS\"\n// customer address\nexport const SAVE_CUSTOMER_ADDRESS = \"SAVE_CUSTOMER_ADDRESS\"\nexport const UPDATE_CUSTOMER_ADDRESS = \"UPDATE_CUSTOMER_ADDRESS\"\nexport const GET_CUSTOMER_ADDRESSES = \"GET_CUSTOMER_ADDRESSES\"\nexport const GET_CUSTOMER_ADDRESS = \"GET_CUSTOMER_ADDRESS\"\nexport const DELETE_CUSTOMER_ADDRESS = \"DELETE_CUSTOMER_ADDRESS\"\n/// account\nexport const GET_USERS_ACCOUNT = \"GET_USERS_ACCOUNT\"\nexport const SAVE_EMPLOYEE = \"SAVE_EMPLOYEE\"\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\"\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\"\nexport const FORGOT_PASSWORD = \"FORGOT_PASSWORD\"\nexport const VALIDATE_TOKEN = \"VALIDATE_TOKEN\"\nexport const RESET_PASSWORD = \"RESET_PASSWORD\"\nexport const GET_ME = \"GET_ME\"\nexport const BAN_ACCOUNT = \"BAN_ACCOUNT\"\nexport const UPDATE_USER = \"UPDATE_USER\"\nexport const VERIFY_ACCOUNT = \"VERIFY_ACCOUNT\"\n//cart\nexport const ADD_TO_CART = \"ADD_TO_CART\"\nexport const GET_CART_ITEMS = \"GET_CART_ITEMS\"\nexport const REMOVE_ITEM = \"REMOVE_ITEM\"\n\n//address\nexport const GET_ADDRESSES = \"GET_ADDRESSES\"\nexport const UPDATE_ADDRESS = \"UPDATE_ADDRESS\"\nexport const SAVE_ADDRESS = \"SAVE_ADDRESS\"\n\n// payment method\nexport const GET_PAYMENT_METHODS = \"GET_PAYMENT_METHODS\"\nexport const GET_PAYMENT_METHOD = \"GET_PAYMENT_METHOD\"\n\n//inventory\nexport const GET_INVENTORIES = \"GET_INVENTORIES\"\nexport const GET_INVENTORY = \"GET_INVENTORY\"\n\n// supplier\nexport const CREATE_SUPPLIER = \"CREATE_SUPPLIER\"\nexport const UPDATE_SUPPLIER = \"UPDATE_SUPPLIER\"\nexport const DELETE_SUPPLIER = \"DELETE_SUPPLIER\"\nexport const GET_SUPPLIERS = \"GET_SUPPLIERS\"\nexport const GET_SUPPLIER = \"GET_SUPPLIER\"\n\n// incoming supply\nexport const SAVE_INCOMING_SUPPLY = \"SAVE_INCOMING_SUPPLY\"\nexport const GET_INCOMING_SUPPLIES = \"GET_INCOMING_SUPPLIES\"\nexport const GET_INCOMING_SUPPLIES_BY_PENDING_STATUS =\n  \"GET_INCOMING_SUPPLIES_BY_PENDING_STATUS\"\nexport const GET_INCOMING_SUPPLIES_BY_DELIVERED_STATUS =\n  \"GET_INCOMING_SUPPLIES_BY_DELIVERED_STATUS\"\nexport const GET_INCOMING_SUPPLY = \"GET_INCOMING_SUPPLY\"\nexport const DELETE_INCOMING_SUPPLY = \"DELETE_INCOMING_SUPPLY\"\nexport const UPDATE_INCOMING_SUPPLY = \"UPDATE_INCOMING_SUPPLY\"\nexport const DELIVERED_INCOMING_SUPPLY = \"DELIVERED_INCOMING_SUPPLY\"\nexport const SHIP_INCOMING_SUPPLY = \"SHIP_INCOMING_SUPPLY\"\nexport const MARK_INCOMING_SUPPLY_AS_DELIVERED =\n  \"MARK_INCOMING_SUPPLY_AS_DELIVERED\"\n\nexport const NO_IMAGE_BASE64 = \"/default/no-image.jpg\"\n/// categories\nexport const SAVE_CATEGORY = \"SAVE_CATEGORY\"\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\"\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\"\nexport const GET_CATEGORIES = \"GET_CATEGORIES\"\nexport const GET_CATEGORY = \"GET_CATEGORY\"\nexport const GET_CATEGORIES_LIST = \"GET_CATEGORIES_LIST\"\n\n//promo\nexport const GET_PROMOS = \"GET_PROMOS\"\nexport const GET_PROMO = \"GET_PROMO\"\nexport const SAVE_PROMO = \"SAVE_PROMO\"\nexport const UPDATE_PROMO = \"UPDATE_PROMO\"\nexport const DELETE_PROMO = \"DELETE_PROMO\"\nexport const GET_DECODED_BARCODE = \"GET_DECODED_BARCODE\"\n\n///common\nexport const SEARCH_PRODUCT_TEXT = \"SEARCH_PRODUCT_TEXT\"\n\n// wishlist\nexport const GET_WISHLIST = \"GET_WISHLIST\"\nexport const DELETE_WISHLIST = \"DELETE_WISHLIST\"\nexport const ADD_WISHLIST = \"ADD_WISHLIST\"\n// wishlist\nexport const GET_COMMENTS = \"GET_COMMENTS\"\nexport const DELETE_COMMENT = \"DELETE_COMMENT\"\nexport const ADD_COMMENT = \"ADD_COMMENT\"\n\n//dashboard\nexport const GET_TOTALS = \"GET_TOTALS\"\nexport const GET_PRODUCTS_COUNT_TOTAL_SOLD = \"GET_PRODUCTS_COUNT_TOTAL_SOLD\"\n\n//store\nexport const GET_STORE_INFORMATION = \"GET_STORE_INFORMATION\"\nexport const SAVE_STORE_INFORMATION = \"SAVE_STORE_INFORMATION\"\nexport const UDPATE_STORE_INFORMATION = \"UDPATE_STORE_INFORMATION\"\n\n//terms\nexport const SAVE_TERMS_AND_CONDITION = \"SAVE_TERMS_AND_CONDITION\"\nexport const UPDATE_TERMS_AND_CONDITION = \"UPDATE_TERMS_AND_CONDITION\"\nexport const GET_TERMS_AND_CONDITION = \"GET_TERMS_AND_CONDITION\"\n","const dev = {\n  api: {\n    private: {\n      baseUrl: \"http://localhost:4480\",\n      baseFrontendUrl: \"http://localhost:4000\",\n      prefixFrontendUrl: \"\",\n    },\n  },\n}\n\nconst test = {\n  api: {\n    private: {\n      baseUrl: \"https://ec2-13-229-154-20.ap-southeast-1.compute.amazonaws.com\",\n      baseFrontendUrl: \"https://elite-replica-329023.as.r.appspot.com\",\n      prefixFrontendUrl: \"\",\n    },\n  },\n}\n\nconst getEnv = function () {\n  let env = \"test\"\n  if (typeof env === \"undefined\") return dev\n  env = env.trim()\n  if (env === \"dev\") return dev\n  if (env === \"test\") return test\n}\n\nconst config = getEnv()\n\nexport default {\n  ...config,\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router'\n\nimport config from \"../../config\"\nconst PrivateRouter = ({ component: Component, roles, name, ...rest }) => {\n    const isLoggedIn = useSelector((state) => state.userResponse.isLoggedIn);\n    return (\n        <Route {...rest} render={props => (\n            isLoggedIn ? <Component {...props} />\n                : <Redirect to={config.api.private.prefixFrontendUrl + \"/login\"} />\n        )} />\n    )\n\n}\n\nexport default PrivateRouter\n\n","import React, { Component, lazy } from \"react\"\nimport {\n  BrowserRouter as Router,\n  // HashRouter,\n  Route,\n  Switch,\n} from \"react-router-dom\"\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\" // requires a loader\n\nimport { connect } from \"react-redux\"\nimport PrivateRouter from \"./router/privateRouter/PrivateRouter\"\nimport { DotLoader } from \"react-spinners\"\n\nimport { logout } from \"src/service/apiActions/userAction/userAction\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"./scss/style.scss\"\n\nimport { getStoreInformation } from \"src/service/apiActions/storeAction/StoreInformationAction\"\n\nimport config from \"./config\"\n\nconst loading = (\n  <div\n    className=\"d-flex justify-content-center align-items-center position-fixed spinner\"\n  >\n    <DotLoader color=\"#36D7B7\" size={100} />\n  </div>\n)\n\n// Containers\nconst DefaultLayout = React.lazy(() => import(\"./layout/DefaultLayout\"))\nconst PublicLayout = React.lazy(() => import(\"./layout/PublicLayout\"))\n\n// Pages\nconst Login = React.lazy(() => import(\"./views/common/public/login/Login\"))\nconst Register = React.lazy(() =>\n  import(\"./views/common/public/register/Register\"),\n)\nconst Page404 = React.lazy(() =>\n  import(\"./views/common/public/page404/Page404\"),\n)\nconst Page500 = React.lazy(() =>\n  import(\"./views/common/public/page500/Page500\"),\n)\nconst RedirectSuccessHandler = lazy(() =>\n  import(\"./components/redirectSuccessHandler/RedirectSuccessHandler\"),\n)\nconst ForgotPassword = React.lazy(() =>\n  import(\"src/views/common/forgotPassword/ForgotPassword\"),\n)\n// customer layou\nconst CustomerLayout = React.lazy(() => import(\"src/layout/CustomerLayout\"))\n\nclass App extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    this.manageResponse(prevProps, prevState)\n    this.props.getStoreInformation()\n  }\n\n  manageResponse(prevProps, prevState) {\n    if (this.props.messageResponse != prevProps.messageResponse) {\n      let failMessage = this.props.messageResponse\n      if (failMessage.status > 400 && failMessage.status <= 403 && this.props.isLoggedIn) {\n        setTimeout(() => {\n          toast(\"Session Expired\" + failMessage.data.message)\n          this.props.logout()\n          window.location.reload()\n        }, 1000)\n      } else if (failMessage.data && failMessage.data.message) {\n        toast(failMessage.data.message)\n      }\n    }\n  }\n  render() {\n    // const credentials = this.props.credentials;\n    return (\n      <>\n        {/* <div className=\"bg-light \"> */}\n        <Router>\n          <React.Suspense fallback={loading}>\n            <Switch>\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/oauth2/redirect\"}\n                name=\"success handler\"\n                render={(props) => <RedirectSuccessHandler {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/login\"}\n                name=\"Login Page\"\n                render={(props) => <Login {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/password/forgot\"}\n                name=\"Forgot password\"\n                render={(props) => <ForgotPassword {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/register\"}\n                name=\"Register Page\"\n                render={(props) => <Register {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/500\"}\n                name=\"Page 500\"\n                render={(props) => <Page500 {...props} />}\n              />\n              <Route\n                exact\n                path={config.api.private.prefixFrontendUrl + \"/400\"}\n                name=\"Page 400\"\n                render={(props) => <Page404 {...props} />}\n              />\n              <PrivateRouter\n                path={config.api.private.prefixFrontendUrl + \"/app\"}\n                component={DefaultLayout}\n              />\n              <PrivateRouter\n                path={config.api.private.prefixFrontendUrl + \"/user\"}\n                component={CustomerLayout}\n              />\n              <Route\n                path=\"/\"\n                name={config.api.private.prefixFrontendUrl + \"public\"}\n                render={(props) => <PublicLayout {...props} />}\n              />\n            </Switch>\n          </React.Suspense>\n        </Router>\n        <ToastContainer />\n        {/* </div> */}\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  const isLoggedIn = state.userResponse.isLoggedIn\n  const credentials = state.userResponse.credentials\n  return {\n    isLoggedIn,\n    credentials,\n    messageResponse: state.messageResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  logout,\n  getStoreInformation\n})(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\")\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import {\n  DELETE_PRODUCT,\n  GET_DISCOVER_PRODUCT,\n  GET_POPULAR_PRODUCT,\n  // GET_IMAGE,\n  GET_PRODUCT,\n  // GET_PRODUCT,\n  GET_PRODUCTS,\n  GET_PRODUCTS_BY_STATUS,\n  GET_PRODUCTS_WITH_PROMO,\n  GET_PRODUCT_BY_CATEGORY_NAME,\n  GET_PRODUCT_DETAILS,\n  SEARCH_PRODUCT,\n  UPDATE_PRODUCT,\n  // UPDATE_PRODUCT,\n  // DELETE_PRODUCT,\n} from \"../constants\"\n\nconst productReducer = (state = {}, action) => {\n  let status = 200\n  let notificationType = \"info\"\n  let data = {}\n  if (action.payload !== undefined && action.payload.status !== undefined) {\n    status = action.payload.status\n    notificationType = \"success\"\n    if (status >= 400) {\n      notificationType = \"error\"\n    }\n    data = action.payload.data\n  }\n\n  let response = {\n    notificationType: notificationType,\n    type: action.type,\n    status: status,\n    action: \"LIST\",\n  }\n\n  switch (action.type) {\n    case GET_PRODUCTS:\n      response[\"data\"] = data.products\n      break\n    case GET_PRODUCT:\n      return (response = {\n        type: action.type,\n        status: action.payload.status,\n        action: \"GETBYID\",\n        data: {\n          product: action.payload.data.product,\n        },\n      })\n    case GET_DISCOVER_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: \"DISCOVER\",\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_POPULAR_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: \"GET_POPULAR_PRODUCT\",\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_PRODUCT_DETAILS:\n      return {\n        status: action.payload.status,\n        action: \"DETAILS\",\n        data: {\n          product: action.payload.data.product,\n        },\n      }\n    case UPDATE_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          updatedProduct: action.payload.updatedProduct,\n        },\n      }\n    case DELETE_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: action.payload.actin,\n        data: {},\n      }\n    case SEARCH_PRODUCT:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_PRODUCT_BY_CATEGORY_NAME:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_PRODUCTS_BY_STATUS:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    case GET_PRODUCTS_WITH_PROMO:\n      return {\n        status: action.payload.status,\n        action: action.payload.action,\n        data: {\n          products: action.payload.data.products,\n        },\n      }\n    default:\n      return state\n  }\n  return response\n}\n\nexport default productReducer\n","import { GET_CAROUSEL_IMAGES } from \"../constants\"\n\nconst carouselReducer = (state = {}, action) => {\n  let status = 200\n  let statusType = \"info\"\n  let carouselData = {}\n\n  if (action.payload !== undefined && action.payload.status !== undefined) {\n    status = action.payload.status\n    statusType = \"success\"\n    if (status >= 400) {\n      statusType = \"error\"\n    }\n    carouselData = action.payload.data\n  }\n  let carouselResponse = {\n    statusType: statusType,\n    type: action.type,\n    status: status,\n    action: \"RETRIEVE\",\n  }\n\n  switch (action.type) {\n    case GET_CAROUSEL_IMAGES:\n      carouselResponse[\"carouselData\"] = carouselData.carouselImages\n      break\n    default:\n      return state\n  }\n  return carouselResponse\n}\n\nexport default carouselReducer\n","import { SET_SIDEBAR } from \"../constants\"\n\nconst changeStateReducer = (state = {}, action) => {\n  let response = {\n    type: action.type,\n    action: action.type,\n    state: {},\n  }\n\n  switch (action.type) {\n    case SET_SIDEBAR:\n      response.state.sidebarState = action.payload.data.sidebarState\n      break\n    // case SET_SIDEBAR_UNFOLD:\n    //   response.state.sidebarUnfoldable = action.payload.data.sidebarUnfoldable\n    //   break\n    default:\n      return state\n  }\n  return response\n}\n\nexport default changeStateReducer\n","import {\n  ADD_BRANCH_MODAL,\n  ADD_BRAND_MODAL,\n  ADD_CATEGORY_MODAL,\n  ADD_EMPLOYEE_MODAL,\n  ALERT_BAN_MODAL,\n  ALERT_MODAL,\n  CHANGE_PASSWORD_MODAL,\n  EDIT_PRODUCT_MODAL,\n  LOGIN_MODAL,\n  SET_ADDRESS_MODAL,\n  SET_PRODUCTEDITMODAL_VISIBILIT,\n  SET_PRODUCT_DETAILS_MODAL,\n  SET_PROMO_MODAL,\n  SET_SCAN_MODAL,\n  SET_SUPPLIER_MODAL,\n  SET_SUPPLY_MODAL,\n  SET_TERMS_AND_CONDITION_MODAL,\n  UDPATE_STORE_INFORMATION,\n} from \"../constants\"\n\nconst modalVisibilityReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case SET_PRODUCTEDITMODAL_VISIBILIT:\n      // response.state.visible = action.payload.data.visible\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        icon: payload.data.icon,\n      }\n    case EDIT_PRODUCT_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        product: payload.data.product,\n        icon: payload.data.icon,\n      }\n    case ALERT_MODAL:\n      return {\n        alert: payload.alert,\n        action: payload.action,\n        module: payload.module,\n        id: payload.data.id,\n      }\n    case ALERT_BAN_MODAL:\n      return {\n        alert: payload.alert,\n        action: payload.action,\n        module: payload.module,\n        id: payload.data.id,\n      }\n    case ADD_BRANCH_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        branch: payload.data.branch,\n        icon: payload.data.icon,\n      }\n    case ADD_BRAND_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        brand: payload.data.brand,\n        icon: payload.data.icon,\n      }\n    case ADD_CATEGORY_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        category: payload.data.category,\n        icon: payload.data.icon,\n      }\n    case ADD_EMPLOYEE_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        employee: payload.data.employee,\n        icon: payload.data.icon,\n      }\n    case CHANGE_PASSWORD_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        employee: payload.data.employee,\n        icon: payload.data.icon,\n      }\n    case SET_PRODUCT_DETAILS_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        product: payload.data.product,\n      }\n    case LOGIN_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n      }\n    case SET_ADDRESS_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        address: payload.data.address,\n        icon: payload.data.icon,\n      }\n    case SET_SUPPLIER_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.action,\n        supplier: payload.data.supplier,\n        icon: payload.data.icon,\n      }\n    case SET_SUPPLY_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.action,\n        supply: payload.data.supply,\n        icon: payload.data.icon,\n      }\n    case SET_SCAN_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.action,\n      }\n    case SET_PROMO_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.action,\n        promo: payload.data.promo,\n        icon: payload.data.icon,\n      }\n    case UDPATE_STORE_INFORMATION:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        storeInfo: payload.data.storeInfo,\n        icon: payload.data.icon,\n      }\n    case SET_TERMS_AND_CONDITION_MODAL:\n      return {\n        visible: payload.data.visible,\n        action: payload.data.action,\n        termsAndCondition: payload.data.termsAndCondition,\n        icon: payload.data.icon,\n      }\n    default:\n      return state\n  }\n}\n\nexport default modalVisibilityReducer\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n} from \"src/constants/userConstants\";\n\nconst credentials = JSON.parse(localStorage.getItem(\"credentials\"));\n\nconst initialState = credentials\n    ? { isLoggedIn: true, credentials }\n    : { isLoggedIn: false, credentials: null };\n\nconst userReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: false,\n            };\n        case REGISTER_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: true,\n                credentials: payload.credentials,\n            };\n        case LOGIN_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n                credentials: null,\n            };\n        case LOGOUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                credentials: null,\n            };\n        default:\n            return state;\n    }\n}\nexport default userReducer;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"src/constants/userConstants\";\nimport { SET_PRODUCT_MESSAGE } from \"../constants\";\n\nconst initialState = {};\n\nconst messageReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_MESSAGE:\n            return {\n                action: type,\n                status: payload.status,\n                data: {\n                    message: payload.data.message,\n                    order: payload.data.order,\n                }\n            };\n\n        case CLEAR_MESSAGE:\n            return {\n                action: type,\n                status: '',\n                data: {\n                    message: ''\n                }\n            };\n\n        case SET_PRODUCT_MESSAGE:\n            return {\n                action: type,\n                status: payload.status,\n                data: {\n                    message: payload.data.message\n                }\n            }\n        default:\n            return state;\n    }\n}\nexport default messageReducer;","import Roles from \"src/router/config\";\n\nconst routesReducer = (state = {}, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case Roles:\n            return {\n                routes: payload\n            }\n        default: return state;\n    }\n}\n\nexport default routesReducer","const { GET_BRANCH, GET_BRANCH_TOTAL_PRODUCT, SAVE_BRANCH, UPDATE_BRANCH } = require(\"../constants\");\n\nconst branchReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_BRANCH:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    branch: payload.data.branches\n                }\n            }\n        case GET_BRANCH_TOTAL_PRODUCT:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    branches: payload.data.branches\n                }\n            }\n        case SAVE_BRANCH:\n            return {\n                status: payload.status,\n                action: payload.action,\n            }\n        case UPDATE_BRANCH:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default branchReducer;","import { GET_BRANDS, SAVE_BRAND, UPDATE_BRAND } from \"../constants\";\n\nconst brandReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_BRANDS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    brands: payload.data.brands\n                }\n            }\n\n        case SAVE_BRAND:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        case UPDATE_BRAND:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default brandReducer;","import { GET_ORDERS, GET_ORDER_BY_ID, ORDER_ITEMS, PLACE_ORDER, UPDATE_PAYMENT_STATUS, GET_PAYMENT_TRANSACTIONS } from \"../constants\";\n\nconst orderReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_ORDERS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    orders: payload.data.orders,\n                    orderStatusCount: payload.data.orderStatusCount\n                }\n            }\n        case GET_PAYMENT_TRANSACTIONS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    payments: payload.data.payments,\n                }\n            }\n        case UPDATE_PAYMENT_STATUS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        case ORDER_ITEMS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    items: payload.data.items\n                }\n            }\n        case PLACE_ORDER:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        case GET_ORDER_BY_ID:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    order: payload.data.order\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default orderReducer;","import {\n  BAN_ACCOUNT,\n  CHANGE_PASSWORD,\n  DELETE_ACCOUNT,\n  FORGOT_PASSWORD,\n  GET_ME,\n  GET_USERS_ACCOUNT,\n  RESET_PASSWORD,\n  SAVE_EMPLOYEE,\n  UPDATE_USER,\n  VALIDATE_TOKEN,\n} from \"../constants\"\n\nconst accoutReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case GET_USERS_ACCOUNT:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          accounts: payload.data.accounts,\n        },\n      }\n    case SAVE_EMPLOYEE:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case DELETE_ACCOUNT:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case BAN_ACCOUNT:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case CHANGE_PASSWORD:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case FORGOT_PASSWORD:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case VALIDATE_TOKEN:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case RESET_PASSWORD:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case GET_ME:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case UPDATE_USER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    default:\n      return state\n  }\n}\nexport default accoutReducer\n","const { ADD_TO_CART, GET_CART_ITEMS, REMOVE_ITEM } = require(\"../constants\");\n\nconst cartReducer = (state = {}, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case ADD_TO_CART:\n            return {\n                status: payload.status,\n                action: payload.action\n            }\n        case GET_CART_ITEMS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    cart: payload.data.cart\n                }\n            }\n        case REMOVE_ITEM:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default cartReducer;","import { GET_ADDRESSES, SAVE_ADDRESS } from \"../constants\";\n\nconst addressReducer = (state = {}, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_ADDRESSES:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    addresses: payload.data.addresses\n                }\n            }\n        case SAVE_ADDRESS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default addressReducer;","import { GET_PAYMENT_METHODS } from \"../constants\";\n\nconst paymentReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_PAYMENT_METHODS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: {\n                    paymentMethods: payload.data.paymentMethods\n                }\n            }\n\n        default:\n            return state\n    }\n}\nexport default paymentReducer;","import { GET_INVENTORIES } from \"../constants\"\n\nconst inventoryReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case GET_INVENTORIES:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          inventories: payload.data.inventories,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default inventoryReducer\n","import {\n  CREATE_SUPPLIER,\n  DELETE_SUPPLIER,\n  GET_SUPPLIER,\n  GET_SUPPLIERS,\n  UPDATE_SUPPLIER,\n} from \"../constants\"\n\nconst supplierReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case CREATE_SUPPLIER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    case UPDATE_SUPPLIER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          supplier: payload.data.supplier,\n        },\n      }\n    case DELETE_SUPPLIER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    case GET_SUPPLIERS:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          suppliers: payload.data.suppliers,\n        },\n      }\n    case GET_SUPPLIER:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          supplier: payload.data.supplier,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default supplierReducer\n","const {\n  GET_INCOMING_SUPPLIES,\n  GET_INCOMING_SUPPLY,\n  GET_INCOMING_SUPPLIES_BY_DELIVERED_STATUS,\n  GET_INCOMING_SUPPLIES_BY_PENDING_STATUS,\n  SAVE_INCOMING_SUPPLY,\n  MARK_INCOMING_SUPPLY_AS_DELIVERED,\n} = require(\"../constants\")\n\nconst incomingSupplyReducer = (state = {}, action) => {\n  let { type, payload } = action\n\n  switch (type) {\n    case GET_INCOMING_SUPPLIES:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          incomingSupplies: payload.data.incomingSupplies,\n        },\n      }\n\n    case GET_INCOMING_SUPPLY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          incomingSupply: payload.data.incomingSupply,\n        },\n      }\n    case SAVE_INCOMING_SUPPLY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {},\n      }\n    case MARK_INCOMING_SUPPLY_AS_DELIVERED:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {},\n      }\n    default:\n      return state\n  }\n}\nexport default incomingSupplyReducer\n","const {\n  SAVE_CATEGORY,\n  GET_CATEGORIES,\n  GET_CATEGORY,\n  UPDATE_CATEGORY,\n  DELETE_CATEGORY,\n  GET_CATEGORIES_LIST,\n} = require(\"../constants\")\n\nconst categoryReducer = (state = {}, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case SAVE_CATEGORY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {},\n      }\n    case GET_CATEGORIES:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          categories: payload.data.categories,\n        },\n      }\n    case GET_CATEGORY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          category: payload.data.category,\n        },\n      }\n    case UPDATE_CATEGORY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          updatedCategory: payload.data.updatedCategory,\n        },\n      }\n    case DELETE_CATEGORY:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {},\n      }\n    case GET_CATEGORIES_LIST:\n      return {\n        action: payload.action,\n        status: payload.status,\n        data: {\n          categoriesList: payload.data.categoriesList,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default categoryReducer\n","import {\n  DELETE_PROMO,\n  GET_PROMOS,\n  SAVE_PROMO,\n  UPDATE_PROMO,\n} from \"../constants\"\nconst promoReducer = (state = {}, action) => {\n  let { type, payload } = action\n  switch (type) {\n    case GET_PROMOS:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          productsWithPromo: payload.data.productsWithPromo,\n        },\n      }\n    case SAVE_PROMO:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    case DELETE_PROMO:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    case UPDATE_PROMO:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          updatedPromo: payload.data.updatedPromo,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default promoReducer\n","const { GET_DECODED_BARCODE } = require(\"../constants\");\n\nconst scannerReducer = (state = {}, action) => {\n\n\n    switch (action.type) {\n        case GET_DECODED_BARCODE:\n            return {\n                decoded: action.payload.decoded,\n                action: action.payload.action\n            }\n        default:\n            return state;\n    }\n}\nexport default scannerReducer","import { GET_WISHLIST, DELETE_WISHLIST, ADD_WISHLIST } from \"../constants\";\n\nconst wishlistReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_WISHLIST:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        case ADD_WISHLIST:\n        case DELETE_WISHLIST:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        default:\n            return state\n    }\n}\nexport default wishlistReducer;","import { GET_COMMENTS, DELETE_COMMENT, ADD_COMMENT } from \"../constants\";\n\nconst commentReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_COMMENTS:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        case ADD_COMMENT:\n        case DELETE_COMMENT:\n            return {\n                status: payload.status,\n                action: payload.action,\n                data: payload.data\n            }\n        default:\n            return state\n    }\n}\nexport default commentReducer;","const { GET_TOTALS, GET_PRODUCTS_COUNT_TOTAL_SOLD } = require(\"../constants\")\n\nconst dashboardReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case GET_TOTALS:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          summaries: payload.data.summaries,\n        },\n      }\n    case GET_PRODUCTS_COUNT_TOTAL_SOLD:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          products: payload.data.products,\n        },\n      }\n    default:\n      return state\n  }\n}\nexport default dashboardReducer\n","import { GET_STORE_INFORMATION, UDPATE_STORE_INFORMATION } from \"../constants\"\n\nexport const storeInformationReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case GET_STORE_INFORMATION:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {\n          storeInfo: payload.data.storeInfo,\n        },\n      }\n    case UDPATE_STORE_INFORMATION:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: {},\n      }\n    default:\n      return state\n  }\n}\nexport default storeInformationReducer\n","import { combineReducers } from \"redux\"\nimport { responsiveStateReducer } from \"redux-responsive\"\nimport productReducer from \"./productReducer\"\nimport carouselReducer from \"./carouselReducer\"\nimport changeStateReducer from \"./changeStateReducer\"\nimport modalVisibilityReducer from \"./modalVisibilityReducer\"\nimport userReducer from \"./userReducer\"\nimport messageReducer from \"./messageReducer\"\nimport routesReducer from \"./routesReducer\"\nimport branchReducer from \"./branchReducer\"\nimport brandReducer from \"./brandReducer\"\nimport orderReducer from \"./orderReducer\"\nimport accountReducer from \"./accountReducer\"\nimport cartReducer from \"./cartReducer\"\nimport addressReducer from \"./addressReducer\"\nimport paymentReducer from \"./paymentReducer\"\nimport inventoryReducer from \"./inventoryReducer\"\nimport supplierReducer from \"./supplierReducer\"\nimport incomingSupplyReducer from \"./incomingSupplyReducer\"\nimport categoryReducer from \"./categoryReducer\"\nimport promoReducer from \"./promoReducer\"\nimport scannerReducer from \"./scannerReducer\"\nimport wishlistReducer from \"./wishlistReducer\"\nimport commentReducer from \"./commentReducer\"\nimport dashboardReducer from \"./dashboardReducer\"\nimport storeInformationReducer from \"./storeInformationReducer\"\nimport { termsAndConditionReducer } from \"./termsAndConditionReducer\"\n\nexport default combineReducers({\n  //modals\n  modalVisibleResponse: modalVisibilityReducer,\n  //products\n  productResponser: productReducer,\n  //sidebar\n  changeStateResponse: changeStateReducer,\n  //carousel\n  carouselResponser: carouselReducer,\n  //account\n  userResponse: userReducer,\n  //branch\n  branchResponse: branchReducer,\n  // brand\n  brandResponse: brandReducer,\n  //order\n  orderResponse: orderReducer,\n  // employee\n  accountResponse: accountReducer,\n  // routes\n  routesResponse: routesReducer,\n  //message\n  messageResponse: messageReducer,\n  //browserSize\n  browserSize: responsiveStateReducer,\n  //cart\n  cartResponse: cartReducer,\n  //address\n  addressResponse: addressReducer,\n  // payment\n  paymentMethodResponse: paymentReducer,\n  //inventory\n  inventoryResponse: inventoryReducer,\n  // supplier\n  supplierResponse: supplierReducer,\n  //incoming supplies\n  incomingSupplyResponse: incomingSupplyReducer,\n  //category\n  categoryResponse: categoryReducer,\n  //promotion\n  promoResponse: promoReducer,\n  //scannera\n  scannerResponse: scannerReducer,\n  wishlistResponse: wishlistReducer,\n  commentResponse: commentReducer,\n  //dahsboard\n  dashboardResponse: dashboardReducer,\n  storeInformationResponse: storeInformationReducer,\n  //terms and condition\n  termsAndConditionResponse: termsAndConditionReducer,\n})\n","import {\n  GET_TERMS_AND_CONDITION,\n  SAVE_TERMS_AND_CONDITION,\n  UPDATE_TERMS_AND_CONDITION,\n} from \"../constants\"\n\nexport const termsAndConditionReducer = (state = {}, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case SAVE_TERMS_AND_CONDITION:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data,\n      }\n    case UPDATE_TERMS_AND_CONDITION:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data.termsAndCondition,\n      }\n    case GET_TERMS_AND_CONDITION:\n      return {\n        status: payload.status,\n        action: payload.action,\n        data: payload.data.termsAndCondition,\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport reducers from './service/redux/reducers'\n\nimport thunk from 'redux-thunk'\nimport { responsiveStoreEnhancer } from 'redux-responsive'\n\nexport default createStore(reducers, compose(responsiveStoreEnhancer, applyMiddleware(thunk)))\n","import 'react-app-polyfill/stable'\nimport 'core-js'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import axios from \"axios\";\nimport { API_BASE_URL } from \"../redux/constants\";\n\nexport default axios.create({\n  baseURL: API_BASE_URL + \"/api/v1\",\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n});\n\n\n"],"sourceRoot":""}