{"version":3,"sources":["components/incomingSupplyTabContent/IncomingSuppliesCard.js","components/incomingSupplyTabContent/IncomingSupplies.js","../ReactPaginate/webpack/universalModuleDefinition","../ReactPaginate/webpack/bootstrap","../ReactPaginate/node_modules/prop-types/index.js","../webpack:/ReactPaginate/external {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}","../ReactPaginate/node_modules/prop-types/factoryWithThrowingShims.js","../ReactPaginate/node_modules/prop-types/lib/ReactPropTypesSecret.js","../ReactPaginate/react_components/PageView.js","../ReactPaginate/react_components/BreakView.js","../ReactPaginate/react_components/PaginationBoxView.js","../ReactPaginate/react_components/index.js"],"names":["IncomingSuppliesCard","Component","handleIncomingSupplyItem","incomingItem","status","this","props","markIncomingSuppliesAsDelivered","id","then","supplies","incomingSupplyResponse","data","index","findIndex","o","splice","length","getIncomingSupplies","totalCounts","toUpperCase","incomingSupplyStatus","totalCountChange","catch","messageResponse","setInterval","clearMessage","renderIncomingAction","orderStatus","incomingSupply","orderButton","toLowerCase","content","color","className","variant","onClick","setSupplyModal","size","render","fontStyle","fontSize","fontWeight","map","supply","incomingSupplyItems","deliveredAt","purchasedAt","supplier","updatedAt","supplyReference","style","striped","hover","responsive","bordered","align","scope","slice","item","product","name","value","String","barcode","height","width","margin","background","numberReceived","colSpan","to","pathname","config","api","private","prefixFrontendUrl","state","connect","IncomingSupplies","constructor","super","message","action","incomingSupplies","totalPages","query","page","limit","path","logout","setState","manageIncomingSupplies","prevProps","prevState","manageSupplyModal","modalVisible","handlePageClick","selected","componentDidMount","componentDidUpdate","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","modalVisibleResponse","__WEBPACK_EXTERNAL_MODULE__1__","module","exports","require","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","getter","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","PageView","pageClassName","pageLinkClassName","activeLinkClassName","getEventListener","pageSelectedHandler","href","extraAriaContext","pageLabelBuilder","ariaLabel","ariaCurrent","role","tabIndex","aria-label","aria-current","onKeyPress","propTypes","BreakView","breakLinkClassName","breakHandler","PaginationBoxView","initialSelected","evt","preventDefault","returnValue","handlePageSelected","callCallback","callActiveCallback","handlerFunction","eventListener","getForwardJump","getBackwardJump","selectedItem","onPageActive","items","push","getPageElement","breakView","leftSide","rightSide","createPageView","handleBreakClick","initialPage","forcePage","disableInitialCallback","console","warn","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","disabledClassName","previousClassName","previousLinkClassName","previousAriaLabel","prevRel","nextClassName","nextLinkClassName","nextAriaLabel","nextRel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","handlePreviousPage","aria-disabled","rel","pagination","handleNextPage"],"mappings":"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","file":"static/js/58.a0f9c5f0.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableDataCell,\n  CTableBody,\n  CButton,\n  CTooltip,\n} from \"@coreui/react\"\nimport { Link } from \"react-router-dom\"\nimport Barcode from \"react-barcode\"\nimport {\n  markIncomingSuppliesAsDelivered,\n  getIncomingSupplies,\n} from \"src/service/apiActions/incomingSupplyAction/incomingSupplyAction\"\nimport { connect } from \"react-redux\"\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction\"\nimport { setSupplyModal } from \"src/service/apiActions/modalAction/modalAction\"\n\nimport * as MdIcons from \"react-icons/md\"\n\nimport config from \"../../config\"\n\nexport class IncomingSuppliesCard extends Component {\n  handleIncomingSupplyItem(incomingItem, status) {\n    this.props\n      .markIncomingSuppliesAsDelivered(incomingItem.id)\n      .then(() => {\n        let supplies = this.props.supplies\n        let incomingSupplies = this.props.incomingSupplyResponse.data\n        const index = supplies.findIndex((o) => o.id === incomingItem.id)\n\n        supplies.splice(index, 1)\n        if (supplies.length === 0) {\n          this.props.getIncomingSupplies(\"\", status, 0, 10)\n        } else {\n          let totalCounts = this.props.totalCounts\n          if (typeof totalCounts[status.toUpperCase()] == \"undefined\") {\n            totalCounts[status.toUpperCase()] = 0\n          }\n          totalCounts[incomingItem.incomingSupplyStatus.toUpperCase()]--\n          totalCounts[status.toUpperCase()]++\n          this.props.totalCountChange(totalCounts)\n          // this.setState({\n          //   orders: orders\n          // });\n        }\n      })\n      .catch(() => {\n        let { status, data } = this.props.messageResponse\n\n        if (status > 400 && status <= 403) {\n          setInterval(() => {\n            this.props.clearMessage()\n          }, 1000)\n        }\n      })\n    // let orderId = orderData.orderId;\n    // this.props.updateOrderStatus(orderId, orderStatus).then(() => {\n    //   let orders = this.state.orders;\n    //   const order = this.props.orderResponse.data;\n    //   const index = orders.findIndex((o) => o.orderId == orderId);\n    //   orders.splice(index, 1);\n    //   if (orders.length == 0) {\n    //     this.props.getOrders(this.state.status, 0, 10);\n    //   } else {\n    //     let totalCounts = this.props.totalCounts;\n    //     if (typeof totalCounts[orderStatus.toUpperCase()] == 'undefined') {\n    //       totalCounts[orderStatus.toUpperCase()] = 0;\n    //     }\n    //     totalCounts[orderData.orderStatus.toUpperCase()]--;\n    //     totalCounts[orderStatus.toUpperCase()]++;\n    //     this.props.totalCountChange(totalCounts);\n    //     this.setState({\n    //       orders: orders\n    //     });\n    //   }\n    // })\n  }\n  renderIncomingAction(orderStatus, incomingSupply) {\n    let orderButton = <></>\n    switch (orderStatus.toLowerCase()) {\n      case \"pending\":\n        orderButton = (\n          <>\n            <CTooltip content=\"Edit Incoming Supplies\">\n              <CButton\n                color=\"info\"\n                className=\"me-2\"\n                variant=\"ghost\"\n                onClick={() =>\n                  this.props.setSupplyModal(\n                    !false,\n                    \"Edit\",\n                    incomingSupply,\n                    <MdIcons.MdModeEdit size=\"20\" className=\"me-2\" />,\n                  )\n                }\n              >\n                <MdIcons.MdModeEdit size=\"20\" />\n              </CButton>\n            </CTooltip>\n\n            <CButton\n              onClick={() => {\n                this.handleIncomingSupplyItem(incomingSupply, \"pending\")\n              }}\n            >\n              Mask as Delivered\n            </CButton>\n          </>\n        )\n        break\n    }\n    return orderButton\n  }\n  render() {\n    let supplies = this.props.supplies\n    const fontStyle = {\n      fontSize: \"14px\",\n      fontWeight: \"400\",\n    }\n    return (\n      <>\n        {supplies.length === 0 ? (\n          <CCard>\n            <CCardBody>\n              <div className=\"text-center\">No Pending Supplies</div>\n            </CCardBody>\n          </CCard>\n        ) : (\n          supplies.map((supply, index) => {\n            let {\n              incomingSupplyItems,\n              deliveredAt,\n              purchasedAt,\n              id,\n              incomingSupplyStatus,\n              supplier,\n              updatedAt,\n              supplyReference,\n            } = supply\n\n            return (\n              <CCard className=\"mb-3\" key={index}>\n                <CCardHeader>\n                  <div className=\"d-flex justify-content-between \">\n                    <div className=\"p-2\">\n                      <span\n                        className=\"text-black-50\"\n                        style={{\n                          fontSize: \"14px\",\n                          fontWeight: \"400\",\n                        }}\n                      >\n                        Supply Reference #:\n                      </span>\n                      <span\n                        style={{\n                          fontSize: \"14px\",\n                          fontWeight: \"600\",\n                        }}\n                        className=\"text-bold ms-2\"\n                      >\n                        {supplyReference}\n                      </span>\n                    </div>\n                    <div className=\"p-2\">\n                      <span\n                        className=\"text-black-50\"\n                        style={{\n                          fontSize: \"14px\",\n                          fontWeight: \"400\",\n                        }}\n                      >\n                        Product Items:\n                      </span>\n                      <span\n                        style={{\n                          fontSize: \"14px\",\n                          fontWeight: \"600\",\n                        }}\n                        className=\"text-bold ms-2\"\n                      >\n                        {incomingSupplyItems.length}\n                      </span>\n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                  <CTable\n                    striped\n                    hover\n                    className=\"shadow-sm \"\n                    responsive=\"md\"\n                    bordered\n                    align=\"middle\"\n                  >\n                    <CTableHead color=\"dark\">\n                      <CTableRow className=\"text-center\">\n                        <CTableHeaderCell scope=\"col\">\n                          Product Name\n                        </CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">\n                          Product Barcode\n                        </CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">\n                          Quantity Recieved\n                        </CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody className=\"text-center\" color=\"light\">\n                      {incomingSupplyItems.length > 0 ? (\n                        incomingSupplyItems.slice(0, 5).map((item, index) => {\n                          return (\n                            <CTableRow className=\"text-center\" key={index}>\n                              <CTableDataCell>\n                                {item.product.name}\n                              </CTableDataCell>\n                              <CTableDataCell>\n                                <Barcode\n                                  value={String(item.product.barcode)}\n                                  height={50}\n                                  width={1}\n                                  fontSize={14}\n                                  margin={7}\n                                  background=\"#f5f5f548\"\n                                />\n                              </CTableDataCell>\n                              <CTableDataCell>\n                                {item.numberReceived}\n                              </CTableDataCell>\n                            </CTableRow>\n                          )\n                        })\n                      ) : (\n                        <CTableRow>\n                          <CTableDataCell colSpan=\"4\">No data</CTableDataCell>\n                        </CTableRow>\n                      )}\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n                <CCardFooter className=\"p-4\">\n                  <div className=\"d-flex justify-content-between align-items-end\">\n                    <div className=\"d-flex flex-column\">\n                      <div style={fontStyle} className=\"mt-2\">\n                        <span className=\"text-black-50 me-2\">\n                          Supplier Name:\n                        </span>\n                        <span style={{ fontWeight: \"500\" }}>\n                          {supplier && supplier.name}\n                        </span>\n                      </div>\n                      <div style={fontStyle} className=\"mt-2\">\n                        <span className=\"text-black-50 me-2\">\n                          Purchased Date:\n                        </span>\n                        <span style={{ fontWeight: \"500\" }}>{purchasedAt}</span>\n                      </div>\n\n                      <div style={fontStyle} className=\"mt-2\">\n                        <span style={fontStyle} className=\"text-black-50 me-2\">\n                          Last Update:\n                        </span>\n                        <span style={{ fontWeight: \"500\" }}>{updatedAt}</span>\n                      </div>\n                      {deliveredAt && (\n                        <div style={fontStyle} className=\"mt-2\">\n                          <span\n                            style={fontStyle}\n                            className=\"text-black-50 me-2\"\n                          >\n                            Delivered Date:\n                          </span>\n                          <span\n                            className=\"text-danger\"\n                            style={{ fontWeight: \"500\" }}\n                          >\n                            {deliveredAt}\n                          </span>\n                        </div>\n                      )}\n                      <div style={fontStyle} className=\"mt-2\">\n                        <span style={fontStyle} className=\"text-black-50 me-2\">\n                          Supply Status:\n                        </span>\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontWeight: \"500\" }}\n                        >\n                          {incomingSupplyStatus}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center align-items-center\">\n                      <div\n                        className={\n                          incomingSupplyItems.length > 2\n                            ? \"d-flex align-items-bottom\"\n                            : \"d-none  \"\n                        }\n                      >\n                        <Link\n                          to={{\n                            pathname:\n                              config.api.private.prefixFrontendUrl +\n                              \"/app/supply/\" +\n                              id,\n                            state: id,\n                          }}\n                          className=\"m-2\"\n                        >\n                          View More\n                        </Link>\n                      </div>\n                      {this.renderIncomingAction(this.props.status, supply)}\n                    </div>\n                  </div>\n                </CCardFooter>\n              </CCard>\n            )\n          })\n        )}\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    incomingSupplyResponse: state.incomingSupplyResponse,\n    messageResponse: state.messageResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  clearMessage,\n  markIncomingSuppliesAsDelivered,\n  setSupplyModal,\n  getIncomingSupplies,\n})(IncomingSuppliesCard)\n","import React, { Component } from \"react\"\nimport { getIncomingSupplies } from \"src/service/apiActions/incomingSupplyAction/incomingSupplyAction\"\nimport { connect } from \"react-redux\"\nimport { logout } from \"src/service/apiActions/userAction/userAction\"\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction\"\nimport IncomingSuppliesCard from \"./IncomingSuppliesCard\"\nimport ReactPaginate from \"react-paginate\"\n\nexport class IncomingSupplies extends Component {\n  state = {\n    message: \"\",\n    status: \"\",\n    action: \"\",\n    incomingSupplies: {\n      data: [],\n      totalPages: 0,\n    },\n    query: \"\",\n    page: 0,\n    limit: 10,\n    path: \"\",\n  }\n  constructor(props) {\n    super(props)\n    this.state.status = props.status\n  }\n  componentDidMount() {\n    const { query, status, page, limit } = this.state\n    this.getIncomingSupplies(query, status, page, limit)\n  }\n  getIncomingSupplies = (query, status, page, limit) => {\n    this.props.getIncomingSupplies(query, status, page, limit).catch(() => {\n      let { status, data } = this.props.messageResponse\n      if (status > 400 && status <= 403) {\n        this.props.logout()\n        this.props.clearMessage()\n      }\n      this.setState({\n        message: data.message,\n      })\n    })\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.manageSupplyModal(prevProps, prevState)\n    this.manageIncomingSupplies(prevProps, prevState)\n  }\n  manageIncomingSupplies = (prevProps, prevState) => {\n    if (\n      prevProps.incomingSupplyResponse !== this.props.incomingSupplyResponse\n    ) {\n      let { action, status, data } = this.props.incomingSupplyResponse\n      if (action === \"GET_INCOMING_SUPPLIES\" && status === 200) {\n        this.setState({\n          incomingSupplies: data.incomingSupplies,\n        })\n      }\n    }\n  }\n  manageSupplyModal = (prevProps, prevState) => {\n    if (prevProps.modalVisible !== this.props.modalVisible) {\n      let { action } = this.props.modalVisible\n      if (action === \"close\") {\n        const { query, status, page, limit } = this.state\n        this.getIncomingSupplies(query, status, page, limit)\n      }\n    }\n  }\n  handlePageClick = (data) => {\n    let page = data.selected\n    this.setState({ page: page }, () => {\n      const { limit, query, status } = this.state\n      this.props.getIncomingSupplies(query, status, page, limit)\n    })\n  }\n\n  render() {\n    const { incomingSupplies, status } = this.state\n    return (\n      <>\n        <IncomingSuppliesCard\n          supplies={incomingSupplies.data}\n          status={status}\n        />\n        <ReactPaginate\n          previousLabel={\"previous\"}\n          nextLabel={\"next\"}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          pageCount={incomingSupplies.totalPages}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={this.handlePageClick}\n          containerClassName={\"pagination\"}\n          activeClassName={\"active\"}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    incomingSupplyResponse: state.incomingSupplyResponse,\n    messageResponse: state.messageResponse,\n    modalVisible: state.modalVisibleResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  getIncomingSupplies,\n  logout,\n  clearMessage,\n})(IncomingSupplies)\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPaginate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactPaginate\"] = factory(root[\"React\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = (props) => {\n  let { pageClassName, pageLinkClassName } = props;\n  const {\n    page,\n    selected,\n    activeClassName,\n    activeLinkClassName,\n    getEventListener,\n    pageSelectedHandler,\n    href,\n    extraAriaContext,\n    pageLabelBuilder,\n  } = props;\n\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' + page + (extraAriaContext ? ' ' + extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel = props.ariaLabel || 'Page ' + page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + activeClassName;\n    } else {\n      pageClassName = activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={pageSelectedHandler}\n        {...getEventListener(pageSelectedHandler)}\n      >\n        {pageLabelBuilder(page)}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  pageSelectedHandler: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n  pageLabelBuilder: PropTypes.func.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = (props) => {\n  const {\n    breakLabel,\n    breakClassName,\n    breakLinkClassName,\n    breakHandler,\n    getEventListener,\n  } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={breakHandler}\n        {...getEventListener(breakHandler)}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  breakHandler: PropTypes.func.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    previousAriaLabel: PropTypes.string,\n    prevRel: PropTypes.string,\n    nextLabel: PropTypes.node,\n    nextAriaLabel: PropTypes.string,\n    nextRel: PropTypes.string,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    onPageActive: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    pageLabelBuilder: PropTypes.func,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n    eventListener: PropTypes.string,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousLabel: 'Previous',\n    previousClassName: 'previous',\n    previousAriaLabel: 'Previous page',\n    prevRel: 'prev',\n    nextLabel: 'Next',\n    nextClassName: 'next',\n    nextAriaLabel: 'Next page',\n    nextRel: 'next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n    pageLabelBuilder: (page) => page,\n    eventListener: 'onClick',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = (evt) => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = (evt) => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) {\n      this.callActiveCallback(selected);\n      return;\n    }\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getEventListener = (handlerFunction) => {\n    const { eventListener } = this.props;\n    return {\n      [eventListener]: handlerFunction,\n    };\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  callActiveCallback = (selectedItem) => {\n    if (\n      typeof this.props.onPageActive !== 'undefined' &&\n      typeof this.props.onPageActive === 'function'\n    ) {\n      this.props.onPageActive({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n      pageLabelBuilder,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        pageSelectedHandler={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n        pageLabelBuilder={pageLabelBuilder}\n        getEventListener={this.getEventListener}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              breakHandler={this.handleBreakClick.bind(null, index)}\n              getEventListener={this.getEventListener}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      pageCount,\n      containerClassName,\n      previousLabel,\n      previousClassName,\n      previousLinkClassName,\n      previousAriaLabel,\n      prevRel,\n      nextLabel,\n      nextClassName,\n      nextLinkClassName,\n      nextAriaLabel,\n      nextRel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            aria-label={previousAriaLabel}\n            rel={prevRel}\n            {...this.getEventListener(this.handlePreviousPage)}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            aria-label={nextAriaLabel}\n            rel={nextRel}\n            {...this.getEventListener(this.handleNextPage)}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n"],"sourceRoot":""}