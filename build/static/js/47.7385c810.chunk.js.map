{"version":3,"sources":["service/apiActions/modalAction/modalAction.js","service/apiActions/carouselAction/carouselAction.js","components/modals/store/StoreInformationModal.js","views/private/store/StoreInformation.js"],"names":["setProductModal","visible","action","icon","async","dispatch","type","SET_PRODUCTEDITMODAL_VISIBILIT","payload","status","data","setProductDetailsModal","product","SET_PRODUCT_DETAILS_MODAL","editProductModal","updateProduct","EDIT_PRODUCT_MODAL","setAlertModal","alert","module","id","ALERT_MODAL","setAlertBanModal","ALERT_BAN_MODAL","setStoreModal","storeInfo","UDPATE_STORE_INFORMATION","addBrandModal","branch","ADD_BRAND_MODAL","brand","addCategoryModal","category","ADD_CATEGORY_MODAL","addAccountModal","employee","ADD_EMPLOYEE_MODAL","changePasswordModal","CHANGE_PASSWORD_MODAL","setLoginModal","LOGIN_MODAL","setAddressModal","address","SET_ADDRESS_MODAL","setSupplierModal","supplier","SET_SUPPLIER_MODAL","setSupplyModal","supply","SET_SUPPLY_MODAL","setScanModal","SET_SCAN_MODAL","setPromoModal","promo","SET_PROMO_MODAL","setTermAndConditionModal","termsAndCondition","SET_TERMS_AND_CONDITION_MODAL","getCarouselImages","GET_CAROUSEL_IMAGES","carouselImages","fileName","CAROUSEL_FOLDER_DIRECTORY","BranchModal","Component","state","loading","message","successFully","storeInfoState","this","storeState","editorState","EditorState","createEmpty","validated","storeId","storeName","acronym","email","location","contactNumber","manageStoreInfo","prevProps","prevState","modalVisible","props","setState","description","createWithContent","convertFromRaw","JSON","parse","branchId","branchName","handleOnChange","event","name","target","value","onEditorStateChange","handleOnSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","stringify","convertToRaw","getCurrentContent","updateStoreInformation","then","catch","validateEmail","test","componentDidUpdate","render","size","scrollable","onDismiss","clearMessage","className","role","onSubmit","noValidate","sm","md","lg","onChange","placeholder","required","htmlFor","valid","invalid","wrapperClassName","editorClassName","toolbar","options","color","variant","onClick","disabled","form","connect","modalVisibleResponse","messageResponse","StoreInformation","getResponseCarouselImages","manageStoreInformationResponse","carouselResponser","response","carouselData","console","log","storeInformationResponse","getStoreInformation","createMarkup","html","__html","DOMPurify","sanitize","componentDidMount","content","arrowStyles","position","zIndex","top","height","cursor","border","margin","marginBottom","convertFromRawContent","draftToHtml","StoreInformationModal","showArrows","autoPlay","showThumbs","infiniteLoop","dynamicHeight","renderArrowPrev","onClickHandler","hasPrev","label","title","style","left","renderArrowNext","hasNext","right","map","image","index","src","alt","dangerouslySetInnerHTML"],"mappings":"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","file":"static/js/47.7385c810.chunk.js","sourcesContent":["import {\n  ADD_BRANCH_MODAL,\n  ALERT_MODAL,\n  EDIT_PRODUCT_MODAL,\n  SET_PRODUCTEDITMODAL_VISIBILIT,\n  ADD_BRAND_MODAL,\n  ADD_CATEGORY_MODAL,\n  ADD_EMPLOYEE_MODAL,\n  SET_PRODUCT_DETAILS_MODAL,\n  LOGIN_MODAL,\n  SET_ADDRESS_MODAL,\n  SET_SUPPLIER_MODAL,\n  SET_SUPPLY_MODAL,\n  SET_SCAN_MODAL,\n  SET_PROMO_MODAL,\n  ALERT_BAN_MODAL,\n  CHANGE_PASSWORD_MODAL,\n  UDPATE_STORE_INFORMATION,\n  SET_TERMS_AND_CONDITION_MODAL,\n} from \"src/service/redux/constants\"\n\nexport const setProductModal = (visible, action, icon) => async (dispatch) => {\n  dispatch({\n    type: SET_PRODUCTEDITMODAL_VISIBILIT,\n    payload: {\n      status: 200,\n      data: {\n        visible: visible,\n        action: action,\n        icon: icon,\n      },\n    },\n  })\n}\nexport const setProductDetailsModal =\n  (visible, action, product) => async (dispatch) => {\n    dispatch({\n      type: SET_PRODUCT_DETAILS_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          product: product,\n        },\n      },\n    })\n  }\nexport const editProductModal =\n  (visible, action, updateProduct, icon) => async (dispatch) => {\n    dispatch({\n      type: EDIT_PRODUCT_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          product: updateProduct,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const setAlertModal =\n  (alert, action, module, id) => async (dispatch) => {\n    dispatch({\n      type: ALERT_MODAL,\n      payload: {\n        action: action,\n        module: module,\n        alert: alert,\n        data: {\n          id: id,\n        },\n      },\n    })\n  }\nexport const setAlertBanModal =\n  (alert, action, module, id) => async (dispatch) => {\n    dispatch({\n      type: ALERT_BAN_MODAL,\n      payload: {\n        action: action,\n        module: module,\n        alert: alert,\n        data: {\n          id: id,\n        },\n      },\n    })\n  }\nexport const setStoreModal =\n  (visible, action, storeInfo, icon) => async (dispatch) => {\n    dispatch({\n      type: UDPATE_STORE_INFORMATION,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          storeInfo: storeInfo,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addBrandModal =\n  (visible, action, branch, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_BRAND_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          brand: branch,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addCategoryModal =\n  (visible, action, category, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_CATEGORY_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          category: category,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const addAccountModal =\n  (visible, action, employee, icon) => async (dispatch) => {\n    dispatch({\n      type: ADD_EMPLOYEE_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          employee: employee,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const changePasswordModal =\n  (visible, action, employee, icon) => async (dispatch) => {\n    dispatch({\n      type: CHANGE_PASSWORD_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          employee: employee,\n          icon: icon,\n        },\n      },\n    })\n  }\nexport const setLoginModal = (visible, action) => async (dispatch) => {\n  dispatch({\n    type: LOGIN_MODAL,\n    payload: {\n      data: {\n        visible: visible,\n        action: action,\n      },\n    },\n  })\n}\n\nexport const setAddressModal =\n  (visible, action, address, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_ADDRESS_MODAL,\n      payload: {\n        data: {\n          visible: visible,\n          action: action,\n          address: address,\n          icon: icon,\n        },\n      },\n    })\n  }\n\nexport const setSupplierModal =\n  (visible, action, supplier, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_SUPPLIER_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          supplier: supplier,\n        },\n      },\n    })\n  }\nexport const setSupplyModal =\n  (visible, action, supply, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_SUPPLY_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          supply: supply,\n        },\n      },\n    })\n  }\n\nexport const setScanModal = (visible, action) => async (dispatch) => {\n  dispatch({\n    type: SET_SCAN_MODAL,\n    payload: {\n      action: action,\n      data: {\n        visible: visible,\n      },\n    },\n  })\n}\nexport const setPromoModal =\n  (visible, action, promo, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_PROMO_MODAL,\n      payload: {\n        action: action,\n        data: {\n          visible: visible,\n          icon: icon,\n          promo: promo,\n        },\n      },\n    })\n  }\nexport const setTermAndConditionModal =\n  (visible, action, termsAndCondition, icon) => async (dispatch) => {\n    dispatch({\n      type: SET_TERMS_AND_CONDITION_MODAL,\n      payload: {\n        status: 200,\n        data: {\n          visible: visible,\n          action: action,\n          termsAndCondition: termsAndCondition,\n          icon: icon,\n        },\n      },\n    })\n  }","// import { GET_CAROUSEL_IMAGES, CAROUSEL_FOLDER_DIRECTORY } from \"../../../redux/constants\";\nimport { GET_CAROUSEL_IMAGES, CAROUSEL_FOLDER_DIRECTORY } from \"src/service/redux/constants\";\n\nexport const getCarouselImages = () => async (dispatch) => {\n    dispatch({\n        type: GET_CAROUSEL_IMAGES,\n        payload: {\n            status: 200,\n            data: {\n                carouselImages: [\n                    {\n                        fileName: CAROUSEL_FOLDER_DIRECTORY + \"rick.jpg\"\n                    },\n                    {\n                        fileName: CAROUSEL_FOLDER_DIRECTORY + \"NicePng_warehouse-icon-png_1212543.png\"\n                    }\n                ]\n            }\n        }\n    });\n\n}","import React, { Component } from \"react\"\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CButton,\n  CModalTitle,\n  CSpinner,\n  CForm,\n  CFormFloating,\n  CFormControl,\n  CFormLabel,\n  CCol,\n  CRow,\n  CContainer,\n  CInputGroup,\n  CFormFeedback,\n} from \"@coreui/react\"\n//redux\nimport { connect } from \"react-redux\"\n//action\nimport { setStoreModal } from \"src/service/apiActions/modalAction/modalAction\"\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction\"\nimport { convertFromRaw, convertToRaw, EditorState } from \"draft-js\"\nimport { Editor } from \"react-draft-wysiwyg\"\nimport { updateStoreInformation } from \"src/service/apiActions/storeAction/StoreInformationAction\"\nexport class BranchModal extends Component {\n  state = {\n    visible: false,\n    icon: \"\",\n    loading: false,\n    message: \"\",\n    action: \"\",\n    status: \"\",\n    successFully: \"\",\n    storeInfoState: this.storeState,\n    editorState: EditorState.createEmpty(),\n    validated: false,\n  }\n  storeState = {\n    storeId: \"\",\n    storeName: \"\",\n    acronym: \"\",\n    email: \"\",\n    location: \"\",\n    contactNumber: 0,\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.manageStoreInfo(prevProps, prevState)\n  }\n  manageStoreInfo = (prevProps, prevState) => {\n    if (prevProps.modalVisible !== this.props.modalVisible) {\n      let { visible, action, storeInfo, icon } = this.props.modalVisible\n      if (action === \"Edit\") {\n        this.setState({\n          visible: visible,\n          storeId: storeInfo.id,\n          storeName: storeInfo.storeName,\n          acronym: storeInfo.acronym,\n          email: storeInfo.email,\n          location: storeInfo.location,\n          contactNumber: storeInfo.contactNumber,\n          icon: icon,\n          action: action,\n          editorState: storeInfo.description\n            ? EditorState.createWithContent(\n                convertFromRaw(JSON.parse(storeInfo.description)),\n              )\n            : EditorState.createEmpty(),\n        })\n      } else {\n        this.setState({\n          visible: visible,\n          branchId: \"\",\n          branchName: \"\",\n          icon: \"\",\n          action: \"\",\n          loading: false,\n        })\n      }\n    }\n  }\n\n  handleOnChange = (event) => {\n    let name = event.target.name\n    this.setState({\n      [name]: event.target.value,\n    })\n  }\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    })\n  }\n  handleOnSubmit = (event) => {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n    this.setState({\n      validated: true,\n      loading: true,\n    })\n    const {\n      storeName,\n      acronym,\n      location,\n      email,\n      editorState,\n      contactNumber,\n      storeId,\n    } = this.state\n    const description = JSON.stringify(\n      convertToRaw(editorState.getCurrentContent()),\n    )\n    this.props\n      .updateStoreInformation(\n        storeId,\n        storeName,\n        acronym,\n        location,\n        description,\n        contactNumber,\n        email,\n      )\n      .then(() => {\n        this.setState({\n          loading: true,\n        })\n        this.props.setStoreModal(false, \"close\", \"\", \"\")\n      })\n      .catch(() => {\n        this.setState({\n          loading: true,\n        })\n        this.props.setStoreModal(false, \"close\", \"\", \"\")\n      })\n  }\n  // emailOnChange = (event) => {\n  //   let value = event.target.value\n\n  //   if (this.validateEmail(value)) {\n  //     this.setState({\n  //       validated: true,\n  //       email: value,\n  //     })\n  //   } else {\n  //     this.setState({\n  //       // validated: true,\n  //       email: value,\n  //     })\n  //   }\n  // }\n  validateEmail = (email) => {\n    const re = /^[\\w.+\\-]+@gmail\\.com$/\n    return re.test(email)\n  }\n  render() {\n    let {\n      visible,\n      action,\n      icon,\n      loading,\n      successFully,\n      message,\n      storeId,\n      storeName,\n      acronym,\n      email,\n      location,\n      contactNumber,\n      editorState,\n      validated,\n    } = this.state\n    return (\n      <div>\n        <CModal visible={visible} size=\"xl\" scrollable>\n          <CModalHeader\n            onDismiss={() => {\n              this.props.setStoreModal(false, \"close\", \"\", \"\")\n              this.props.clearMessage()\n            }}\n          >\n            <CModalTitle>\n              <div className=\"d-flex align-items-center\">\n                {icon}\n                {action + \" Store Information\"}\n              </div>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    successFully ? \"alert alert-success\" : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {message}\n                </div>\n              </div>\n            )}\n            <CForm\n              onSubmit={this.handleOnSubmit}\n              id=\"branch-form\"\n              noValidate\n              validated={validated}\n            >\n              <div className=\"mb-3\">\n                <CRow>\n                  <CCol sm=\"12\" md=\"6\" lg=\"6\">\n                    {/* <CInputGroup>\n                      <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\"> */}\n                    <CFormFloating className=\"mb-3\">\n                      <CFormControl\n                        name=\"storeName\"\n                        value={storeName}\n                        onChange={this.handleOnChange}\n                        type=\"text\"\n                        id=\"floatingStoreNameInput\"\n                        placeholder=\"Enter Store Name\"\n                        required\n                      />\n                      <CFormLabel htmlFor=\"floatingStoreNameInput\">\n                        Store name\n                      </CFormLabel>\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                      <CFormFeedback invalid>\n                        Acronym is Store name\n                      </CFormFeedback>\n                    </CFormFloating>\n\n                    {/* </CCol>\n                    </CInputGroup> */}\n                  </CCol>\n                  <CCol sm=\"12\" md=\"6\" lg=\"6\">\n                    <CFormFloating className=\"mb-3\">\n                      <CFormControl\n                        name=\"acronym\"\n                        value={acronym}\n                        onChange={this.handleOnChange}\n                        type=\"text\"\n                        id=\"floatingAcronymInput\"\n                        placeholder=\"Enter Acronym Name\"\n                        required\n                      />\n                      <CFormLabel htmlFor=\"floatingAcronymInput\">\n                        Acronym\n                      </CFormLabel>\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                      <CFormFeedback invalid>Acronym is Required</CFormFeedback>\n                    </CFormFloating>\n                  </CCol>\n                  <CCol sm=\"12\" md=\"6\" lg=\"6\">\n                    <CFormFloating className=\"mb-3\">\n                      <CFormControl\n                        name=\"contactNumber\"\n                        value={contactNumber}\n                        onChange={this.handleOnChange}\n                        type=\"text\"\n                        id=\"floatingContactNumberInput\"\n                        placeholder=\"Enter Contact Number\"\n                        required\n                      />\n                      <CFormLabel htmlFor=\"floatingContactNumberInput\">\n                        Contact Number\n                      </CFormLabel>\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                      <CFormFeedback invalid>\n                        Contact Number is Required\n                      </CFormFeedback>\n                    </CFormFloating>\n                  </CCol>\n                  <CCol sm=\"12\" md=\"6\" lg=\"6\">\n                    <CFormFloating className=\"mb-3\">\n                      <CFormControl\n                        name=\"email\"\n                        value={email}\n                        onChange={this.handleOnChange}\n                        type=\"email\"\n                        id=\"floatingEmailInput\"\n                        placeholder=\"Enter Email\"\n                        required\n                      />\n                      <CFormLabel htmlFor=\"floatingEmailInput\">\n                        Email Address\n                      </CFormLabel>\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                      <CFormFeedback invalid>\n                        Email Address is Required\n                      </CFormFeedback>\n                    </CFormFloating>\n                  </CCol>\n                  <CCol sm=\"12\">\n                    <CFormFloating className=\"mb-3\">\n                      <CFormControl\n                        name=\"location\"\n                        value={location}\n                        onChange={this.handleOnChange}\n                        type=\"text\"\n                        id=\"floatingLocationInput\"\n                        placeholder=\"Enter Location\"\n                        required\n                      />\n                      <CFormLabel htmlFor=\"floatingLocationInput\">\n                        Location Address\n                      </CFormLabel>\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                      <CFormFeedback invalid>\n                        Location Address is Required\n                      </CFormFeedback>\n                    </CFormFloating>\n                  </CCol>\n                  <CCol sm=\"12\" md=\"12\" lg=\"12\" className=\"mt-4\">\n                    <Editor\n                      editorState={editorState}\n                      wrapperClassName=\"editor-wrapper\"\n                      editorClassName=\"editor\"\n                      onEditorStateChange={this.onEditorStateChange}\n                      placeholder=\"Inser Description about your Store\"\n                      toolbar={{\n                        options: [\n                          \"inline\",\n                          \"blockType\",\n                          \"fontSize\",\n                          \"fontFamily\",\n                          \"list\",\n                          \"textAlign\",\n                          \"colorPicker\",\n                          \"emoji\",\n                          \"remove\",\n                          \"history\",\n                        ],\n                      }}\n                      required\n                    />\n                  </CCol>\n                </CRow>\n              </div>\n            </CForm>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              color=\"dark\"\n              variant=\"ghost\"\n              onClick={() => {\n                this.props.setStoreModal(false, \"close\", \"\", \"\")\n                this.props.clearMessage()\n              }}\n            >\n              Close\n            </CButton>\n            <CButton\n              color=\"primary\"\n              disabled={loading}\n              type=\"submit\"\n              form=\"branch-form\"\n            >\n              {loading && <CSpinner size=\"sm\" className=\"ms-1\" />}\n              Save {action === \"Edit\" ? \"Changes\" : \"Branch\"}\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    modalVisible: state.modalVisibleResponse,\n    messageResponse: state.messageResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  setStoreModal,\n  clearMessage,\n  updateStoreInformation,\n})(BranchModal)\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { getCarouselImages } from \"src/service/apiActions/carouselAction/carouselAction\"\nimport { Carousel } from \"react-responsive-carousel\"\nimport * as IoIcons from \"react-icons/io\"\nimport * as FaIcons from \"react-icons/fa\"\n\nimport {\n  CCard,\n  CCardTitle,\n  CContainer,\n  CButton,\n  CCardBody,\n  CAvatar,\n} from \"@coreui/react\"\nimport * as MdIcons from \"react-icons/md\"\nimport { EditorState, convertFromRaw, convertToRaw } from \"draft-js\"\nimport DOMPurify from \"dompurify\"\nimport draftToHtml from \"draftjs-to-html\"\nimport { setStoreModal } from \"src/service/apiActions/modalAction/modalAction\"\nimport StoreInformationModal from \"src/components/modals/store/StoreInformationModal\"\nimport { getStoreInformation } from \"src/service/apiActions/storeAction/StoreInformationAction\"\n\nexport class StoreInformation extends Component {\n  state = {\n    carouselImages: [],\n    storeInfo: [],\n    visible: false,\n  }\n  componentDidMount() {\n    this.props.getCarouselImages()\n  }\n  componentDidUpdate = (prevProps, prevState) => {\n    this.getResponseCarouselImages(prevProps, prevState)\n    this.manageStoreInformationResponse(prevProps, prevState)\n    this.manageStoreInfo(prevProps, prevState)\n  }\n  getResponseCarouselImages = (prevProps, prevState) => {\n    if (prevProps.carouselResponser !== this.props.carouselResponser) {\n      let response = this.props.carouselResponser\n      if (response.action === \"RETRIEVE\") {\n        if (response.status >= 200 && response.status <= 300) {\n          this.setState({\n            carouselImages: response.carouselData,\n          })\n        } else if (response.status < 400) {\n          console.log(\"ERROR\")\n        }\n      }\n    }\n  }\n  manageStoreInformationResponse = (prevProps, prevState) => {\n    if (\n      prevProps.storeInformationResponse !== this.props.storeInformationResponse\n    ) {\n      const { action, status, data } = this.props.storeInformationResponse\n      if (action === \"GET_STORE_INFORMATION\" && status === 200) {\n        this.setState({\n          storeInfo: data.storeInfo,\n        })\n      }\n    }\n  }\n  manageStoreInfo = (prevProps, prevState) => {\n    if (prevProps.modalVisible !== this.props.modalVisible) {\n      let { action } = this.props.modalVisible\n      if (action === \"close\") {\n        this.props.getStoreInformation()\n      }\n    }\n  }\n  createMarkup = (html) => {\n    return {\n      __html: DOMPurify.sanitize(html),\n    }\n  }\n  render() {\n    let { carouselImages, storeInfo, visible } = this.state\n    let content = storeInfo.description && JSON.parse(storeInfo.description)\n    const arrowStyles = {\n      position: \"absolute\",\n      zIndex: \"2\",\n      top: \"calc(4% - 16px)\",\n      // width: \"30\",\n      height: \"100%\",\n      cursor: \"pointer\",\n      border: \"none\",\n    }\n\n    const margin = {\n      marginBottom: \"12px\",\n    }\n    let convertFromRawContent = \"\"\n    let html = <></>\n    if (content) {\n      convertFromRawContent = convertFromRaw(content)\n      const editorState = EditorState.createWithContent(convertFromRawContent)\n      html = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n    }\n\n    return (\n      <>\n        <StoreInformationModal />\n        <div>\n          <div className=\"mb-2 text-end\">\n            <CButton variant=\"ghost\" size=\"sm\">\n              <FaIcons.FaPlus size={20} />,\n            </CButton>\n            <CButton color=\"info\" variant=\"ghost\" size=\"sm\">\n              <MdIcons.MdModeEdit size=\"20\" />\n            </CButton>\n          </div>\n          <Carousel\n            showArrows={true}\n            autoPlay={true}\n            showThumbs={false}\n            infiniteLoop={true}\n            dynamicHeight={false}\n            renderArrowPrev={(onClickHandler, hasPrev, label) =>\n              hasPrev && (\n                <button\n                  type=\"button\"\n                  onClick={onClickHandler}\n                  title={label}\n                  className=\"arrow-style\"\n                  style={{ ...arrowStyles, left: 0 }}\n                >\n                  <IoIcons.IoIosArrowBack\n                    size=\"40\"\n                    style={{ color: \"white\" }}\n                  />\n                </button>\n              )\n            }\n            renderArrowNext={(onClickHandler, hasNext, label) =>\n              hasNext && (\n                <button\n                  type=\"button\"\n                  onClick={onClickHandler}\n                  title={label}\n                  className=\"arrow-style\"\n                  style={{ ...arrowStyles, right: 0 }}\n                >\n                  <IoIcons.IoIosArrowForward\n                    size=\"40\"\n                    style={{ color: \"white\" }}\n                  />\n                </button>\n              )\n            }\n          >\n            {carouselImages &&\n              carouselImages.map((image, index) => {\n                return (\n                  <div key={index}>\n                    <img\n                      className=\"d-block \"\n                      height=\"400\"\n                      src={image.fileName}\n                      alt={image.fileName}\n                    />\n                  </div>\n                )\n              })}\n          </Carousel>\n        </div>\n\n        <CContainer className=\"mt-3 \">\n          <CCard className=\" p-3\">\n            {storeInfo.acronym ? (\n              <CAvatar color=\"warning\" size=\"xl\">\n                {storeInfo.acronym}\n              </CAvatar>\n            ) : (\n              <CAvatar color=\"warning\" size=\"xl\">\n                IMS\n              </CAvatar>\n            )}\n            <CCardTitle className=\"d-flex justify-content-between mt-3\">\n              <div className=\"font-style d-flex \">\n                <div className=\"font-style d-flex flex-column align-items-start \">\n                  <h6 className=\"m-0 pe-3 mb-2\">Store name:</h6>\n                  <h6 className=\"m-0 pe-3 mb-2\">Acronym name:</h6>\n                  <h6 className=\"m-0 pe-3 mb-2\">Contact #:</h6>\n                  <h6 className=\"m-0 pe-3 mb-2\">Email:</h6>\n                  <h6 className=\"m-0 pe-3 mb-2\">Location:</h6>\n                </div>\n                <div className=\"font-style d-flex flex-column align-items-start text-black-50\">\n                  <strong style={{ ...margin }}>\n                    {storeInfo.storeName ? (\n                      <>\n                        <span>{storeInfo.storeName}</span>\n                      </>\n                    ) : (\n                      <span className=\"text-warning\">--</span>\n                    )}\n                  </strong>\n                  <strong style={{ ...margin }}>\n                    {storeInfo.acronym ? (\n                      <>\n                        <span>{storeInfo.acronym}</span>\n                      </>\n                    ) : (\n                      <span className=\"text-warning\">--</span>\n                    )}\n                  </strong>\n                  <strong style={{ ...margin }}>\n                    {storeInfo.contactNumber ? (\n                      <>\n                        <span>{storeInfo.contactNumber}</span>\n                      </>\n                    ) : (\n                      <span className=\"text-warning\">--</span>\n                    )}\n                  </strong>\n                  <strong style={{ ...margin }}>\n                    {storeInfo.email ? (\n                      <>\n                        <span>{storeInfo.email}</span>\n                      </>\n                    ) : (\n                      <span className=\"text-warning\">--</span>\n                    )}\n                  </strong>\n                  <strong style={{ ...margin }}>\n                    {storeInfo.location ? (\n                      <>\n                        <span>{storeInfo.location}</span>\n                      </>\n                    ) : (\n                      <span className=\"text-warning\">--</span>\n                    )}\n                  </strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-end align-items-start mb-3\">\n                <CButton\n                  color=\"info\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() =>\n                    this.props.setStoreModal(\n                      !visible,\n                      \"Edit\",\n                      storeInfo,\n                      <MdIcons.MdModeEdit size=\"20\" className=\"me-2\" />,\n                    )\n                  }\n                >\n                  <MdIcons.MdModeEdit size=\"20\" />\n                </CButton>\n              </div>\n            </CCardTitle>\n          </CCard>\n          <CCard className=\"mt-3 p-3\">\n            <CCardBody>\n              {content ? (\n                <>\n                  <div\n                    className=\"preview ps-4\"\n                    dangerouslySetInnerHTML={this.createMarkup(html)}\n                  ></div>\n                </>\n              ) : (\n                <>\n                  <div className=\"preview ps-4 text-warning\">\n                    No Description\n                  </div>\n                </>\n              )}\n            </CCardBody>\n          </CCard>\n        </CContainer>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    carouselResponser: state.carouselResponser,\n    storeInformationResponse: state.storeInformationResponse,\n    modalVisible: state.modalVisibleResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  getCarouselImages,\n  getStoreInformation,\n  setStoreModal,\n})(StoreInformation)\n"],"sourceRoot":""}