{"version":3,"sources":["views/private/order/Order.js"],"names":["Orders","React","lazy","Order","Component","constructor","props","super","state","orderStatus","activeKey","totalCounts","PENDING","CONFIRMED","SHIPPED","DELIVERED","CANCEL","REQUEST_REFUND","REFUNDED","manageorderRepsonse","prevProps","prevState","orderResponse","this","status","action","data","console","log","setState","orderStatusCount","totalCountChange","bind","roles","userResponse","credentials","permission","roleName","componentDidUpdate","render","variant","role","layout","href","active","onClick","color","style","margin","padding","overflow","visible","fallback","className","size","connect"],"mappings":"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","file":"static/js/79.1479aa8e.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\"\nimport { connect } from \"react-redux\"\nimport Roles from \"src/router/config\"\n\nimport {\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CSpinner,\n  CForm,\n  CInputGroup,\n  CButton,\n  CBadge,\n  CFormControl,\n} from \"@coreui/react\"\nimport { DotLoader } from \"react-spinners\"\n\n// icon\n// import * as FiIcons from 'react-icons/fi'\n//component tab\nimport * as FaIcons from \"react-icons/fa\"\n\nconst Orders = React.lazy(() => import(\"src/components/orderTabContent/Orders\"))\n\nexport class Order extends Component {\n  state = {\n    orderStatus: \"pending\",\n    activeKey: 1,\n    totalCounts: {\n      PENDING: 0,\n      CONFIRMED: 0,\n      SHIPPED: 0,\n      DELIVERED: 0,\n      CANCEL: 0,\n      REQUEST_REFUND: 0,\n      REFUNDED: 0,\n    },\n  }\n\n  constructor(props) {\n    super(props)\n    this.totalCountChange = this.totalCountChange.bind(this)\n    let { roles } = this.props.userResponse.credentials\n    this.state.permission = roles.roleName ? roles.roleName : roles\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.manageorderRepsonse(prevProps, prevState)\n  }\n\n  manageorderRepsonse = (prevProps, prevState) => {\n    if (prevProps.orderResponse !== this.props.orderResponse) {\n      let { status, action, data } = this.props.orderResponse\n      console.log(data)\n      if (status === 200 && action === \"GET_ORDERS\") {\n        this.setState({\n          totalCounts: data.orderStatusCount,\n        })\n      }\n    }\n  }\n\n  totalCountChange(totalCounts) {\n    this.setState({\n      totalCounts: totalCounts,\n    })\n  }\n\n  render() {\n    const { orderStatus, activeKey, totalCounts, permission } = this.state\n    const tabStyle = {\n      margin: \"10px 0\",\n      padding: \"12px 16px\",\n      overflow: \"hidden\",\n    }\n    return (\n      <>\n        {/* <div className=\"d-flex justify-content-end mb-2\">\n          <CForm className=\"w-50\">\n            <CInputGroup>\n              <CFormControl\n                type=\"text\"\n                id=\"floatingInput\"\n                placeholder=\"Search\"\n                className=\"p-2\"\n              />\n              <CButton\n                type=\"button\"\n                color=\"info\"\n                variant=\"outline\"\n                id=\"button-addon2\"\n                className=\"\"\n              >\n                <FaIcons.FaSearch />\n              </CButton>\n            </CInputGroup>\n          </CForm>\n        </div> */}\n        <CNav variant=\"pills\" role=\"tablist\" layout=\"fill\">\n          <CNavItem>\n            <CNavLink\n              href=\"#pending\"\n              active={activeKey === 1}\n              onClick={() => {\n                this.setState({ activeKey: 1, orderStatus: \"pending\" })\n              }}\n            >\n              Pending{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.PENDING ? totalCounts.PENDING : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#confirmed\"\n              active={activeKey === 2}\n              onClick={() => {\n                this.setState({ activeKey: 2, orderStatus: \"confirmed\" })\n              }}\n            >\n              Confirmed{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.CONFIRMED ? totalCounts.CONFIRMED : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#shipped\"\n              active={activeKey === 3}\n              onClick={() => {\n                this.setState({ activeKey: 3, orderStatus: \"shipped\" })\n              }}\n            >\n              Shipped{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.SHIPPED ? totalCounts.SHIPPED : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#delivered\"\n              active={activeKey === 4}\n              onClick={() => {\n                this.setState({ activeKey: 4, orderStatus: \"delivered\" })\n              }}\n            >\n              Delivered{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.DELIVERED ? totalCounts.DELIVERED : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#refund\"\n              active={activeKey === 5}\n              onClick={() => {\n                this.setState({ activeKey: 5, orderStatus: \"request_refund\" })\n              }}\n            >\n              Request Refund{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.REQUEST_REFUND ? totalCounts.REQUEST_REFUND : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#refund\"\n              active={activeKey === 6}\n              onClick={() => {\n                this.setState({ activeKey: 6, orderStatus: \"refunded\" })\n              }}\n            >\n              Refunded{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.REFUNDED ? totalCounts.REFUNDED : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n\n        <CTabContent style={tabStyle}>\n          <CTabPane\n            role=\"tabpanel\"\n            aria-labelledby=\"contact-tab\"\n            visible={true}\n          >\n            <Suspense\n              fallback={\n                <div className=\"d-flex justify-content-center align-items-center  position-fixed spinner\">\n                  <DotLoader color=\"#36D7B7\" size={100} />\n                </div>\n              }\n            >\n              <Orders\n                key={orderStatus}\n                status={orderStatus}\n                totalCounts={totalCounts}\n                totalCountChange={this.totalCountChange}\n              />\n            </Suspense>\n          </CTabPane>\n        </CTabContent>\n\n        {/* </CContainer> */}\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    orderResponse: state.orderResponse,\n    userResponse: state.userResponse,\n  }\n}\nexport default connect(mapStateToProps, {})(Order)\n"],"sourceRoot":""}