{"version":3,"sources":["views/common/public/login/Login.js","service/apiActions/messageAction/messageAction.js","_helper/history.js"],"names":["RightFormCard","lazy","Login","Component","constructor","props","super","state","type","username","password","loading","validation","message","permission","isLoggedIn","storeInfo","handleOnChange","event","name","target","this","setState","value","handleShowPassword","preventDefault","handleSubmit","length","authenticateUser","then","window","location","reload","catch","data","messageResponse","componentDidUpdate","prevProps","prevState","manageStoreInformationResponse","storeInformationResponse","action","status","history","listen","clearMessage","componentDidMount","redirectSuccessAuthentication","getStoreInformation","userResponse","roleName","credentials","roles","render","Roles","SUPER_ADMIN","ADMIN","to","config","api","private","prefixFrontendUrl","margin","marginBottom","position","className","style","cursor","acronym","storeName","md","lg","noValidate","validated","onSubmit","sm","xs","autoCorrect","id","placeholder","onChange","required","htmlFor","size","invalid","onClick","color","width","disabled","role","button","connect","async","dispatch","CLEAR_MESSAGE","payload","createBrowserHistory"],"mappings":"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","file":"static/js/46.189170e3.chunk.js","sourcesContent":["import {\n  CContainer,\n  CFormFloating,\n  CFormControl,\n  CFormLabel,\n  CRow,\n  CCol,\n  CHeader,\n  CButton,\n  CForm,\n  CCard,\n  CCardGroup,\n  CCardBody,\n  CInputGroup,\n  CFormFeedback,\n  CSpinner,\n} from \"@coreui/react\"\nimport { connect } from \"react-redux\"\nimport { authenticateUser } from \"src/service/apiActions/userAction/userAction.js\"\n\nimport React, { Component, lazy } from \"react\"\n\n//icons\nimport * as FaIcons from \"react-icons/fa\"\nimport * as FiIcons from \"react-icons/fi\"\n\nimport { Link, Redirect } from \"react-router-dom\"\nimport { history } from \"src/_helper/history.js\"\n\n// clear message\nimport { clearMessage } from \"src/service/apiActions/messageAction/messageAction.js\"\nimport Roles from \"src/router/config/Roles.js\"\nimport config from \"../../../../config\"\nimport { getStoreInformation } from \"src/service/apiActions/storeAction/StoreInformationAction\"\nconst RightFormCard = lazy(() =>\n  import(\"../../../../components/public/RightFormCard.js\"),\n)\nconst style = {\n  marginRight: \"10px\",\n}\n\nexport class Login extends Component {\n  state = {\n    type: \"password\",\n    username: \"\",\n    password: \"\",\n    loading: false,\n    validation: false,\n    message: \"\",\n    permission: \"\",\n    isLoggedIn: false,\n    storeInfo: [],\n  }\n  constructor(props) {\n    super(props)\n    history.listen((location) => {\n      clearMessage() // clear message when changing location\n    })\n  }\n  handleOnChange = (event) => {\n    const name = event.target.name\n    this.setState({\n      [name]: event.target.value,\n    })\n  }\n  handleShowPassword = (event) => {\n    const { type } = this.state\n    event.preventDefault()\n    this.setState({\n      type: type === \"password\" ? \"text\" : \"password\",\n    })\n  }\n  handleSubmit = (event) => {\n    // const { history } = this.props;\n    const { username, password } = this.state\n    // const form = event.currentTarget\n    event.preventDefault()\n    this.setState({\n      validation: true,\n      loading: true,\n    })\n    if (username.length !== 0 && password.length !== 0) {\n      this.props\n        .authenticateUser(username, password)\n        .then(() => {\n          // history.push(\"/home\");\n          window.location.reload()\n        })\n        .catch(() => {\n          let { data } = this.props.messageResponse\n          this.setState({\n            loading: false,\n            message: data.message,\n          })\n        })\n    } else {\n      this.setState({\n        loading: false,\n      })\n    }\n  }\n  componentDidMount() {\n    this.redirectSuccessAuthentication()\n    this.props.getStoreInformation()\n  }\n  redirectSuccessAuthentication() {\n    const isLoggedIn = this.props.userResponse.isLoggedIn\n    if (isLoggedIn) {\n      let roleName = this.props.userResponse.credentials.roles.roleName\n      let permission = roleName\n        ? roleName\n        : this.props.userResponse.credentials.roles\n\n      this.setState({\n        isLoggedIn: isLoggedIn,\n        permission: permission,\n      })\n    }\n  }\n  componentDidUpdate = (prevProps, prevState) => {\n    this.manageStoreInformationResponse(prevProps, prevState)\n  }\n  manageStoreInformationResponse = (prevProps, prevState) => {\n    if (\n      prevProps.storeInformationResponse !== this.props.storeInformationResponse\n    ) {\n      const { action, status, data } = this.props.storeInformationResponse\n      if (action === \"GET_STORE_INFORMATION\" && status === 200) {\n        this.setState({\n          storeInfo: data.storeInfo,\n        })\n      }\n    }\n  }\n  render() {\n    let {\n      type,\n      username,\n      password,\n      validation,\n      loading,\n      message,\n      permission,\n      isLoggedIn,\n      storeInfo,\n    } = this.state\n    if (isLoggedIn) {\n      if (permission === Roles.SUPER_ADMIN || permission === Roles.ADMIN) {\n        return <Redirect to={config.api.private.prefixFrontendUrl + \"/app\"} />\n      } else {\n        return <Redirect to={config.api.private.prefixFrontendUrl + \"/home\"} />\n      }\n    }\n    const margin = {\n      marginBottom: \"12px\",\n    }\n\n    return (\n      <>\n        <CHeader position=\"sticky\">\n          <CContainer>\n            <Link\n              className=\"nav-link\"\n              to={config.api.private.prefixFrontendUrl + \"/home\"}\n              style={{ cursor: \"pointer\" }}\n            >\n              <Link\n                className=\"nav-link\"\n                to={config.api.private.prefixFrontendUrl + \"/home\"}\n                style={{ cursor: \"pointer\" }}\n              >\n                {storeInfo.acronym ? (\n                  <strong style={{ ...margin }}>\n                    {storeInfo.acronym}\n                  </strong>\n                ) : storeInfo.storeName ? (\n                  <strong style={{ ...margin }}>\n                    {storeInfo.storeName}\n                  </strong>\n                ) : (\n                  <strong style={{ ...margin }}>\n                    IMSs\n                  </strong>\n                )}\n              </Link>\n            </Link>\n          </CContainer>\n        </CHeader>\n        <div className=\"min-vh-100 d-flex flex-row align-items-center text-dark \">\n          <CContainer>\n            <CRow className=\"justify-content-center \">\n              <CCol md=\"12\" lg=\"8\">\n                <CCardGroup className=\"shadow-lg \">\n                  <CCard className=\"p-4 m-0 left-to-right form-container border-0\">\n                    <CCardBody>\n                      <CForm\n                        noValidate\n                        validated={validation}\n                        onSubmit={this.handleSubmit}\n                      >\n                        <CCol\n                          sm=\"12\"\n                          md=\"12\"\n                          lg=\"12\"\n                          className=\"d-flex justify-content-center p-3\"\n                        >\n                          <h2 className=\"text-dark\">Login</h2>\n                        </CCol>\n                        <CInputGroup>\n                          <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\">\n                            <CFormFloating className=\"mb-3 text-dark \">\n                              <CFormControl\n                                name=\"username\"\n                                type=\"text\"\n                                autoCorrect=\"false\"\n                                id=\"floatingInput\"\n                                placeholder=\"username\"\n                                onChange={this.handleOnChange}\n                                value={username}\n                                required\n                                className=\"rounded-pill  ps-4 pe-4\"\n                              />\n                              <CFormLabel\n                                htmlFor=\"floatingInput \"\n                                className=\"ps-4 pe-4\"\n                              >\n                                <FaIcons.FaUserCircle size={18} />\n                                <span className=\"ps-2\">Username</span>\n                              </CFormLabel>\n                              <CFormFeedback invalid>\n                                Please provide a valid username\n                              </CFormFeedback>\n                            </CFormFloating>\n                          </CCol>\n                        </CInputGroup>\n                        <CInputGroup>\n                          <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\">\n                            <CFormFloating className=\"text-dark position-relative\">\n                              <CFormControl\n                                name=\"password\"\n                                type={type}\n                                id=\"floatingPassword\"\n                                autoCorrect=\"false\"\n                                placeholder=\"Password\"\n                                onChange={this.handleOnChange}\n                                value={password}\n                                required\n                                className=\"rounded-pill ps-4 pe-4\"\n                              />\n                              <CFormLabel\n                                htmlFor=\"exampleFormControlTextarea1 \"\n                                className=\"ps-4 pe-4\"\n                              >\n                                <FaIcons.FaLock size={18} />\n                                <span className=\"ps-2\">Password</span>\n                              </CFormLabel>\n                              <span\n                                onClick={this.handleShowPassword}\n                                className=\"position-absolute top-50 end-0 translate-middle-y ps-4 pe-4\"\n                              >\n                                {type === \"password\" ? (\n                                  <FaIcons.FaEyeSlash size={20} />\n                                ) : (\n                                  <FaIcons.FaEye size={20} />\n                                )}\n                              </span>\n                              <CFormFeedback invalid>\n                                Please provide a valid password\n                              </CFormFeedback>\n                            </CFormFloating>\n                          </CCol>\n                        </CInputGroup>\n\n                        <CCol\n                          sm=\"12\"\n                          md=\"12\"\n                          lg=\"12\"\n                          className=\"d-flex flex-column justify-content-center\"\n                        >\n                          <CButton\n                            type=\"submit\"\n                            color=\"info\"\n                            size=\"lg\"\n                            style={{ margin: \"20px auto\", width: \"50%\" }}\n                            className=\"d-flex justify-content-center align-items-center position-relative overflow-hidden login-btn\"\n                            disabled={loading}\n                          >\n                            {loading ? (\n                              <CSpinner size=\"sm\" />\n                            ) : (\n                              <span className=\"d-flex align-items-center login-icon me-2\">\n                                <FiIcons.FiLogIn size={20} />\n                              </span>\n                            )}\n\n                            <span className=\"label-btn \">Login</span>\n                          </CButton>\n\n                          <Link\n                            to={\n                              config.api.private.prefixFrontendUrl +\n                              \"/password/forgot\"\n                            }\n                          >\n                            Forgot Password\n                          </Link>\n                        </CCol>\n                        {message && (\n                          <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                              {message}\n                            </div>\n                          </div>\n                        )}\n                      </CForm>\n                    </CCardBody>\n                  </CCard>\n                  <RightFormCard button=\"register\" />\n                </CCardGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </div>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userResponse: state.userResponse,\n    messageResponse: state.messageResponse,\n    storeInformationResponse: state.storeInformationResponse,\n  }\n}\nexport default connect(mapStateToProps, {\n  getStoreInformation,\n  authenticateUser,\n  clearMessage,\n})(Login)\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"src/constants/userConstants\";\n\nexport const setMessage = (message, status) => async (dispatch) => {\n    dispatch({\n        type: SET_MESSAGE,\n        payload: {\n            status: status,\n            data: {\n                message: message\n            }\n        }\n    })\n\n}\nexport const setProductMessage = (message, status) => async (dispatch) => {\n    dispatch({\n        type: SET_MESSAGE,\n        payload: {\n            status: status,\n            data: {\n                message: message\n            }\n        }\n    })\n}\nexport const setImageMesssage = (message, status) => async (dispatch) => {\n    dispatch({\n        type: SET_MESSAGE,\n        payload: {\n            status: status,\n            data: {\n                message: message\n            }\n        }\n    })\n}\nexport const clearMessage = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_MESSAGE,\n        payload: {\n            status: '',\n            data: {\n                message: ''\n            }\n        }\n    })\n};","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();"],"sourceRoot":""}