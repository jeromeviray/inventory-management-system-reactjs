{"version":3,"sources":["views/private/order/Order.js"],"names":["Orders","React","lazy","Order","Component","constructor","props","super","state","orderStatus","activeKey","totalCounts","PENDING","CONFIRMED","SHIPPED","DELIVERED","CANCEL","REQUEST_REFUND","REFUNDED","manageorderRepsonse","prevProps","prevState","orderResponse","this","status","action","data","setState","orderStatusCount","totalCountChange","bind","roles","userResponse","credentials","permission","roleName","componentDidUpdate","render","variant","role","layout","href","active","onClick","color","style","margin","padding","overflow","visible","fallback","className","size","connect"],"mappings":"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","file":"static/js/79.059f52ff.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport {\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CBadge,\n} from \"@coreui/react\"\nimport { DotLoader } from \"react-spinners\"\n\n// icon\n// import * as FiIcons from 'react-icons/fi'\n//component tab\n// import * as FaIcons from \"react-icons/fa\"\n\nconst Orders = React.lazy(() => import(\"src/components/orderTabContent/Orders\"))\n\nexport class Order extends Component {\n  state = {\n    orderStatus: \"pending\",\n    activeKey: 1,\n    totalCounts: {\n      PENDING: 0,\n      CONFIRMED: 0,\n      SHIPPED: 0,\n      DELIVERED: 0,\n      CANCEL: 0,\n      REQUEST_REFUND: 0,\n      REFUNDED: 0,\n    },\n  }\n\n  constructor(props) {\n    super(props)\n    this.totalCountChange = this.totalCountChange.bind(this)\n    let { roles } = this.props.userResponse.credentials\n    this.state.permission = roles.roleName ? roles.roleName : roles\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.manageorderRepsonse(prevProps, prevState)\n  }\n\n  manageorderRepsonse = (prevProps, prevState) => {\n    if (prevProps.orderResponse !== this.props.orderResponse) {\n      let { status, action, data } = this.props.orderResponse\n      if (status === 200 && action === \"GET_ORDERS\") {\n        this.setState({\n          totalCounts: data.orderStatusCount,\n        })\n      }\n    }\n  }\n\n  totalCountChange(totalCounts) {\n    this.setState({\n      totalCounts: totalCounts,\n    })\n  }\n\n  render() {\n    const { orderStatus, activeKey, totalCounts, permission } = this.state\n    const tabStyle = {\n      margin: \"10px 0\",\n      padding: \"12px 16px\",\n      overflow: \"hidden\",\n    }\n    return (\n      <>\n\n        <CNav\n          variant=\"pills\"\n          role=\"tablist\"\n          layout=\"fill\"\n\n        // className=\"flex-column flex-sm-row\"\n        >\n          <CNavItem>\n            <CNavLink\n              href=\"#pending\"\n              active={activeKey === 1}\n              onClick={() => {\n                this.setState({ activeKey: 1, orderStatus: \"pending\" })\n              }}\n            >\n              Pending{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.PENDING ? totalCounts.PENDING : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#confirmed\"\n              active={activeKey === 2}\n              onClick={() => {\n                this.setState({ activeKey: 2, orderStatus: \"confirmed\" })\n              }}\n            >\n              Confirmed{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.CONFIRMED ? totalCounts.CONFIRMED : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#shipped\"\n              active={activeKey === 3}\n              onClick={() => {\n                this.setState({ activeKey: 3, orderStatus: \"shipped\" })\n              }}\n            >\n              Shipped{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.SHIPPED ? totalCounts.SHIPPED : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#delivered\"\n              active={activeKey === 4}\n              onClick={() => {\n                this.setState({ activeKey: 4, orderStatus: \"delivered\" })\n              }}\n            >\n              Delivered{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.DELIVERED ? totalCounts.DELIVERED : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#refund\"\n              active={activeKey === 5}\n              onClick={() => {\n                this.setState({ activeKey: 5, orderStatus: \"request_refund\" })\n              }}\n            >\n              Request Refund{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.REQUEST_REFUND ? totalCounts.REQUEST_REFUND : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              href=\"#refund\"\n              active={activeKey === 6}\n              onClick={() => {\n                this.setState({ activeKey: 6, orderStatus: \"refunded\" })\n              }}\n            >\n              Refunded{\" \"}\n              <CBadge color=\"warning\">\n                {totalCounts.REFUNDED ? totalCounts.REFUNDED : 0}\n              </CBadge>\n            </CNavLink>\n          </CNavItem>\n        </CNav>\n\n        <CTabContent style={tabStyle}>\n          <CTabPane\n            role=\"tabpanel\"\n            aria-labelledby=\"contact-tab\"\n            visible={true}\n          >\n            <Suspense\n              fallback={\n                <div className=\"d-flex justify-content-center align-items-center  position-fixed spinner\">\n                  <DotLoader color=\"#36D7B7\" size={100} />\n                </div>\n              }\n            >\n              <Orders\n                key={orderStatus}\n                status={orderStatus}\n                totalCounts={totalCounts}\n                totalCountChange={this.totalCountChange}\n              />\n            </Suspense>\n          </CTabPane>\n        </CTabContent>\n\n        {/* </CContainer> */}\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    orderResponse: state.orderResponse,\n    userResponse: state.userResponse,\n  }\n}\nexport default connect(mapStateToProps, {})(Order)\n"],"sourceRoot":""}